{"version":3,"sources":["webpack:///assets/js/evaluating/index.6fab2f806.js","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/echarts/lib/util/layout.js","webpack:///./node_modules/echarts/lib/model/Component.js","webpack:///./node_modules/echarts/lib/model/Series.js","webpack:///./node_modules/echarts/lib/view/Chart.js","webpack:///./node_modules/echarts/lib/component/toolbox/featureManager.js","webpack:///./node_modules/echarts/lib/visual/symbol.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/visual/VisualMapping.js","webpack:///./node_modules/echarts/lib/lang.js","webpack:///./node_modules/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/chart/treemap/helper.js","webpack:///./node_modules/echarts/lib/component/helper/sliderMove.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./node_modules/echarts/lib/chart/helper/Symbol.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/echarts/lib/processor/dataFilter.js","webpack:///./node_modules/echarts/lib/coord/geo/geoCreator.js","webpack:///./node_modules/echarts/lib/component/helper/RoamController.js","webpack:///./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./node_modules/echarts/lib/visual/visualSolution.js","webpack:///./node_modules/echarts/lib/util/component.js","webpack:///./node_modules/echarts/lib/view/Component.js","webpack:///./node_modules/echarts/lib/layout/points.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/layout/barGrid.js","webpack:///./node_modules/echarts/lib/component/helper/selectableMixin.js","webpack:///./node_modules/echarts/lib/visual/dataColor.js","webpack:///./node_modules/echarts/lib/component/helper/cursorHelper.js","webpack:///./node_modules/echarts/lib/chart/helper/LineDraw.js","webpack:///./node_modules/echarts/lib/chart/helper/Line.js","webpack:///./node_modules/echarts/lib/component/helper/BrushController.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/echarts/lib/coord/polar/polarCreator.js","webpack:///./node_modules/echarts/lib/component/dataZoom/helper.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerModel.js","webpack:///./node_modules/echarts/lib/component/marker/markerHelper.js","webpack:///./node_modules/echarts/lib/component/marker/MarkerView.js","webpack:///./node_modules/zrender/lib/svg/graphic.js","webpack:///./node_modules/zrender/lib/svg/core.js","webpack:///./node_modules/echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/echarts/lib/chart/line/poly.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js","webpack:///./node_modules/zrender/lib/contain/polygon.js","webpack:///./node_modules/echarts/lib/coord/View.js","webpack:///./node_modules/echarts/lib/component/helper/MapDraw.js","webpack:///./node_modules/echarts/lib/component/helper/interactionMutex.js","webpack:///./node_modules/echarts/lib/component/helper/roamHelper.js","webpack:///./node_modules/echarts/lib/action/geoRoam.js","webpack:///./node_modules/echarts/lib/action/roamHelper.js","webpack:///./node_modules/echarts/lib/data/Tree.js","webpack:///./node_modules/echarts/lib/data/helper/linkList.js","webpack:///./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack:///./node_modules/echarts/lib/chart/tree/commonLayout.js","webpack:///./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","webpack:///./node_modules/echarts/lib/component/parallel.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelCreator.js","webpack:///./node_modules/echarts/lib/component/helper/brushHelper.js","webpack:///./node_modules/echarts/lib/util/array/nest.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectLine.js","webpack:///./node_modules/echarts/lib/chart/helper/Polyline.js","webpack:///./node_modules/echarts/lib/component/singleAxis.js","webpack:///./node_modules/echarts/lib/component/axis/singleAxisHelper.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./node_modules/echarts/lib/component/visualMap/preprocessor.js","webpack:///./node_modules/echarts/lib/component/visualMap/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualEncoding.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapModel.js","webpack:///./node_modules/echarts/lib/visual/visualDefault.js","webpack:///./node_modules/echarts/lib/component/visualMap/VisualMapView.js","webpack:///./node_modules/echarts/lib/component/visualMap/helper.js","webpack:///./node_modules/echarts/lib/component/visualMap/visualMapAction.js","webpack:///./node_modules/echarts/lib/component/dataZoom/history.js","webpack:///./node_modules/zrender/lib/vml/core.js","webpack:///./node_modules/zrender/lib/svg/helper/Definable.js","webpack:///./node_modules/echarts/index.js","webpack:///./node_modules/echarts/lib/model/Global.js","webpack:///./node_modules/echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/echarts/lib/model/globalDefault.js","webpack:///./node_modules/echarts/lib/ExtensionAPI.js","webpack:///./node_modules/echarts/lib/model/OptionManager.js","webpack:///./node_modules/echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/echarts/lib/visual/seriesColor.js","webpack:///./node_modules/echarts/lib/loading/default.js","webpack:///./node_modules/echarts/lib/chart/line.js","webpack:///./node_modules/echarts/lib/chart/line/LineSeries.js","webpack:///./node_modules/echarts/lib/chart/line/LineView.js","webpack:///./node_modules/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./node_modules/echarts/lib/processor/dataSample.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/chart/pie.js","webpack:///./node_modules/echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/echarts/lib/chart/pie/pieLayout.js","webpack:///./node_modules/echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/echarts/lib/chart/scatter.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/scatter/ScatterView.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","webpack:///./node_modules/echarts/lib/chart/radar.js","webpack:///./node_modules/echarts/lib/component/radar.js","webpack:///./node_modules/echarts/lib/coord/radar/Radar.js","webpack:///./node_modules/echarts/lib/coord/radar/IndicatorAxis.js","webpack:///./node_modules/echarts/lib/coord/radar/RadarModel.js","webpack:///./node_modules/echarts/lib/component/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarSeries.js","webpack:///./node_modules/echarts/lib/chart/radar/RadarView.js","webpack:///./node_modules/echarts/lib/chart/radar/radarLayout.js","webpack:///./node_modules/echarts/lib/chart/radar/backwardCompat.js","webpack:///./node_modules/echarts/lib/chart/map.js","webpack:///./node_modules/echarts/lib/chart/map/MapSeries.js","webpack:///./node_modules/echarts/lib/coord/geo/Geo.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/nanhai.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/textCoord.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/geoCoord.js","webpack:///./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","webpack:///./node_modules/echarts/lib/chart/map/MapView.js","webpack:///./node_modules/echarts/lib/chart/map/mapSymbolLayout.js","webpack:///./node_modules/echarts/lib/chart/map/mapVisual.js","webpack:///./node_modules/echarts/lib/chart/map/mapDataStatistic.js","webpack:///./node_modules/echarts/lib/chart/map/backwardCompat.js","webpack:///./node_modules/echarts/lib/chart/tree.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeSeries.js","webpack:///./node_modules/echarts/lib/chart/tree/TreeView.js","webpack:///./node_modules/echarts/lib/chart/tree/treeAction.js","webpack:///./node_modules/echarts/lib/chart/tree/orthogonalLayout.js","webpack:///./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack:///./node_modules/echarts/lib/chart/tree/radialLayout.js","webpack:///./node_modules/echarts/lib/chart/treemap.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack:///./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack:///./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack:///./node_modules/echarts/lib/util/animation.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack:///./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack:///./node_modules/echarts/lib/chart/graph.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphSeries.js","webpack:///./node_modules/echarts/lib/data/Graph.js","webpack:///./node_modules/echarts/lib/chart/graph/GraphView.js","webpack:///./node_modules/echarts/lib/chart/helper/LinePath.js","webpack:///./node_modules/echarts/lib/chart/graph/adjustEdge.js","webpack:///./node_modules/echarts/lib/chart/graph/graphAction.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryFilter.js","webpack:///./node_modules/echarts/lib/chart/graph/categoryVisual.js","webpack:///./node_modules/echarts/lib/chart/graph/edgeVisual.js","webpack:///./node_modules/echarts/lib/chart/graph/simpleLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/circularLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/forceLayout.js","webpack:///./node_modules/echarts/lib/chart/graph/forceHelper.js","webpack:///./node_modules/echarts/lib/chart/graph/createView.js","webpack:///./node_modules/echarts/lib/chart/gauge.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./node_modules/echarts/lib/chart/gauge/GaugeView.js","webpack:///./node_modules/echarts/lib/chart/gauge/PointerPath.js","webpack:///./node_modules/echarts/lib/chart/funnel.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelSeries.js","webpack:///./node_modules/echarts/lib/chart/funnel/FunnelView.js","webpack:///./node_modules/echarts/lib/chart/funnel/funnelLayout.js","webpack:///./node_modules/echarts/lib/chart/parallel.js","webpack:///./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","webpack:///./node_modules/echarts/lib/coord/parallel/Parallel.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelAxis.js","webpack:///./node_modules/echarts/lib/coord/parallel/ParallelModel.js","webpack:///./node_modules/echarts/lib/coord/parallel/AxisModel.js","webpack:///./node_modules/echarts/lib/component/parallelAxis.js","webpack:///./node_modules/echarts/lib/component/axis/parallelAxisAction.js","webpack:///./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelSeries.js","webpack:///./node_modules/echarts/lib/chart/parallel/ParallelView.js","webpack:///./node_modules/echarts/lib/chart/parallel/parallelVisual.js","webpack:///./node_modules/echarts/lib/chart/sankey.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeySeries.js","webpack:///./node_modules/echarts/lib/chart/sankey/SankeyView.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyLayout.js","webpack:///./node_modules/echarts/lib/chart/sankey/sankeyVisual.js","webpack:///./node_modules/echarts/lib/chart/boxplot.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","webpack:///./node_modules/echarts/lib/chart/helper/WhiskerBoxDraw.js","webpack:///./node_modules/echarts/lib/chart/boxplot/BoxplotView.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","webpack:///./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","webpack:///./node_modules/echarts/lib/chart/candlestick.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","webpack:///./node_modules/echarts/lib/chart/candlestick/CandlestickView.js","webpack:///./node_modules/echarts/lib/chart/candlestick/preprocessor.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","webpack:///./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","webpack:///./node_modules/echarts/lib/chart/effectScatter.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","webpack:///./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectSymbol.js","webpack:///./node_modules/echarts/lib/chart/lines.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesSeries.js","webpack:///./node_modules/echarts/lib/chart/lines/LinesView.js","webpack:///./node_modules/echarts/lib/chart/helper/EffectPolyline.js","webpack:///./node_modules/echarts/lib/chart/helper/LargeLineDraw.js","webpack:///./node_modules/echarts/lib/chart/lines/linesLayout.js","webpack:///./node_modules/echarts/lib/chart/lines/linesVisual.js","webpack:///./node_modules/echarts/lib/chart/heatmap.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapView.js","webpack:///./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","webpack:///./node_modules/echarts/lib/chart/pictorialBar.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/PictorialBarView.js","webpack:///./node_modules/echarts/lib/chart/themeRiver.js","webpack:///./node_modules/echarts/lib/coord/single/singleCreator.js","webpack:///./node_modules/echarts/lib/coord/single/Single.js","webpack:///./node_modules/echarts/lib/coord/single/SingleAxis.js","webpack:///./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack:///./node_modules/echarts/lib/coord/single/AxisModel.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","webpack:///./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","webpack:///./node_modules/echarts/lib/chart/custom.js","webpack:///./node_modules/echarts/lib/coord/cartesian/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/geo/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/single/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/polar/prepareCustom.js","webpack:///./node_modules/echarts/lib/coord/calendar/prepareCustom.js","webpack:///./node_modules/echarts/lib/component/graphic.js","webpack:///./node_modules/echarts/lib/component/grid.js","webpack:///./node_modules/echarts/lib/component/legendScroll.js","webpack:///./node_modules/echarts/lib/component/legend.js","webpack:///./node_modules/echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","webpack:///./node_modules/echarts/lib/component/legend/ScrollableLegendView.js","webpack:///./node_modules/echarts/lib/component/legend/scrollableLegendAction.js","webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/echarts/lib/component/polar.js","webpack:///./node_modules/echarts/lib/layout/barPolar.js","webpack:///./node_modules/echarts/lib/coord/polar/Polar.js","webpack:///./node_modules/echarts/lib/coord/polar/RadiusAxis.js","webpack:///./node_modules/echarts/lib/coord/polar/AngleAxis.js","webpack:///./node_modules/echarts/lib/coord/polar/PolarModel.js","webpack:///./node_modules/echarts/lib/coord/polar/AxisModel.js","webpack:///./node_modules/echarts/lib/component/angleAxis.js","webpack:///./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack:///./node_modules/echarts/lib/component/radiusAxis.js","webpack:///./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack:///./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack:///./node_modules/echarts/lib/component/geo.js","webpack:///./node_modules/echarts/lib/coord/geo/GeoModel.js","webpack:///./node_modules/echarts/lib/component/geo/GeoView.js","webpack:///./node_modules/echarts/lib/component/brush.js","webpack:///./node_modules/echarts/lib/component/brush/preprocessor.js","webpack:///./node_modules/echarts/lib/component/brush/visualEncoding.js","webpack:///./node_modules/echarts/lib/component/brush/selector.js","webpack:///./node_modules/echarts/lib/component/brush/BrushModel.js","webpack:///./node_modules/echarts/lib/component/brush/BrushView.js","webpack:///./node_modules/echarts/lib/component/brush/brushAction.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Brush.js","webpack:///./node_modules/echarts/lib/component/calendar.js","webpack:///./node_modules/echarts/lib/coord/calendar/Calendar.js","webpack:///./node_modules/echarts/lib/coord/calendar/CalendarModel.js","webpack:///./node_modules/echarts/lib/component/calendar/CalendarView.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/component/dataZoom.js","webpack:///./node_modules/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./node_modules/echarts/lib/component/dataZoom/roams.js","webpack:///./node_modules/echarts/lib/component/visualMap.js","webpack:///./node_modules/echarts/lib/component/visualMapContinuous.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousModel.js","webpack:///./node_modules/echarts/lib/component/visualMap/ContinuousView.js","webpack:///./node_modules/echarts/lib/component/visualMapPiecewise.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","webpack:///./node_modules/echarts/lib/component/visualMap/PiecewiseView.js","webpack:///./node_modules/echarts/lib/component/markPoint.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointModel.js","webpack:///./node_modules/echarts/lib/component/marker/MarkPointView.js","webpack:///./node_modules/echarts/lib/component/markLine.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineModel.js","webpack:///./node_modules/echarts/lib/component/marker/MarkLineView.js","webpack:///./node_modules/echarts/lib/component/markArea.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaModel.js","webpack:///./node_modules/echarts/lib/component/marker/MarkAreaView.js","webpack:///./node_modules/echarts/lib/component/timeline.js","webpack:///./node_modules/echarts/lib/component/timeline/preprocessor.js","webpack:///./node_modules/echarts/lib/component/timeline/typeDefaulter.js","webpack:///./node_modules/echarts/lib/component/timeline/timelineAction.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineModel.js","webpack:///./node_modules/echarts/lib/component/timeline/SliderTimelineView.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineView.js","webpack:///./node_modules/echarts/lib/component/timeline/TimelineAxis.js","webpack:///./node_modules/echarts/lib/component/toolbox.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./node_modules/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./node_modules/echarts/lib/component/dataZoomSelect.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./node_modules/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./node_modules/zrender/lib/vml/vml.js","webpack:///./node_modules/zrender/lib/vml/graphic.js","webpack:///./node_modules/zrender/lib/vml/Painter.js","webpack:///./node_modules/zrender/lib/svg/svg.js","webpack:///./node_modules/zrender/lib/svg/Painter.js","webpack:///./node_modules/zrender/lib/core/arrayDiff2.js","webpack:///./node_modules/zrender/lib/svg/helper/GradientManager.js","webpack:///./node_modules/zrender/lib/svg/helper/ClippathManager.js","webpack:///./src/pc/evaluating/index.js","webpack:///./src/pc/evaluating/index.less?9498","webpack:///./src/pc/evaluating/index.less","webpack:///./src/pc/evaluating/component/list/index.js","webpack:///./src/pc/evaluating/component/list/index.less?0f38","webpack:///./src/pc/evaluating/component/list/index.less","webpack:///./src/pc/evaluating/component/detail/index.js","webpack:///./src/pc/evaluating/component/project-intro/index.js","webpack:///./src/pc/evaluating/component/project-intro/index.less?f689","webpack:///./src/pc/evaluating/component/project-intro/index.less","webpack:///./src/pc/evaluating/component/ico-publish/index.js","webpack:///./src/pc/evaluating/component/ico-publish/index.less?fb38","webpack:///./src/pc/evaluating/component/ico-publish/index.less","webpack:///./src/pc/evaluating/component/strcture/index.js","webpack:///./src/pc/evaluating/component/strcture/index.less?68ff","webpack:///./src/pc/evaluating/component/strcture/index.less","webpack:///./src/pc/evaluating/component/project-analy/index.js","webpack:///./src/pc/evaluating/component/project-analy/index.less?1618","webpack:///./src/pc/evaluating/component/project-analy/index.less","webpack:///./src/pc/evaluating/component/detail/index.less?d9e2","webpack:///./src/pc/evaluating/component/detail/index.less"],"names":["webpackJsonp","module","exports","__webpack_require__","createRegisterEventWithLowercaseName","method","eventName","handler","context","toLowerCase","Eventful","prototype","call","this","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","bind","flush","clone","backwardCompat","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","setAsPrimitive","doConvertPixel","methodName","finder","value","result","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","i","length","coordSys","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","each","concat","query","condition","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","type","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","map","item","defaults","extend","eventObj","eventObjBatch","isHighDown","batchItem","action","event","push","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","func","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","__ecComponentInfo","componentIndex","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","get","data","getData","previousStack","hasOwnProperty","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","setStyle","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","parent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","existInstance","getInstanceByDom","idBase","setAttribute","DOM_ATTRIBUTE_KEY","connect","groupId","isArray","groupIdBase","disConnect","isDisposed","key","getAttribute","getInstanceById","registerTheme","name","registerPreprocessor","preprocessorFunc","optionPreprocessorFuncs","registerProcessor","priority","processorFunc","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","registerAction","isObject","assert","ACTION_REG","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","slice","registerLayout","layoutFunc","PRIORITY_VISUAL_LAYOUT","registerVisual","visualFunc","PRIORITY_VISUAL_CHART","registerLoading","loadingFx","loadingEffects","extendComponentModel","ComponentModel","extendComponentView","extendSeriesModel","SeriesModel","extendChartView","setCanvasCreator","creator","$inject","createCanvas","colorTool","GlobalModel","OptionManager","graphic","_throttle","seriesColor","loadingDefault","dependencies","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","off","one","mixin","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","setTheme","console","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","list","getDisplayList","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludeComponents","excludesComponentViews","self","url","getType","toDataURL","getConnectedDataURL","mathMin","min","mathMax","max","left","Infinity","top","right","bottom","canvasList","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","curry","convertFromPixel","containPixel","models","indexOf","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","target","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","_disposed","clear","Date","disconnect","noop","registerMap","getMap","parseGeoJSON","dataTool","f","version","___ec_export","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","child","nextX","nextY","position","rect","getBoundingRect","nextChild","childAt","nextChildRect","moveX","newline","moveY","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","parsePercent","x2","y2","isNaN","parseFloat","formatUtil","normalizeCssArray","getLayoutRect","verticalMargin","horizontalMargin","aspect","BoundingRect","positionElement","h","hv","v","boundingMode","needLocalTransform","transform","getLocalTransform","applyTransform","elPos","dx","dy","attr","sizeCalculable","hvIdx","HV_NAMES","mergeLayoutParam","targetOption","newOption","merge","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","obj","copy","source","hResult","vResult","getLayoutParams","copyLayoutParams","LOCATION_PARAMS","_number","box","vbox","hbox","getDependencies","deps","getClassesByMainType","arrayPush","apply","clazzUtil","Model","componentUtil","layout","boxLayoutMixin","Array","defaultOption","dependentModels","uid","layoutMode","$constructor","parentModel","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","mergeOption","optionUpdated","newCptOption","isInit","hasOwn","optList","Class","constructor","superClass","set","getReferringComponents","queryComponents","enableClassManagement","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","_default","_format","formatTime","encodeHTML","addCommas","getTooltipMarker","_clazz","colorPaletteMixin","_layout","legendDataProvider","visualColorAccessPath","getInitialData","themeSubType","hasClass","defaultEmphasis","label","fillDataTextStyle","newSeriesOption","cloneShallow","props","getLinkedData","setData","getRawData","coordDimToDataDim","coordDim","dataDimToCoordDim","dataDim","getBaseAxis","formatTooltip","multipleSeries","getRawValue","formattedValue","setEachItem","val","dimIdx","dimInfo","getDimensionInfo","otherDims","tooltip","dimType","valStr","vertially","tooltipName","reduce","dimItem","tooltipDims","otherDimToDataDim","join","getName","color","colorEl","seriesName","isAnimationEnabled","animationEnabled","getShallow","count","getColorFromPalette","scope","getAxisTooltipData","getTooltipPosition","dataFormatMixin","Chart","Group","elSetState","state","childCount","toggleHighlight","queryDataIndex","normalizeToArray","dataIdx","getItemGraphicEl","eachItemGraphicEl","highlight","downplay","removeAll","chartProto","enableClassExtend","ctor","features","seriesType","defaultSymbolType","legendSymbol","eachRawSeriesByType","symbolType","symbolSize","setVisual","symbol","isSeriesFiltered","rawValue","setItemVisual","itemModel","getItemModel","itemSymbolType","itemSymbolSize","makeAxisEventDataBase","axisModel","endTextLayout","textPosition","textRotate","extent","textAlign","textVerticalAlign","rotationDiff","remRadian","rotation","inverse","onLeft","isRadianAroundZero","PI","isSilent","tooltipOpt","show","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","next","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","identity","rotate","mul","intersect","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","axis","scale","isBlank","tickModel","lineStyleModel","tickLen","tickInterval","getInterval","labelInterval","ticksCoords","getTicksCoords","ticks","getTicks","pt1","pt2","matrix","_transform","ticksCnt","ifIgnoreOnTick","tickCoord","tickDirection","v2ApplyTransform","tickEl","Line","subPixelOptimizeLine","anid","shape","x1","y1","getLineStyle","stroke","z2","buildAxisLabel","retrieve","axisLabelShow","labelModel","labelMargin","labels","getFormattedLabels","labelRotation","labelRotate","innerTextLayout","labelDirection","categoryData","triggerEvent","tickVal","itemLabelModel","textStyle","textColor","getTextColor","dataToCoord","pos","labelOffset","labelStr","getLabel","textEl","Text","setTextStyle","text","textFill","targetType","_dumbGroup","updateTransform","decomposeTransform","_util","_symbol","createSymbol","_vector","AxisBuilder","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","getExtent","lineStyle","lineCap","strokeContainThreshold","arrows","arrowSize","symbolWidth","symbolHeight","axisTickLabel","axisName","textStyleModel","gapSignal","nameRotation","axisNameAvailableWidth","abs","sin","isFinite","textFont","getFont","truncateOpt","ellipsis","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","formatterParams","$vars","__fullText","__truncatedText","content","formatter","axisRotation","textRotation","direction","interval","rawTick","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModel","axisPointerModelHelper","getAxisPointerModel","_axisPointer","disposeAxisPointer","axisPointer","echarts","fixValue","superApply","arguments","force","axisPointerClazz","registerAxisPointerClass","clazz","preprocessForPiecewise","thisOption","pieceList","hasSpecialVisual","piece","originIndex","preprocessForSpecifiedCategory","categories","categoryMap","cate","visualArr","CATEGORY_DEFAULT_VISUAL_INDEX","setVisualToOption","normalizeVisualRange","isCategory","doNotNeedPair","makePartialColorVisualHandler","applyValue","applyVisual","getter","setter","mapValueToVisual","_doMap","makeDoMap","doMapToArray","normalized","round","linearMap","makeApplyVisual","doMapCategory","loop","doMapFixed","sourceExtent","linear","category","piecewise","getSpecifiedVisual","fixed","pieceIndex","VisualMapping","findPieceIndex","parsedVisual","zrColor","littleThan","close","mappingMethod","_normalizeData","normalizers","visualHandler","visualHandlers","getColorMapper","dataExtent","getNormalizer","isNormalized","out","returnRGBArray","fastLerp","colorHue","modifyHSL","colorSaturation","colorLightness","colorAlpha","modifyAlpha","opacity","symbolCfg","isString","listVisualTypes","visualTypes","addVisualHandler","isValidType","eachVisual","callback","mapVisual","isPrimary","newVisual","newVal","retrieveVisuals","hasVisual","ret","prepareVisualTypes","types","sort","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","updatePossible","newAbs","possibleI","len","pieceValue","toolbox","brush","title","polygon","lineX","lineY","keep","dataView","lang","dataZoom","zoom","back","magicType","line","bar","tiled","restore","saveAsImage","SymbolDraw","symbolCtor","_symbolCtor","SymbolClz","symbolNeedsDraw","isIgnore","point","getItemLayout","symbolDrawProto","updateData","hostModel","oldData","_data","SymbolCtor","seriesScope","itemStyle","getItemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverAnimation","hoverLabelModel","cursorStyle","diff","newIdx","symbolEl","setItemGraphicEl","oldIdx","updateProps","fadeOut","execute","enableAnimation","gridModel","Rect","getRect","fill","xAxis","yAxis","grid","retrieveTargetInfo","root","tree","targetNode","contains","targetNodeId","getNodeById","getPathToRoot","path","parentNode","reverse","aboveViewRoot","viewRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","delta","handleEnds","handleIndex","minSpan","maxSpan","restrict","extentSpan","originalDistSign","getSpanSign","extentMinSpan","realExtent","sign","currDistSign","span","dist","axisTrigger","link","coordSysAxesInfo","collect","retrieveRaw","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","helper","AxisProxy","eachAxisDim","DataZoomModel","xAxisIndex","yAxisIndex","filterMode","start","end","startValue","endValue","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","dimName","singleAxis","singleAxisModel","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","dim","axisType","is","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","indices","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","getTargetCoordInfo","save","coordModel","store","coordIndex","coordSysLists","getCoordSysModel","getSymbolSize","getScale","driftSymbol","drift","_labelHelper","findLabelValueDim","symbolProto","_createSymbol","symbolPath","culling","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","draggable","cursor","_updateCommon","fadeIn","initProps","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","useStyle","strokeNoScale","hasItemOption","elStyle","setColor","symbolInnerColor","useNameLabel","valueDim","setLabelStyle","labelFetcher","labelDataIndex","defaultText","isRectText","autoColor","hoverStyle","setHoverStyle","onEmphasis","ratio","animateTo","onNormal","cb","keepLabel","inherits","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","mergeAll","axisDefault","registerSubTypeDefaulter","axesInfo","seriesInvolved","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","crossStyle","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","linkOption","checkPropInLink","linkPropValue","axisPropValue","getAxisInfo","legendModels","findComponents","eachSeriesByType","filterSelf","isSelected","resizeGeo","geoModel","boundingCoords","leftTop","rightBottom","setBoundingRect","boxLayoutOption","center","size","viewWidth","viewHeight","aspectScale","useCenterAndSize","numberUtil","viewRect","getBoxLayoutParams","setViewRect","setCenter","setZoom","setGeoCoords","geo","geoCoord","addGeoCoord","Geo","parseGeoJson","mapDataStores","geoCreator","geoList","mapData","geoJson","specialAreas","zoomLimit","geoIndex","mapModelGroupBySeries","getHostGeoModel","mapType","getMapType","mapSeries","nameMapList","singleMapSeries","mapName","JSON","Function","getFilledRegions","originRegionArr","nameMap","regionsArr","dataNameMap","createHashMap","properties","RoamController","pointerChecker","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","setPointerChecker","enable","controlType","disable","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","isDragging","_dragging","isPinching","_pinching","eventTool","notLeftMouse","offsetX","offsetY","_x","_y","checkKeyBinding","gestureEvent","interactionMutex","isTaken","oldX","oldY","stop","wheelDelta","zoomDelta","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","prop","setting","List","completeDimensions","WhiskerBoxDraw","seriesModelMixin","_baseAxisDim","addOrdinal","xAxisModel","yAxisModel","xAxisType","yAxisType","getCategories","coordDims","baseAxisDimIndex","baseAxisDim","otherAxisDim","unshift","defaultValueDimensions","dimsDef","encodeDef","dimCount","initData","viewMixin","whiskerBoxDraw","_whiskerBoxDraw","getStyleUpdater","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","precision","paddings","font","textRect","textContain","align","verticalAlign","confineInContainer","bgColor","r","lineWidth","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","axisHelper","getAxisRawValue","seriesData","idxItem","dataParams","replace","isFunction","getTransformedPosition","layoutInfo","translate","buildCartesianSingleLabelElOption","textLayout","makeLineShape","p1","p2","xDimIndex","makeRectShape","xy","wh","makeSectorShape","cx","cy","r0","startAngle","endAngle","clockwise","hasKeys","createVisualMappings","stateList","supplementVisualOption","createMappings","Creater","__hidden","visualMappings","mappings","visualData","mappingOption","__alphaForOpacity","replaceVisualOption","keys","has","getValueState","dimension","eachItem","valueOrIndex","rawDataItem","getRawDataItem","visualMap","valueState","visualTypesMap","base","random","DELIMITER","entity","subTypeDefaulters","defaulter","determineSubType","componentTypeMain","hasSubTypes","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","Error","Component","componentProto","dims","setItemLayout","NaN","dataToPoint","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","cos","afterHeight","getLabelUnionRect","axisLabelModel","step","labelCount","ceil","isLabelIgnored","unrotatedSingleRect","getTextRect","singleRect","union","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","axes","onZero","onZeroAxisIndex","otherAxis","canNotOnZeroToAxis","ifAxisCrossZero","updateAxisTransfrom","coordBase","axisExtent","axisExtentSum","toGlobalCoord","coord","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","niceScaleExtent","gridProto","_rect","_updateScale","ignoreContainLabel","adjustAxes","axesList","isHorizontal","gridRect","setExtent","labelUnionRect","axesMapOnDim","getCartesian","coordList","getCartesians","_findConvertTarget","cartesian","pointToData","coordToData","coordsList","createAxisCreator","axisPosition","axisPositionUsed","createScaleByModel","onBand","axesCount","addAxis","unionExtent","unionExtentFromData","axesModels","baseAxis","getOtherAxis","grids","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","bandWidth","getBandWidth","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","offset","calBarWidthAndOffset","barSeries","barWidth","barMaxWidth","barGap","barCategoryGap","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","coordSysName","barGapPercent","autoWidth","column","lastColumn","widthSum","barLayoutGrid","barWidthAndOffset","filter","getSeriesByType","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxis","barMinHeight","valueAxisStart","getGlobalExtent","coords","mapArray","setLayout","p","n","lastCoord","lastCoordOrigin","updateSelectedMap","targetList","_targetList","_selectTargetMap","targetMap","select","selected","unSelect","toggleSelected","paletteScope","dataAll","idxMap","rawIdx","getRawIndex","filteredIdx","singleDataColor","onIrrelevantElement","targetCoordSysModel","topTarget","IRRELEVANT_EXCLUDES","isPointNaN","pt","lineNeedsDraw","pts","LineDraw","_ctor","LineGroup","lineDrawProto","lineData","oldLineData","_lineData","LineCtor","hoverLineStyle","lineGroup","makeSymbolTypeKey","symbolCategory","symbolUtil","createLine","points","LinePath","setLinePoints","targetShape","cp1","percent","cpx1","cpy1","updateSymbolAndLabelBeforeLineUpdate","symbolFrom","childOfName","symbolTo","invScale","__dirty","fromPos","pointAt","toPos","d","vector","normalize","tangent","tangentAt","atan2","distance","__position","halfPercent","cp","__verticalAlign","__textAlign","_createLine","SYMBOL_CATEGORIES","lineProto","beforeUpdate","linePoints","_updateCommonStl","visualColor","visualOpacity","retrieve3","defaultLabelColor","normalText","emphasisText","showLabel","hoverShowLabel","rawVal","retrieve2","getFormattedLabel","labelStyle","fontStyle","fontWeight","fontSize","fontFamily","linePath","dirty","BrushController","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","baseUID","_handlers","mouseHandlers","doEnableBrush","controller","brushOption","take","MUTEX_RESOURCE_KEY","brushType","DEFAULT_BRUSH_OPT","doDisableBrush","release","createCover","cover","coverRenderers","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","range","COVER_Z","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panels","panel","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","removeOnClick","shouldShowCover","track","mathPow","UNSELECT_THRESHOLD","getTrackEnds","tail","createBaseRectCover","doDrift","edgeNames","makeStyle","ondragend","invisible","updateBaseRect","localRange","brushStyle","handleSize","MIN_RESIZE_LINE_WIDTH","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","transformable","mainEl","globalDir","getGlobalDirection","CURSOR_MAP","w","setShape","pointsToRect","clipByPanel","formatRectRange","getTransform","localDirection","s","inverseMap","transformDirection","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","DIRECTION_MAP","driftPolygon","thisGroup","localD","transformCoordToLocal","localZero","clipPath","xmin","ymin","resetCursor","currPanel","contain","setCursorStyle","preventDefault","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","brushMode","determineBrushType","getCreatingRange","defaultBrushType","handleDragEnd","getLineRenderer","xyIndex","localTrack","ends","otherExtent","getLinearBrushOtherExtent","DataDiffer","pow","ne","sw","nw","se","enableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","getKey","tmpIdPrefix","oldGetKey","addOrUpdate","newIndex","oldIndex","newBrushOption","oldCovers","newCovers","unmount","Polyline","Polygon","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","throttleUtil","makeGetter","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","handle","hide","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","createIcon","onmousemove","onmousedown","_onHandleDragMove","_onHandleDragEnd","includeStyles","createOrUpdate","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","axisDim","doClear","buildLabel","resizePolar","polar","polarModel","radiusAxis","getRadiusAxis","radius","updatePolarScale","angleAxis","getAngleAxis","setAxis","Polar","_axisHelper","polarCreator","polarList","radiusAxisModel","findAxisModel","angleAxisModel","isCoordSupported","coordType","COORDS","createNameEach","attrs","capitalNames","capitalFirst","capitalAttrs","nameObj","capital","j","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","AXIS_DIMS","fillLabel","MarkerModel","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","html","hasXOrY","hasXAndY","getPrecision","valueAxisDim","markerTypeCalculatorWithExtent","mlType","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","numCalculate","indicesOfNearest","toFixed","dataTransform","markerTypeCalculator","baseDataDim","valueDataDim","valueIndex","getDimension","dataFilter","containData","dimValueGetter","dimIndex","sum","getDataExtent","average","markerGroupMap","__keep","markerModelKey","renderSeries","round4","mathRound","isAroundZero","EPSILON","pathHasFill","isText","NONE","pathHasStroke","textStroke","setTransform","svgEl","m","arrayJoin","attrXLink","setAttributeNS","bindStyle","textStrokeWidth","host","getLineScale","lineDash","lineDashOffset","lineJoin","miterLimit","pathDataToString","str","dataLength","cmd","cmdStr","nData","CMD","M","L","Q","C","A","rx","ry","theta","dTheta","psi","dThetaPositive","isCircle","PI2","large","x0","mathCos","y0","mathSin","degree","Z","R","getVerticalAlignForSvg","_core","createElement","PathProxy","textHelper","svgPath","__svgEl","createPathProxy","__dirtyPath","beginPath","buildPath","pathStr","svgTextDrawRectText","svgImage","HTMLImageElement","src","dw","dh","__imageSrc","svgText","tmpRect","normalizeTextStyle","textSvgEl","__textSvgEl","transformText","transformCoordToGlobal","textDistance","DEFAULT_FONT","lineHeight","newPos","adjustTextPositionOnRect","textPadding","textLines","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","innerHTML","appendChild","document","createTextNode","removeChild","drawRectText","createElementNS","svgURI","colorIdx","colorNameMap","colorPalette","labelDims","isPointNull","drawSegment","ctx","segLen","allLen","dir","smoothMin","smoothMax","smooth","smoothMonotone","connectNulls","prevIdx","k","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","vec2","lenPrevSeg","lenNextSeg","scaleAndAdd","vec2Min","vec2Max","bezierCurveTo","lineTo","getBoundingBox","smoothConstraint","ptMin","ptMax","Path","fixClipWithShadow","stackedOnPoints","stackedOnSmooth","bbox","stackedOnBBox","closePath","getAxisType","axisModelCreator","axisModelCommonMixin","AxisModel","resetRange","gridIndex","gridId","extraOption","nameRotate","nameTruncate","nameTextStyle","nameGap","axisTick","inside","axisLabel","splitLine","splitArea","areaStyle","categoryAxis","boundaryGap","alignWithLabel","splitNumber","timeAxis","logAxis","logBase","rawAxisPosition","rectBound","axisOffset","posBound","onZeroCoord","dirMap","labelInside","getLabelInterval","createListFromArray","getMarkerPosition","getLayout","legendHoverLink","barMinAngle","setLabel","normalStyle","labelPositionOutside","fixPosition","actionInfos","decode","json","UTF8Encoding","encodeScale","UTF8Scale","feature","geometry","coordinates","encodeOffsets","c","coordinate","decodePolygon","c2","prevX","prevY","charCodeAt","featureObj","geometries","exterior","interiors","region","Region","polygonContain","MAX_NUMBER","Number","MAX_VALUE","min2","max2","fromPoints","loopGeo","transformTo","calculateTransform","isAroundEqual","windingLine","p0","TransformDummy","Transformable","View","_roamTransform","_viewTransform","_center","_zoom","doConvert","_viewRect","viewTransform","_updateTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getCenter","getZoom","getRoamTransform","viewTransformMatrix","roamTransform","defaultCenter","origin","invTransform","invert","getViewRect","getViewRectAfterRoam","getFixedItemStyle","areaColor","updateMapSelectHandler","mapDraw","mapOrGeoModel","fromView","_mouseDownFlag","__regions","from","updateMapSelected","otherRegionEl","MapDraw","updateGroup","_controller","_controllerHost","_updateGroup","roamHelper","_cursorHelper","draw","isGeo","groupNewProp","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regions","regionGroup","compoundPath","CompoundPath","paths","regionModel","getRegionModel","itemStyleModel","hoverItemStyleModel","indexOfName","isDataNaN","itemLayout","useInsideStyle","hoverSilentOnTouch","_updateController","makeActionBase","controllerHost","updateViewOnPan","mouseX","mouseY","updateViewOnZoom","originX","originY","resourceKey","userKey","getStore","ATTR","newZoom","zoomMin","zoomMax","zoomScale","_roamHelper","updateCenterAndZoom","res","seriesGroup","previousZoom","fixX","fixY","Tree","levelOptions","leavesOption","_nodes","levelModels","levelDefine","leavesModel","addChild","children","linkList","TreeNode","hostTree","depth","viewChildren","isRemoved","eachNode","options","order","suppressVisitSub","updateDepthAndHeight","getId","getAncestors","includeSelf","ancestors","getValue","levelModel","getLevelModel","isExpand","getLeavesModel","ignoreParent","getNodeByDataIndex","rawIndex","getNodeByName","clearLayouts","clearItemLayouts","createTree","dataRoot","treeOptions","buildHierarchy","dataNode","dimMax","listData","levels","leaves","mainData","struct","structAttr","datas","datasAttr","linkAll","TRANSFERABLE_METHODS","wrapMethod","transferInjection","cloneShallowInjection","CHANGABLE_METHODS","changeInjection","isMainData","DATAS","linkSingle","MAIN_DATA","hierNode","defaultAncestor","ancestor","prelim","modifier","change","thread","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","apportion","secondWalk","nodeX","defaultSeparation","radialCoordinate","radialCoor","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","nodeInLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","nextRight","nextLeft","moveSubtree","nextAncestor","wl","wr","node1","node2","sep","virtualRoot","realRoot","eachAfter","eachBefore","tx","kx","ky","coorX","coorY","finalCoor","rawX","rawY","_traversalHelper","_layoutHelper","edges","directed","beforeLink","Graph","addNode","linkNameList","validEdges","linkCount","addEdge","nodeData","coordSysCtor","dimensionNames","edgeData","edge","simpleLayout","getGraph","simpleLayoutEdge","eachEdge","curveness","circularLayout","angle","getSum","unitAngle","x12","y12","checkTrigger","triggerOn","parallelPreprocessor","parallelModel","handlers","_throttledDispatchExpand","_dispatchExpand","_mouseDownPoint","mouseDownPoint","getSlidedAxisExpandWindow","behavior","axisExpandWindow","debounceNextCall","Parallel","makeRectPanelClipPath","normalizeRect","localPoints","graphicUtil","clipPointsByRect","makeLinearBrushOtherExtent","specifiedXYIndex","brushWidth","makeRectIsTargetByCursor","targetModel","nest","array","keysFunction","keyFunction","mapObject","valuesByKey","keyValue","values","entriesMap","sortKeyFunction","sortKeysFunction","sortKeys","entries","EffectLine","_updateEffectSymbol","curveUtil","effectLineProto","effectModel","_updateEffectAnimation","period","constantSpeed","delayExpr","isDelayFunc","updateAnimationPoints","getLineLength","_period","_loop","delay","__t","animator","animate","when","during","updateSymbolPosition","done","__p1","__cp1","__p2","t","quadraticAt","quadraticDerivativeAt","ty","_createPolyline","polylineProto","single","positionMap","horizontal","vertical","directionMap","getValues","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","unregister","getAxisDimIndex","viewHelper","cartesianAxisHelper","CartesianAxisPointer","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","shadow","LegendModel","superCall","_updateData","legendData","hasSelected","dataItem","availableNames","getSeries","_availableNames","borderColor","borderRadius","borderWidth","padding","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","_listComponent","makeBackground","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","viewportSize","maxSize","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","getSeriesByName","legendSymbolType","itemGroup","_createItem","eachRawSeries","itemIcon","tooltipModel","legendGlobalTooltipModel","textX","hitRect","legendIndex","__legendDataIndex","contentRect","boxLayoutParams","layoutBox","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","targetInfoBuilders","builder","include","formatMinMax","minMax","includeMainTypes","INCLUDE_FINDER_MAIN_TYPES","axisConvert","axisNameIndex","to","rangeOrCoordRange","xyMinMax","axisDiffProcessor","refer","scales","getScales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","brushHelper","COORD_CONVERTS","proto","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","makePanelOpts","getDefaultBrushType","getPanelRect","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","xminymin","xmaxymax","resetSingleAxis","reset","filterSingleAxis","filterData","percentRange","valueRange","linkedNodesFinder","effectedModels","pieces","splitList","calculable","processSingleVisualMap","visualMapModel","eachTargetSeries","visualSolution","targetVisuals","getDataDimension","prepareVisualMeta","visualMetaList","isTargetSeries","visualMeta","getVisualMeta","getColorVisual","stops","outerColors","resultVisual","mapping","visualDefault","asc","DEFAULT_COLOR","VisualMapModel","replacableOptionKeys","dataBound","inRange","outOfRange","contentColor","textGap","_dataExtent","controllerVisuals","itemSize","resetItemSize","completeVisualOption","resetVisual","getTargetSeriesIndices","optionSeriesIndex","seriesIndices","formatValueText","edgeSymbols","isMinMax","textValue","resetExtent","optDim","completeSingle","defa","completeInactive","stateExist","stateAbsent","optExist","optAbsent","completeController","symbolExists","symbolSizeExists","visuals","setSelected","active","inactive","autoPositionValues","renderBackground","getControllerVisual","targetValue","visualCluster","visualObj","forceState","defaultColor","visualMapping","convertOpacityToAlpha","positionGroup","getItemAlign","modelOption","ecSize","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","convertDataIndex","newSnapshot","giveStore","dataZoomId","head","snapshot","initVML","vmlInited","doc","styleSheets","createStyleSheet","addRule","createNode","urn","win","namespaces","zrvml","tagName","Definable","svgRoot","tagNames","markLabel","_svgRoot","_tagNames","_markLabel","nextId","ZImage","ZText","_graphic","getDefs","isForceCreating","defs","getElementsByTagName","insertBefore","firstChild","element","onUpdate","addDom","removeDom","getDoms","doms","tags","markAllUnused","that","markUsed","removeUnused","getSvgProxy","displayable","getTextSvgElement","getSvgElement","_echarts","_export","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","colorPaletteMinin","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","exist","resultItem","ComponentModelClass","newCptTypes","componentOption","getAllClassMainTypes","isIdInner","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","rawSeriesIndex","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","platform","navigator","match","animationDuration","animationEasing","animationEasingUpdate","progressiveThreshold","hoverLayerThreshold","useUTC","chartInstance","echartsAPIList","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","compare","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","overwrite","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","COMPATITABLE_SERIES","dataRange","COMPATITABLE_COMPONENTS","componentName","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","styleName","normalItemStyleOpt","normal","emphasisItemStyleOpt","emphasis","compatTextStyle","propName","labelOptSingle","TEXT_STYLE_OPTIONS","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","o","toObj","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regionObj","encodeColor","colorAccessPath","Gradient","maskColor","mask","arc","Arc","labelRect","animateShape","visualSymbol","layoutPoints","dataSample","clipOverflow","showSymbol","showAllSymbol","sampling","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getStackedOnPoints","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","expandSize","createPolarClipShape","radiusExtent","angleExtent","RADIAN","Sector","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","middle","stepPt2","getVisualGradient","stopLen","minCoord","maxCoord","coordSpan","gradient","LinearGradient","lineAnimationDiff","_poly","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","isEmpty","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","setClipPath","_stackedOnPoints","_points","_updateAnimation","_newPolyline","getAxesByScale","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","animators","getStackedOnPoint","diffData","newData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","rate","sampler","samplers","downSample","indexSampler","frame","nearest","Cartesian","axisX","axisY","clamp","dimAxisMapper","_axes","_dimList","scaleType","_dataCoordConvert","input","dimList","output","Axis","coordExtent","containLabel","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","groupTransition","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","areaInterval","BaseBarSeries","brushSelector","removeRect","removeSector","updateStyle","isPolar","getBarItemStyle","getLineWidth","rawLayout","BAR_BORDER_WIDTH_QUERY","_helper","barItemStyle","coordinateSystemType","_render","isHorizontalOrRadial","elementCreator","cartesian2d","isUpdate","rectShape","animateProperty","animateTarget","isRadial","sector","sectorShape","fixedLineWidth","signX","signY","makeStyleMapper","excludes","getBorderLineDash","createDataSelectAction","dataColor","pieLayout","getPercentWithPrecision","dataSelectableMixin","PieSeries","_defaultLabelLine","valueList","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","length2","animationType","updateDataSelected","seriesId","toggleItemSelected","midAngle","PiePiece","hoverIgnore","normalIgnore","piePieceProto","firstCreate","_updateLabel","labelText","labelHoverModel","labelLineModel","labelLineHoverModel","PieView","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","piePiece","removeClipPath","_createClipPath","sqrt","validDataCount","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","l","deltaY","len2","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","textY","labelPosition","labelLineLen","labelLineLen2","isLabelInside","x3","y3","largeThreshold","LargeSymbolDraw","_normalSymbolDraw","_largeSymbolDraw","largeSymbolDraw","normalSymbolDraw","_symbolEl","LargeSymbolPath","extendShape","sizes","symbolProxy","symbolProxyShape","findDataIndex","largeSymbolProto","radarLayout","Radar","radarModel","_indicatorAxes","getIndicatorModels","indicatorModel","indicatorAxis","IndicatorAxis","IntervalScale","getScaleExtent","getIndicatorAxes","indicatorIndex","coordToPoint","closestAxis","radian","minRadianDiff","closestAxisIdx","coodToData","viewSize","increaseInterval","exp10","LN10","indicatorAxes","radarSeries","rawExtent","fixedMin","getMin","fixedMax","getMax","setInterval","nicedSplitNumber","halfSplitNumber","radarList","defaultsShow","valueAxisDefault","RadarModel","showName","nameFormatter","indicatorModels","indicatorOpt","iNameTextStyle","indName","indicator","_buildAxes","_buildSplitLineAndArea","axisBuilders","getColorIndex","areaOrLine","areaOrLineColorList","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","splitLines","splitAreas","ticksRadius","Circle","Ring","realSplitNumber","axesTicksPoints","prevPoints","mergePath","RadarSeries","extraPrefix","extraFromZero","radarIndex","normalizeSymbolSize","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","hoverPolygonIgnore","polygonIgnore","hoverAreaStyleModel","itemHoverStyle","labelDimIndex","pointsConverter","polarOptArr","polarNotRadar","polarOpt","polarIndex","mapSymbolLayout","mapDataStatistic","MapSeries","needsDrawMap","_fillOption","regionName","seriesNames","otherIndex","originalData","getRegion","showLegendSymbol","dataRangeHoverLink","scaleLimit","_nameCoordMap","loadGeoJson","fixNanhai","fixTextCoord","fixGeoCoord","fixDiaoyuIsland","geoFixFuncs","containCoord","message","regionsMap","specialArea","_regionsMap","fixFunc","getRegionByCoord","getGeoCoord","regionRect","coordFix","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","geoCoordMap","Russia","United States","United States of America","mapModel","_mapDraw","_renderSymbols","circle","fullData","mainSeries","fullIndex","polygonGroups","extendFrom","__mapOriginalZ2","processedMapType","mapSymbolOffsets","subMapSeries","colorList","dataStatistics","statisticType","mapKey","seriesGroups","hostGeoModel","seriesList","mapLocation","orthogonalLayout","radialLayout","treeOption","treeDepth","expandAndCollapse","expandTreeDepth","initialTreeDepth","collapsed","getTreeNodeStyle","updateNode","sourceSymbolEl","sourceLayout","sourceOldLayout","__radialOldRawX","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","rad","isLeft","rootLayout","textOrigin","__edge","BezierCurve","getEdgeShape","removeNode","cpx2","cpy2","radialCoor1","radialCoor2","curvature","radialCoor3","radialCoor4","_oldTree","_mainGroup","commonLayout","treemapVisual","treemapLayout","completeTreeValue","childValue","thisValue","setDefault","globalColorList","hasColorDefine","modelColor","_viewRoot","clipWindow","squareRatio","leafDepth","drillDownIcon","zoomToNodeRatio","roam","nodeClick","breadcrumb","emptyItemWidth","gapWidth","borderColorSaturation","visualDimension","visualMin","visualMax","colorMappingBy","visibleMin","childrenVisibleMin","resetViewRoot","setLayoutInfo","mapIdToIndex","idIndexMap","_idIndexMap","_idIndexMapCount","getViewRoot","createStorage","nodeGroup","renderNode","thisStorage","oldStorage","reRoot","lastsForAnimation","willInvisibleEls","thisNode","oldNode","parentGroup","thisInvisible","__tmWillVisible","prepareText","emphasisStyle","upperLabelRect","nodeModel","thisLayout","isLeafRoot","iconChar","normalLabelModel","PATH_UPPERLABEL_NORMAL","PATH_LABEL_NOAMAL","emphasisLabelModel","PATH_UPPERLABEL_EMPHASIS","PATH_LABEL_EMPHASIS","isShow","truncate","outerWidth","outerHeight","giveGraphic","storageName","Ctor","oldRawIndex","lasts","prepareAnimationWhenHasOld","calculateZ","__tmDepth","__tmStorageName","prepareAnimationWhenNoOld","thisRawIndex","old","lastCfg","parentOldX","parentOldY","parentOldBg","fadein","isInView","thisWidth","thisHeight","thisViewChildren","upperHeight","isParent","itemStyleNormalModel","itemStyleEmphasisModel","__tmNodeWidth","__tmNodeHeight","isAboveViewRoot","bg","Z_BG","useUpperLabel","visualBorderColor","emphasisBorderColor","getItemStyleNormal","getItemStyleEmphasis","upperLabelWidth","Z_CONTENT","contentWidth","contentHeight","zInLevel","zb","Z_BASE","Breadcrumb","animationUtil","_containerGroup","_storage","_breadcrumb","_state","rootNodeGroup","containerGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","dualTravel","oldViewChildren","sameTree","processNode","doRenderNode","willDeleteEls","els","thisTree","oldTree","delEls","__tmWillDelete","duration","easing","animationWrap","createWrap","targetX","targetY","last","_onPan","_onZoom","_clearController","rootRect","findTarget","_rootToNode","_zoomToNode","linkTarget","open","onSelect","bgEl","makeItemPoints","ARRAY_LENGTH","packEventData","itemNode","componentSubType","selfType","normalStyleModel","layoutParam","totalWidth","renderList","_prepare","_renderContent","TEXT_PADDING","lastX","availableSize","onclick","doneCallback","elExistsMap","time","actionTypes","handleRootToNode","originViewRoot","seriesItemStyleModel","ITEM_STYLE_NORMAL","travelTree","designatedVisual","levelItemStyles","viewRootAncestors","nodeLayout","thisNodeColor","nodeItemStyleModel","levelItemStyle","buildVisuals","calculateColor","calculateBorderColor","buildVisualMapping","visualName","getValueVisualDefine","rangeVisual","getRangeVisual","__drColorMappingBy","childVisuals","mappingType","seriesOption","retrieveValue","viewAbovePath","rootSize","estimateRootSize","viewRootLayout","squarify","treeRoot","calculateRootPosition","prunning","hideChildren","PATH_BORDER_WIDTH","halfGapWidth","PATH_GAP_WIDTH","upperLabelHeight","getUpperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","initChildren","rowFixedLength","best","row","score","worst","orderBy","overLeafDepth","statistic","filterByThreshold","orderedChildren","deletePoint","areaMax","areaMin","squareArea","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","currNode","defaultSize","viewArea","currNodeValue","MAX_SAFE_INTEGER","defaultPosition","targetCenter","clipRect","nodeInViewAbovePath","childClipRect","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","categoryFilter","categoryVisual","edgeVisual","forceLayout","createView","createGraphFromNodeEdge","GraphSeries","_categoriesData","links","_updateCategoriesData","edgeGetParent","parsePath","fakeSeriesModel","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","customizeGetParent","getEdgeData","getCategoriesData","getEdgeByIndex","sourceName","targetName","categoriesData","focusNodeAdjacency","circular","rotateLabel","initLayout","repulsion","gravity","edgeLength","layoutAnimation","edgeSymbol","edgeSymbolSize","nodeScaleRatio","generateNodeKey","Node","inEdges","outEdges","hostGraph","Edge","n1","n2","_directed","_nodesMap","_edgesMap","graphProto","isDirected","nodesMap","getNodeByIndex","edgesMap","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","inDegree","outDegree","createGraphDataProxyMixin","hostName","getGraphicEl","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","fadeInItem","adjustEdge","nodeOpacityPath","lineOpacityPath","lineDraw","_lineDraw","_firstRender","_nodeScaleRatio","_getNodeGlobalScale","_updateNodeAndLinkScale","clearTimeout","_layoutTimeout","_startForceLayoutIteration","warmUp","_layouting","setFixed","setUnfixed","__focusNodeAdjacency","__unfocusNodeAdjacency","edgeDataIndex","circularRotateLabel","adjacentEdge","unfocusNodeAdjacency","stopped","setTimeout","nodeScale","groupScale","groupZoom","isLine","straightLineProto","bezierCurveProto","intersectCurveCircle","curvePoints","radiusSquare","_t","v1","mathAbs","v2DistSquare","v2","v3","nextDiff","tmp0","quadraticSubdivide","curveTool","pts2","fromSymbol","toSymbol","__original","originalPoints","distSquare","graphSeries","categoryNames","categoryNameIdxMap","colorQuery","opacityQuery","args","_simpleLayoutHelper","_circularLayoutHelper","preservedPoints","forceModel","nodeDataExtent","edgeDataExtent","rep","forceInstance","oldStep","_forceHelper","pp","friction","v12","nLen","repFact","coordSysType","positions","bbWidth","bbHeight","viewCoordSys","GaugeSeries","dataOpt","detail","parsePosition","formatLabel","labelFormatter","PointerPath","GaugeView","posInfo","_renderMain","axisLineModel","angleRangeSpan","prevEndAngle","axisLineWidth","getColor","tmp","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","subStep","splitLineStyle","tickLineStyle","unitX","unitY","tickLine","valueExtent","pointerModel","titleModel","forceRich","detailModel","textWidth","textHeight","moveTo","funnelLayout","FunnelSeries","minSize","funnelAlign","FunnelPiece","funnelPieceProto","opacityAccessPath","FunnelView","funnelPiece","getSortedIndices","valueArr","isAscending","sizeExtent","getLinePoints","offY","parallelVisual","createParallelIfNeeded","mergeAxisOptionFromParallel","hasParallelSeries","parallelAxis","axisOption","parallelIndex","parallelOption","_axesLayout","_init","layoutAxisWithoutExpand","layoutLength","axisCount","layoutAxisWithExpand","axisExpandWidth","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","ParallelAxis","sliderMove","mathFloor","mathCeil","parallelAxisIndex","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","axisLength","_layoutAxes","winSize","layoutExtent","axisExpandCount","axisExpandable","positionTable","rotationTable","axisCoordToPoint","eachActiveState","hasActiveSet","hasAxisBrushed","activeState","lenj","getActiveState","axisLayout","getAxisLayout","pointCoord","triggerArea","useJump","axisExpandCenter","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","_initDimensions","setAxisExpand","activeIntervals","getAreaSelectStyle","setActiveIntervals","intervals","areaSelectStyle","parallelAxisModel","fromAxisAreaSelect","getCoverInfoList","elementList","_brushController","_onBrush","areaWidth","builderOpt","_refreshBrushController","extentLen","extra","coverInfoList","coverInfo","parallelAxisId","translateCategoryValue","rawData","axisData","numberDim","convertDimNameToNumber","generateDataDims","modelDims","maxDimNum","firstItem","dataDims","parallelAxisIndices","dataDimsInfo","modelDimsIndex","guessOrdinal","getRawIndicesByActiveState","theActiveState","inactiveOpacity","activeOpacity","rectEl","createLinePoints","isEmptyValue","addEl","dataGroup","updateElCommon","seriesStyleModel","ParallelView","_dataGroup","_renderForNormal","newDataIndex","oldDataIndex","globalColors","opacityMap","itemOpacity","sankeyLayout","sankeyVisual","SankeySeries","rawDataOpt","nodeWidth","nodeGap","layoutIterations","SankeyShape","halfExtent","curve","n1Layout","n2Layout","edgeLayout","sy","computeNodeValues","layoutSankey","iterations","computeNodeBreadths","computeNodeDepths","computeEdgeDepths","value1","getEdgeValue","value2","remainNodes","nextNode","moveSinksRight","scaleNodeBreadths","nodesByBreadth","ascending","initializeNodeDepth","resolveCollisions","alpha","relaxRightToLeft","relaxLeftToRight","kyArray","ky0","nodeDy","edgeDy","ascendingDepth","nodeY","weightedTarget","weightedSource","ascendingTargetDepth","ascendingSourceDepth","minValue","maxValue","mapValueToColor","customColor","boxplotVisual","boxplotLayout","_whiskerBoxCommon","BoxplotSeries","boxWidth","WhiskerBox","styleUpdater","bodyIndex","whiskerIndex","_createContent","transInit","initBaseline","makeWhiskerEndsShape","whiskerEnds","WhiskerPath","whiskerBoxProto","constDim","chartLayout","bodyEnds","whiskerBoxDrawProto","normalItemStyleModel","whiskerEl","bodyEl","BoxplotView","defaulColor","borderColorQuery","groupResult","groupSeriesByAxis","groupItem","calculateBase","layoutSingleSeries","boxOffsetList","boxWidthList","axisList","seriesCount","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","cDim","halfWidth","variableDim","vDims","getPoint","axisDimVal","addBodyEnd","point1","point2","layEndLine","endCenter","median","end1","end5","preprocessor","candlestickVisual","candlestickLayout","CandlestickSeries","color0","borderColor0","barMinWidth","animationUpdate","getShadowDim","selectors","brushRect","CandlestickView","seriesItem","positiveColorQuery","negativeColorQuery","positiveBorderColorQuery","negativeBorderColorQuery","candleWidth","calculateCandleWidth","subPixelOptimize","subPixelOptimizePoint","openVal","closeVal","lowestVal","highestVal","ocLow","ocHigh","ocLowPoint","ocHighPoint","lowestPoint","highestPoint","pmin","pmax","effectType","showEffectOn","rippleEffect","EffectSymbol","effectSymbolDraw","updateRipplePath","rippleGroup","effectCfg","ripplePath","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","animateStyle","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","linesLayout","linesVisual","preprocessOption","itemOpt","fromName","toName","LinesSeries","effect","trailLength","EffectPolyline","LargeLineDraw","hasEffect","isPolyline","isLarge","_hasEffet","_isPolyline","_isLarge","isSvg","getLayer","_lastZlevel","motionBlur","lastFrameAlpha","_lastFrame","_lastFramePercent","effectPolylineProto","accLenArr","_offsets","_length","offsets","lastFrame","lerp","_lineEl","LargeLineShape","lineContain","quadraticContain","segs","seg","quadraticCurveTo","containStroke","largeLineProto","lineEl","blurSize","pointSize","maxOpacity","minOpacity","getIsInPiecewiseRange","dataSpan","lastIndex","getIsInContinuousRange","isGeoCoordSys","HeatmapLayer","visualMapOfThisSeries","targetSeries","_renderOnCartesianAndCalendar","_renderOnGeo","hoverStl","dataToRect","contentShape","inRangeVisuals","outOfRangeVisuals","hmLayer","_hmLayer","lng","lat","isInRange","getPieceList","Heatmap","_gradientPixels","colorFunc","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","getContext","globalAlpha","drawImage","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","putImageData","brushCanvas","_brushCanvas","clearRect","gradientPixels","pixelsSingleState","Uint8ClampedArray","PictorialBarSeries","symbolPosition","symbolMargin","symbolRepeat","symbolRepeatDirection","symbolClip","symbolBoundingData","symbolPatternSize","getSymbolMeta","symbolMeta","prepareBarLength","prepareSymbolSize","boundingLength","pxSign","prepareLineWidth","symbolScale","prepareLayoutInfo","valueLineWidth","repeatCutLength","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","coordSysExtent","categoryDim","categorySize","pathForLineWidth","unitLength","pathLen","absBoundingLength","hasEndGap","lastIndexOf","uLenWithMargin","endFix","repeatSpecified","isNumeric","repeatTimes","toIntTimes","sizeFix","pathPosition","bundlePosition","barRectShape","clipShape","createPath","createOrUpdateRepeatSymbols","makeTarget","unit","onMouseOver","eachPath","onMouseOut","bundle","__pictorialBundle","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","updateHoverAnimation","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","getAnimationDelayParams","createBar","__pictorialShapeStr","getShapeStr","__pictorialSymbolMeta","updateBar","removeBar","pathes","immediateAttrs","animationAttrs","barRectHoverStyle","barPositionOutside","posDesc","times","roundedTimes","LAYOUT_ATTRS","BarView","coordSysRect","pictorialShapeStr","themeRiverLayout","themeRiverVisual","singles","Single","_axis","SingleAxis","_adjustAxis","_updateAxisTransform","extentSum","_labelInterval","singleAxisHelper","SingleAxisView","selfBuilderAttr","getLineDash","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","minDist","minDiff","seriesNestestValue","dataIndices","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysMainType","dataByAxis","valueLabelOpt","outputAxesInfo","valItem","sampleItem","lastHighlights","newHighlights","toHighlight","toDownplay","AxisPointerModel","shadowStyle","icon","globalListener","AxisPointerView","getPointDimIndex","XY","WH","SingleAxisPointer","ThemeRiverSeries","fixData","rawDataLength","dataByName","layData","dataList","layerNum","largestLayer","timeValue","keyIndex","undefined","nameList","getLayerSeries","comparer","index1","index2","lenCount","indexArr","layerSeries","nearestIdx","pointNum","theValue","htmlName","htmlValue","_layers","keyGetter","oldLayersGroups","points0","layerGroup","newLayersGroups","dataDiffer","_layersSeries","baseY0","layerPoints","singleLayer","computeBaseline","baseLine","layerIndex","temp","sums","createEl","graphicType","makePath","pathData","__customPathData","__customImagePath","__customText","Clz","charAt","toUpperCase","__customGraphicType","updateEl","animatableModel","targetProps","elOptionStyle","targetStyle","prepareStyleTransition","targetOpacity","styleEmphasis","oldElStyle","makeRenderItem","customSeries","updateCache","currDataIndexInside","currDirty","currItemModel","currLabelNormalModel","LABEL_NORMAL","currLabelEmphasisModel","LABEL_EMPHASIS","currLabelValueDim","currVisualColor","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","barLayout","barGrid","currentSeriesIndices","renderItem","prepareResult","prepareCustoms","userAPI","userParams","dataInsideLength","encode","wrapEncodeDef","dataDimIndex","isExtraCoord","coordDimIndex","doCreateOrUpdate","elOptionType","oldChildren","newChildren","diffChildrenByName","diffGroupChildren","processAddUpdate","processRemove","GROUP_DIFF_PREFIX","childOption","prepareCartesian2d","prepareGeo","prepareSingleAxis","preparePolar","prepareCalendar","dataToCoordSize","dataSize","halfSize","dataToRadius","dataToAngle","rangeInfo","getRangeInfo","cellWidth","getCellWidth","cellHeight","getCellHeight","weeks","dayCount","allDay","targetElParent","elMap","__ecGraphicId","removeEl","existEl","existElParent","removeKey","getCleanedElOption","isSetLoc","isSet","setKeyInfoToNewElOption","newElOption","existElOption","parentId","newElParentOption","parentOption","mergeNewElOptionToExist","existList","newElOptCopy","$action","setLayoutInfoToExist","existItem","graphicOption","elements","GraphicModel","_elOptionsToUpdate","newList","flattenedList","_flatten","mappingResult","elOptionsToUpdate","optionList","useElOptionsToUpdate","_elMap","_lastGraphicModel","graphicModel","_clear","_updateElements","_relocate","rootGroup","textBaseline","elOptionCleaned","__ecGraphicWidth","__ecGraphicHeight","elOptions","parentEl","containerInfo","bounding","legendFilter","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","mergeAndNormalizeLayoutParams","raw","getOrient","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","LegendView","ScrollableLegendView","_currentIndex","_controllerGroup","_showController","__rectSize","createPageButton","iconIdx","pageDataIndexName","me","_pageGo","controllerGroup","pageTextStyleModel","orientIdx","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","pageText","total","pageCount","getItemRect","itemRect","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","itemLoc","winRect","startIdx","startItem","startRect","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","extraCssText","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","clientWidth","clientHeight","defaultView","getComputedStyle","stl","parseInt","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","TooltipContent","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","formatTpl","cbTicket","setContent","vAlign","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","newIndices","lastIdxItem","newIdxItem","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","toHex","borderName","camelCase","toCamelCase","container","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","normalizeEvent","dispatch","onmouseleave","_hideDelay","currentStyle","domStyle","display","viewportRootOffset","getViewportRootOffset","offsetLeft","offsetTop","barPolar","barLayoutPolar","calRadialBar","valueMax","valueMin","pointToCoord","stackCoord","RadiusAxis","AngleAxis","_radiusAxis","_angleAxis","radiusToData","angleToData","maxAngle","foundAxisModel","PolarAxisModel","polarId","polarAxisDefaultExtendedOption","getAxisLineShape","rExtent","getRadiusIdx","ticksAngles","_axisLine","_axisTick","lines","tickAngle","_axisLabel","labelsAngles","getLabelsCoords","labelTextAlign","labelTextVerticalAlign","prevAngle","r1","layoutAxis","axisAngle","prevRadius","getLabelPosition","PolarAxisPointer","coordValue","makeAction","selectableMixin","GeoModel","_optionModelMap","optionModelMap","regionOpt","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolboxFeature","toolboxBrush","brushTypes","removeDuplicate","DEFAULT_TOOLBOX_BTNS","arr","flag","throttleType","throttleDelay","brushSelected","DISPATCH_FLAG","DISPATCH_METHOD","doDispatch","checkInRange","selectorsByBrushType","rangeInfoList","getSelectorsByBrushType","sels","selector","selectorsByElementType","bSelector","sel","brushModelNotControll","brushModel","bindSelector","selFn","elType","getBoundingRectFromMinMax","STATE_LIST","PRIORITY_BRUSH","setBrushOption","brushTargetManager","brushIndex","linkOthers","brushLink","linkedSeriesMap","brushed","stepAParallel","hasBrushExists","selectedDataIndexForLink","stepAOthers","thisBrushSelected","brushId","brushName","rangeInfoBySeries","boundingRectBuilders","seriesBrushSelected","rg","getLineSelectors","inLineRange","layoutRange","lineIntersectPolygon","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","nearZero","namenda","miu","v4","generateBrushOption","DEFAULT_OUT_OF_BRUSH_COLOR","BrushModel","coordInfoList","inBrush","outOfBrush","setAreas","updateController","$from","modelId","Brush","_brushMode","featureManager","brushLang","featureModel","isBrushed","setIconStatus","getIcons","availableIcons","icons","command","Calendar","calendarModel","_rangeInfo","_sw","_sh","_orient","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","date","parseDate","getFullYear","getMonth","getDate","day","getDay","getTime","formatedDate","getNextNDay","setDate","cellSizeSpecified","cellSize","_lineWidth","_getRangeInfo","_initRangeOption","whNames","layoutParams","cellNumbers","whGlobal","calendarRect","dayInfo","week","nthWeek","pointToDate","tl","tr","br","bl","nthX","nthY","_getDateByWeeksAndDay","firstDay","setMonth","reversed","startDateNum","endDateNum","fweek","lweek","nthDay","calendarList","calendarSeries","CalendarModel","dayLabel","monthLabel","yearLabel","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","rangeData","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","sh","addPoints","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","_formatterLabel","formatTplSimple","_yearTextPositionControl","aligns","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","isStart","firstDayOfWeek","weekText","subtext","subtarget","subtextStyle","subtextStyleModel","disableBox","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","subPixelOptimizeRect","calculateDataExtent","seriesExtent","fixExtentByAxis","axisDataLen","setAxisModel","isRestore","percentWindow","_percentWindow","valueWindow","_valueWindow","getPixelPrecision","useOrigin","setRange","setMinMaxSpan","minMaxSpan","_minMaxSpan","_dataZoomModel","valueSpan","_dimName","_axisIndex","getTargetSeriesModels","getOtherAxisModel","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","getMinMaxSpan","calculateDataWindow","percentExtent","boundValue","boundPercent","dataWindow","isInWindow","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","SliderZoomModel","dataBackground","fillerColor","handleIcon","handleStyle","labelPrecision","showDetail","showDataShadow","zoomLock","getOtherDim","thisDim","getCursor","DataZoomView","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dataShadowInfo","_buildView","_updateView","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","location","targetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","_prepareDataShadowInfo","otherDim","otherDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","thisAxis","displaybles","handles","handleLabels","filler","_onDragMove","ondragstart","_showDataInfo","_onDragEnd","onmouseover","onmouseout","bRect","handleColor","viewExtent","_updateInterval","viewExtend","nonRealtime","handleInterval","handleHeight","_updateDataInfo","barTransform","textPoint","orderedHandleEnds","labelTexts","dataInterval","_formatLabel","valueStr","showOrHide","vertex","_dispatchZoomAction","localPoint","disabled","roams","InsideZoomView","shouldRecordRange","allCoordIds","coordInfo","generateCoordId","dataZoomOption","coordId","containsPoint","throttleRate","panGetRange","zoomGetRange","roamControllerOpt","newX","newY","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","percentPoint","pixelStart","oldPoint","newPoint","dataZoomInfo","theDataZoomId","theCoordId","dataZoomInfos","cleanStore","createController","controllerParams","mergeControllerParams","newRecord","onPan","onZoom","wrapAndDispatch","getRange","typePriority","true","move","false","oneType","getColorStopValues","stopValues","DEFAULT_BAR_BOUND","ContinuousModel","hoverLink","hoverLinkDataSize","hoverLinkOnHandle","_resetRange","auto","getSelected","findTargetDataIndices","setStop","oVals","iVals","iIdx","oIdx","iLen","oLen","first","stopsLen","createPolygon","onDrift","onDragEnd","createHandlePoints","textSize","createIndicatorPoints","isRange","halfHoverLinkSize","extentMax","HOVER_LINK_OUT","getHalfHoverLinkSize","HOVER_LINK_SIZE","useHoverLinkOnHandle","VisualMapView","ContinuousView","_shapes","_dataInterval","_useHandle","_hoverLinkDataIndices","_hovering","_renderBar","dataRangeText","_renderEndsText","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","_applyTransform","targetGroup","shapes","_createBarGroup","_dragHandle","handleThumbs","handleLabelPoints","_createHandle","_createIndicator","handleThumb","handleLabel","handleLabelPoint","indicatorLabel","indicatorLabelPoint","visualMapId","_clearHoverLinkToSeries","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","currValue","_showIndicator","cursorValue","rangeSymbol","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","hoverRange","oldBatch","newBatch","resultBatches","compressBatches","_dispatchHighDown","global","normalizeReverse","reformIntervals","PiecewiseModel","minOpen","maxOpen","itemSymbol","_pieceList","mode","_mode","_determineMode","resetMethods","_resetSelected","visualTypesInPieces","exists","getSelectedMapKey","hasSel","getRepresentValue","representValue","pieceInterval","curr","splitStep","pieceListItem","closeList","infinityList","useMinMax","lg","PiecewiseVisualMapView","_onItemClick","_enableHoverLink","indexInModelPieceList","_createItemSymbol","visualState","_getItemAlign","viewData","_getViewData","endsText","viewPieceList","onHoverLink","shapeParam","newKey","updateMarkerLayout","xPx","yPx","createList","mpModel","coordDimsInfos","markerHelper","MarkerView","markPointModel","symbolDrawMap","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","markLineFilter","updateSingleMarkerEndLayout","isFrom","mlModel","fromData","toData","optData","markLineTransform","mlFrom","mlTo","markLineModel","__from","__to","updateDataVisualAndLayout","lineDrawMap","lineColor","fromSymbolSize","toSymbolSize","markAreaFilter","getSingleMarkerEndPoint","maModel","areaData","markAreaTransform","colorUtil","lt","rb","ltCoord","rbCoord","dimPermutations","markAreaModel","areaGroupMap","polygonGroup","__data","compatibleEC2","ec2Types","number","transferItem","controlStyle","controlPosition","itemStyleEmphasis","labelNormal","excludeLabelAttr","currentIndex","setCurrentIndex","isIndexMax","setPlayState","playState","TimelineModel","SliderTimelineModel","checkpointStyle","showPlayBtn","showPrevBtn","showNextBtn","playIcon","stopIcon","nextIcon","prevIcon","autoPlay","rewind","playInterval","_names","_initData","getPlayState","dataArr","idxArr","newItem","getDataItemValue","makeIcon","objPath","giveSymbol","onCreate","rectHover","pointerMoveTo","noAnimation","dragging","TimelineView","TimelineAxis","_timer","_currentPointer","_labelGroup","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","playPosition","prevBtnPosition","nextBtnPosition","xLeft","xRight","labelAlign","labelBaseline","setOrigin","viewBound","getBound","toBound","boundIdx","rotateOriginX","rotateOriginY","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","_customizeScale","niceTicks","getTicksLabels","newGroup","_renderAxisLine","_renderAxisTick","hoverStyleModel","symbolOpt","_changeTimeline","tick","_renderControl","makeBtn","iconPath","willRotate","btn","_handlePlayClick","_renderCurrentPointer","_handlePointerDrag","_handlePointerDragend","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","targetDataIndex","_findNearestTick","handleFrame","axisCoord","nextIndex","_autoLabelInterval","getAxisLabelInterval","ToolboxModel","featureOpt","featureName","Feature","showTitle","iconStyle","isUserFeatureName","listComponentHelper","toolboxModel","processFeature","featureNames","oldName","featureOpts","unusable","createIconPaths","iconName","iconPaths","iconStatus","iconStyleModel","titles","iconStr","__title","_features","_featureNames","titleText","makeFont","needPutOnTop","topOffset","SaveAsImage","saveAsImageLang","$a","download","href","MouseEvent","ie","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","blob","Blob","tab","write","evt","bubbles","cancelable","dispatchEvent","MagicType","magicTypeLang","seriesOptGenreator","radioTypes","generateNewSeriesTypes","newSeriesOpt","radio","currentType","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","other","assembleSeriesWithCategoryAxis","tables","headers","columns","ITEM_SPLITER","items","BLOCK_SPLITER","assembleOtherSeries","vals","argLen","getContentFromModel","trim","isTSVFormat","block","parseTSVContents","tsv","tsvLines","itemSplitRegex","header","parseListContents","hasName","parseContents","blockMetaList","blocks","RegExp","blockMeta","DataView","tryMergeDataOption","original","dataViewLang","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","isDom","buttonContainer","buttonStyle","closeButton","refreshButton","addEventListener","keyCode","which","selectionStart","selectionEnd","substring","newSeriesOptList","DataZoom","_isZoomActive","retrieveAxisSetting","updateBackBtnStatus","history","updateZoomBtnStatus","zoomActive","dataZoomSelectActive","dataZoomLang","DATA_ZOOM_ID_BASE","nextActive","setBatch","findDataZoom","found","dzModel","addForAxis","dataZoomOpt","axisIndicesName","givenAxisIndices","forEachComponent","$fromToolbox","dataZoomOpts","toolboxOpt","Restore","restoreLang","registerPainter","RectText","Displayable","vmlCore","Z2","initRootElStyle","coordsize","coordorigin","encodeHtmlAttribute","String","rgb2Str","g","append","getZIndex","setColorAndOpacity","getColorAndAlpha","updateFillNode","zrEl","gradientType","focus","expansion","cs1","cs2","colorAndAlphaList","colors","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateStrokeNode","dashstyle","updateFillAndStroke","vmlEl","isFill","nPoint","xi","yi","sx","brushVML","vmlRoot","_vmlEl","needTransform","strokeEl","det","weight","toStatic","zIndex","removeRectText","onRemove","onAdd","appendRectText","isImage","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","sWidth","sHeight","hasCrop","vmlElStyle","hasRotation","scaleX","scaleY","p3","maxX","maxY","transformFilter","imageTransformPrefix","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","onload","overflow","cropElStyle","filterStr","textMeasureEl","fontStyleCache","fontStyleCacheCount","fontEl","getFontStyle","fontString","variant","fontVariant","family","measureText","body","ex","offsetWidth","fromTextEl","rich","contentBlock","parseRichText","tokens","textLine","adjustTextX","adjustTextY","pathEl","textPathEl","skewEl","textVmlEl","_textVmlEl","nextSibling","textpathok","textVmlElStyle","string","parseInt10","VMLPainter","vmlViewport","_vmlRoot","_vmlViewport","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","_firstPaint","createMethodNotSupport","zrLog","getViewportRoot","viewportRoot","refresh","_paintList","__alreadyNotVisible","beforeBrush","afterBrush","_getWidth","_getHeight","_width","_height","vmlViewportStyle","checkParentAvailable","insertAfter","prevSibling","prepend","arrayDiff","GradientManager","ClippathManager","SVGPainter","gradientManager","clipPathManager","viewport","_viewport","_visibleList","visibleList","listLen","newVisibleList","svgProxy","prevSvgElement","removed","svgElement","textSvgElement","added","addWithoutUpdate","_getDefs","viewportStyle","outerHTML","unescape","Diff","buildValues","newArr","oldArr","componentPos","componentLen","oldPos","clonePath","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","diagonalPath","basePath","addPath","removePath","canAdd","canRemove","pushComponent","commonCount","tokenize","fillOrStroke","updateDom","__clipPaths","clipPaths","clipPathEl","_textDom","_interopRequireDefault","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","Object","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_react2","_reactDom","_reactDom2","_reactRouterDom","_index","_index2","_list","_list2","_detail","_detail2","Evaluating","_Component","getPrototypeOf","HashRouter","className","classIco","Switch","Route","getElementById","locals","_toConsumableArray","arr2","_app","_env","_this","_this2","PORTOCAL","then","code","msg","setState","catch","alert","toString","getListData","stopPropagation","website","_this3","Link","pathname","search","assess_status","onClick","goWebsite","created_at","_index3","_index4","_index5","_index6","_index7","_index8","Detail","intro","getQuery","error","cont","ico_score","risk_level_color","risk_level_name","desc","ico_assess_issue_info","ico","ico_assess_structure","ico_assess_project_analyse","ProjectIntro","_props","IcoPublish","crowdfunding_start_at","crowdfunding_end_at","ico_circulation","ico_amount","ico_accept","ico_crowfunding_amount","ico_crowfunding_amount_unit","ico_price","_echarts2","Strcture","strcture","refs","myChart","strctureData","theColor","percentage","color_value","ref","color_name","ProjectAnaly","borderRight"],"mappings":"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AAmqF,UACAI,EAAAvqF,IACAwB,GAAAgD,KAAA4lF,EAAA,SAAAjqF,GAxLA,MAyLAA,EAAAoqF,EAAAnB,aAEAO,EAAA7qB,YAAA3+D,OAYA2oF,EAAAhpF,UAAA4qF,YAAA,SAAAC,GACA,MAAAA,aAAAtpB,GACA9E,EACGouB,YAAArB,GACHvsB,EACG4tB,YAAApB,GACHlsB,EAEAd,GAWAusB,EAAAhpF,UAAA8qF,kBAAA,SAAAD,GACA,MAAAA,GAAAltB,aAUAqrB,EAAAhpF,UAAA+qF,cAAA,SAAAF,GACA,MAAAA,GAAAnuB,QAGA,IAAAz7C,GAAA+nE,CACA1pF,GAAAC,QAAA0hB,GpGwriBS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAU3hB,EAAQC,EAASC,GqG1hjBjC,GAAAwrF,GAAAxrF,EAAA,GAGAyrF,EAAAzrF,EAAA,MAEA,WACA,OAAAyO,KAAAg9E,GAAA,CACA,SAAAA,MAAA/gF,eAAA+D,IAAA,YAAAA,GAAA,eAAAA,EAAA,MACA1O,GAAA0O,GAAAg9E,EAAAh9E,OAIAzO,EAAA,KAEAA,EAAA,KAEAA,EAAA,KAEAA,EAAA,KAEAA,EAAA,KAEAA,EAAA,KAEAA,EAAA,KAEAA,EAAA,KAEAA,EAAA,KAEAA,EAAA,KAEAA,EAAA,KAEAA,EAAA,KAEAA,EAAA,KAEAA,EAAA,KAEAA,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","file":"assets/js/evaluating/index.6fab2f806.js","sourcesContent":["/*! hash:edf2248addf727c20559, chunkhash:6fab2f806f68d70af61c, name:evaluating/index, filebase:index.6fab2f806.js, query:, file:assets/js/evaluating/index.6fab2f806.js */\nwebpackJsonp([1],[\n/* 0 */,\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(126);\n\nvar zrUtil = __webpack_require__(0);\n\nvar colorTool = __webpack_require__(46);\n\nvar env = __webpack_require__(27);\n\nvar timsort = __webpack_require__(256);\n\nvar Eventful = __webpack_require__(90);\n\nvar GlobalModel = __webpack_require__(329);\n\nvar ExtensionAPI = __webpack_require__(337);\n\nvar CoordinateSystemManager = __webpack_require__(39);\n\nvar OptionManager = __webpack_require__(338);\n\nvar backwardCompat = __webpack_require__(339);\n\nvar ComponentModel = __webpack_require__(14);\n\nvar SeriesModel = __webpack_require__(16);\n\nvar ComponentView = __webpack_require__(128);\n\nvar ChartView = __webpack_require__(41);\n\nvar graphic = __webpack_require__(2);\n\nvar modelUtil = __webpack_require__(8);\n\nvar _throttle = __webpack_require__(62);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(341);\n\nvar loadingDefault = __webpack_require__(342);\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.3';\nvar dependencies = {\n  zrender: '3.7.2'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$inject.createCanvas(creator);\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // --------\n// Exports\n// --------\n\nvar registerMap;\nvar getMap;\nvar parseGeoJSON;\nvar dataTool; // FIXME\n\nvar $inject = {\n  registerMap: function (f) {\n    registerMap = f;\n    exports.registerMap = f; \n  },\n  getMap: function (f) {\n    getMap = f;\n    exports.getMap = f; \n  },\n  parseGeoJSON: function (f) {\n    parseGeoJSON = f;\n    exports.parseGeoJSON = f; \n  },\n  dataTool: function (f) {\n    dataTool = f;\n    exports.dataTool = f; \n  }\n};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.parseGeoJSON = parseGeoJSON;\nexports.dataTool = dataTool;\nexports.$inject = $inject;var ___ec_export = __webpack_require__(160);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar BoundingRect = __webpack_require__(18);\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(10);\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Model = __webpack_require__(19);\n\nvar componentUtil = __webpack_require__(127);\n\nvar clazzUtil = __webpack_require__(44);\n\nvar layout = __webpack_require__(9);\n\nvar boxLayoutMixin = __webpack_require__(335);\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 15 */,\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar env = __webpack_require__(27);\n\nvar _format = __webpack_require__(10);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = __webpack_require__(44);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = __webpack_require__(8);\n\nvar ComponentModel = __webpack_require__(14);\n\nvar colorPaletteMixin = __webpack_require__(176);\n\nvar _layout = __webpack_require__(9);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Group = __webpack_require__(157);\n\nvar componentUtil = __webpack_require__(127);\n\nvar clazzUtil = __webpack_require__(44);\n\nvar modelUtil = __webpack_require__(8);\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n/***/ }),\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(0);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(10);\n\nvar graphic = __webpack_require__(2);\n\nvar Model = __webpack_require__(19);\n\nvar _number = __webpack_require__(5);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(30);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(37);\n\nvar _vector = __webpack_require__(11);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar axisPointerModelHelper = __webpack_require__(100);\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar zrColor = __webpack_require__(46);\n\nvar _number = __webpack_require__(5);\n\nvar linearMap = _number.linearMap;\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;\n\n/***/ }),\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */\n/***/ (function(module, exports) {\n\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */,\n/* 68 */,\n/* 69 */,\n/* 70 */,\n/* 71 */,\n/* 72 */,\n/* 73 */,\n/* 74 */,\n/* 75 */,\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(2);\n\nvar SymbolClz = __webpack_require__(98);\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\n__webpack_require__(130);\n\n__webpack_require__(352);\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nfunction retrieveTargetInfo(payload, seriesModel) {\n  if (payload && (payload.type === 'treemapZoomToNode' || payload.type === 'treemapRootToNode')) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports) {\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar axisPointerModelHelper = __webpack_require__(100);\n\nvar axisTrigger = __webpack_require__(480);\n\n__webpack_require__(481);\n\n__webpack_require__(482);\n\n__webpack_require__(212);\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar env = __webpack_require__(27);\n\nvar modelUtil = __webpack_require__(8);\n\nvar helper = __webpack_require__(140);\n\nvar AxisProxy = __webpack_require__(536);\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ComponentView = __webpack_require__(128);\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */,\n/* 88 */,\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar _symbol = __webpack_require__(30);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(2);\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = __webpack_require__(178);\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar axisDefault = __webpack_require__(181);\n\nvar ComponentModel = __webpack_require__(14);\n\nvar _layout = __webpack_require__(9);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Model = __webpack_require__(19);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType(seriesType, function (series) {\n    var data = series.getData();\n    data.filterSelf(function (idx) {\n      var name = data.getName(idx); // If in any legend component the status is not selected.\n\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }, this);\n  }, this);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar Geo = __webpack_require__(379);\n\nvar layout = __webpack_require__(9);\n\nvar numberUtil = __webpack_require__(5);\n\nvar parseGeoJson = __webpack_require__(186);\n\nvar mapDataStores = {};\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = mapDataStores[name];\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = mapDataStores[mapType];\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * @param {string} mapName\n   * @param {Object|string} geoJson\n   * @param {Object} [specialAreas]\n   *\n   * @example\n   *     $.get('USA.json', function (geoJson) {\n   *         echarts.registerMap('USA', geoJson);\n   *         // Or\n   *         echarts.registerMap('USA', {\n   *             geoJson: geoJson,\n   *             specialAreas: {}\n   *         })\n   *     });\n   */\n  registerMap: function (mapName, geoJson, specialAreas) {\n    if (geoJson.geoJson && !geoJson.features) {\n      specialAreas = geoJson.specialAreas;\n      geoJson = geoJson.geoJson;\n    }\n\n    if (typeof geoJson === 'string') {\n      geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n    }\n\n    mapDataStores[mapName] = {\n      geoJson: geoJson,\n      specialAreas: specialAreas\n    };\n  },\n\n  /**\n   * @param {string} mapName\n   * @return {Object}\n   */\n  getMap: function (mapName) {\n    return mapDataStores[mapName];\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = geoCreator.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n}; // Inject methods into echarts\n\necharts.$inject.registerMap(geoCreator.registerMap);\necharts.$inject.getMap(geoCreator.getMap);\necharts.$inject.parseGeoJSON(parseGeoJson);\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Eventful = __webpack_require__(90);\n\nvar eventTool = __webpack_require__(48);\n\nvar interactionMutex = __webpack_require__(191);\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar List = __webpack_require__(20);\n\nvar completeDimensions = __webpack_require__(38);\n\nvar WhiskerBoxDraw = __webpack_require__(446);\n\nvar zrUtil = __webpack_require__(0);\n\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var categories;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      categories = xAxisModel.getCategories();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      categories = yAxisModel.getCategories();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var data = option.data;\n    addOrdinal && zrUtil.each(data, function (item, index) {\n      if (item.value && zrUtil.isArray(item.value)) {\n        item.value.unshift(index);\n      } else {\n        zrUtil.isArray(item) && item.unshift(index);\n      }\n    });\n    var defaultValueDimensions = this.defaultValueDimensions;\n    var dimensions = [{\n      name: baseAxisDim,\n      otherDims: {\n        tooltip: false\n      },\n      dimsDef: ['base']\n    }, {\n      name: otherAxisDim,\n      dimsDef: defaultValueDimensions.slice()\n    }];\n    dimensions = completeDimensions(dimensions, data, {\n      encodeDef: this.get('encode'),\n      dimsDef: this.get('dimensions'),\n      // Consider empty data entry.\n      dimCount: defaultValueDimensions.length + 1\n    });\n    var list = new List(dimensions, this);\n    list.initData(data, categories ? categories.slice() : null);\n    return list;\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nvar viewMixin = {\n  init: function () {\n    /**\n     * Old data.\n     * @private\n     * @type {module:echarts/chart/helper/WhiskerBoxDraw}\n     */\n    var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(this.getStyleUpdater());\n    this.group.add(whiskerBoxDraw.group);\n  },\n  render: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.updateData(seriesModel.getData());\n  },\n  remove: function (ecModel) {\n    this._whiskerBoxDraw.remove();\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;\nexports.viewMixin = viewMixin;\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar textContain = __webpack_require__(47);\n\nvar formatUtil = __webpack_require__(10);\n\nvar matrix = __webpack_require__(37);\n\nvar axisHelper = __webpack_require__(36);\n\nvar AxisBuilder = __webpack_require__(52);\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar VisualMapping = __webpack_require__(54);\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem, true);\n  } else {\n    data.each([dimension], eachItem, true);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\n\n/***/ }),\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar _clazz = __webpack_require__(44);\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(157);\n\nvar componentUtil = __webpack_require__(127);\n\nvar clazzUtil = __webpack_require__(44);\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar BoundingRect = __webpack_require__(18);\n\nvar _layout = __webpack_require__(9);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = __webpack_require__(36);\n\nvar Cartesian2D = __webpack_require__(348);\n\nvar Axis2D = __webpack_require__(350);\n\nvar CoordinateSystem = __webpack_require__(39);\n\n__webpack_require__(351);\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  updateSelectedMap: function (targetList) {\n    this._targetList = targetList.slice();\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports) {\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType, ecModel) {\n  // Pie and funnel may use diferrent scope\n  var paletteScope = {};\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var dataAll = seriesModel.getRawData();\n    var idxMap = {};\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports) {\n\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(2);\n\nvar LineGroup = __webpack_require__(136);\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\n\n\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n/**\n * @param {module:echarts/data/List} lineData\n */\n\nlineDrawProto.updateData = function (lineData) {\n  var oldLineData = this._lineData;\n  var group = this.group;\n  var LineCtor = this._ctor;\n  var hostModel = lineData.hostModel;\n  var seriesScope = {\n    lineStyle: hostModel.getModel('lineStyle.normal').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('lineStyle.emphasis').getLineStyle(),\n    labelModel: hostModel.getModel('label.normal'),\n    hoverLabelModel: hostModel.getModel('label.emphasis')\n  };\n  lineData.diff(oldLineData).add(function (idx) {\n    if (!lineNeedsDraw(lineData.getItemLayout(idx))) {\n      return;\n    }\n\n    var lineGroup = new LineCtor(lineData, idx, seriesScope);\n    lineData.setItemGraphicEl(idx, lineGroup);\n    group.add(lineGroup);\n  }).update(function (newIdx, oldIdx) {\n    var lineGroup = oldLineData.getItemGraphicEl(oldIdx);\n\n    if (!lineNeedsDraw(lineData.getItemLayout(newIdx))) {\n      group.remove(lineGroup);\n      return;\n    }\n\n    if (!lineGroup) {\n      lineGroup = new LineCtor(lineData, newIdx, seriesScope);\n    } else {\n      lineGroup.updateData(lineData, newIdx, seriesScope);\n    }\n\n    lineData.setItemGraphicEl(newIdx, lineGroup);\n    group.add(lineGroup);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n  this._lineData = lineData;\n};\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData;\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LineDraw;\nmodule.exports = _default;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar vector = __webpack_require__(11);\n\nvar symbolUtil = __webpack_require__(30);\n\nvar LinePath = __webpack_require__(408);\n\nvar graphic = __webpack_require__(2);\n\nvar _number = __webpack_require__(5);\n\nvar round = _number.round;\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n    hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n    labelModel = itemModel.getModel('label.normal');\n    hoverLabelModel = itemModel.getModel('label.emphasis');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var defaultText;\n  var normalText;\n  var emphasisText;\n\n  if (showLabel || hoverShowLabel) {\n    var rawVal = seriesModel.getRawValue(idx);\n    defaultText = rawVal == null ? defaultText = lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    defaultLabelColor = visualColor || '#000';\n    normalText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType), defaultText);\n    emphasisText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), normalText);\n  } // label.afterUpdate = lineAfterUpdate;\n\n\n  if (showLabel) {\n    var labelStyle = graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  } else {\n    label.setStyle('text', null);\n  }\n\n  if (hoverShowLabel) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Eventful = __webpack_require__(90);\n\nvar graphic = __webpack_require__(2);\n\nvar interactionMutex = __webpack_require__(191);\n\nvar DataDiffer = __webpack_require__(74);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar clazzUtil = __webpack_require__(44);\n\nvar graphic = __webpack_require__(2);\n\nvar axisPointerModelHelper = __webpack_require__(100);\n\nvar eventTool = __webpack_require__(48);\n\nvar throttleUtil = __webpack_require__(62);\n\nvar modelUtil = __webpack_require__(8);\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Polar = __webpack_require__(509);\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = __webpack_require__(36);\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = __webpack_require__(39);\n\n__webpack_require__(512);\n\n// TODO Axis scale\n// 依赖 PolarModel 做预处理\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      radiusAxis.scale.unionExtentFromData(data, 'radius');\n      angleAxis.scale.unionExtentFromData(data, 'angle');\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar formatUtil = __webpack_require__(10);\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar env = __webpack_require__(27);\n\nvar modelUtil = __webpack_require__(8);\n\nvar formatUtil = __webpack_require__(10);\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt.label, ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, modelUtil.dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar numberUtil = __webpack_require__(5);\n\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n}\n\nfunction getPrecision(data, valueAxisDim, dataIndex) {\n  var precision = -1;\n\n  do {\n    precision = Math.max(numberUtil.getPrecision(data.get(valueAxisDim, dataIndex)), precision);\n    data = data.stackedOn;\n  } while (data);\n\n  return precision;\n}\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var value = numCalculate(data, targetDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(targetDataDim, value, true)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex, true);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex, true);\n  var precision = getPrecision(data, targetDataDim, dataIndex);\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          var dataDim = seriesModel.coordDimToDataDim(dims[i])[0];\n          coord[i] = numCalculate(data, dataDim, coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(seriesModel.dataDimToCoordDim(ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n    ret.valueDataDim = seriesModel.coordDimToDataDim(ret.valueAxis.dim)[0];\n  }\n\n  return ret;\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    }, true);\n    return sum / count;\n  } else {\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(145);\n\nvar createElement = _core.createElement;\n\nvar PathProxy = __webpack_require__(111);\n\nvar BoundingRect = __webpack_require__(18);\n\nvar textContain = __webpack_require__(47);\n\nvar textHelper = __webpack_require__(158);\n\nvar Text = __webpack_require__(97);\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale);\n    attr(svgEl, 'paint-order', 'stroke');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive % PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  text != null && (text += '');\n\n  if (!text) {\n    return;\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    }\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports) {\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;\n\n/***/ }),\n/* 146 */,\n/* 147 */,\n/* 148 */,\n/* 149 */,\n/* 150 */,\n/* 151 */,\n/* 152 */,\n/* 153 */,\n/* 154 */,\n/* 155 */,\n/* 156 */,\n/* 157 */,\n/* 158 */,\n/* 159 */,\n/* 160 */,\n/* 161 */,\n/* 162 */,\n/* 163 */,\n/* 164 */,\n/* 165 */,\n/* 166 */,\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */,\n/* 175 */,\n/* 176 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _clazz = __webpack_require__(44);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 177 */,\n/* 178 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _model = __webpack_require__(8);\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;\n\n/***/ }),\n/* 179 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(29);\n\nvar vec2 = __webpack_require__(11);\n\nvar fixClipWithShadow = __webpack_require__(333);\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n/***/ }),\n/* 180 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar ComponentModel = __webpack_require__(14);\n\nvar axisModelCreator = __webpack_require__(99);\n\nvar axisModelCommonMixin = __webpack_require__(75);\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 181 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n/* 182 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(16);\n\nvar createListFromArray = __webpack_require__(49);\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(2);\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Region = __webpack_require__(187);\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 187 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(18);\n\nvar bbox = __webpack_require__(175);\n\nvar vec2 = __webpack_require__(11);\n\nvar polygonContain = __webpack_require__(188);\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(332);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar vector = __webpack_require__(11);\n\nvar matrix = __webpack_require__(37);\n\nvar BoundingRect = __webpack_require__(18);\n\nvar Transformable = __webpack_require__(254);\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransform = new TransformDummy();\n  this._viewTransform = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var viewTransform = this._viewTransform;\n    viewTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    viewTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransform;\n  },\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var viewTransformMatrix = this._viewTransform.getLocalTransform();\n\n    var roamTransform = this._roamTransform;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, viewTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, viewTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransform = this._roamTransform;\n    var viewTransform = this._viewTransform;\n    viewTransform.parent = roamTransform;\n    roamTransform.updateTransform();\n    viewTransform.updateTransform();\n    viewTransform.transform && matrix.copy(this.transform || (this.transform = []), viewTransform.transform);\n\n    if (this.transform) {\n      this.invTransform = this.invTransform || [];\n      matrix.invert(this.invTransform, this.transform);\n    } else {\n      this.invTransform = null;\n    }\n\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data) {\n    var transform = this.transform;\n    return transform ? v2ApplyTransform([], data, transform) : [data[0], data[1]];\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar RoamController = __webpack_require__(103);\n\nvar roamHelper = __webpack_require__(192);\n\nvar _cursorHelper = __webpack_require__(134);\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = __webpack_require__(2);\n\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle', 'normal'];\n    var hoverItemStyleAccessPath = ['itemStyle', 'emphasis'];\n    var labelAccessPath = ['label', 'normal'];\n    var hoverLabelAccessPath = ['label', 'emphasis'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get('value', dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports) {\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar _roamHelper = __webpack_require__(194);\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateLayout'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports) {\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Model = __webpack_require__(19);\n\nvar List = __webpack_require__(20);\n\nvar linkList = __webpack_require__(196);\n\nvar completeDimensions = __webpack_require__(38);\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensions = completeDimensions([{\n    name: 'value'\n  }], listData, {\n    dimCount: dimMax\n  });\n  var list = new List(dimensions, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar layout = __webpack_require__(9);\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;\n\n/***/ }),\n/* 198 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _traversalHelper = __webpack_require__(394);\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = __webpack_require__(197);\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\nfunction _default(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n  init(virtualRoot);\n  eachAfter(realRoot, firstWalk, separation);\n  virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n  eachBefore(realRoot, secondWalk);\n  var left = realRoot;\n  var right = realRoot;\n  var bottom = realRoot;\n  eachBefore(realRoot, function (node) {\n    var x = node.getLayout().x;\n\n    if (x < left.getLayout().x) {\n      left = node;\n    }\n\n    if (x > right.getLayout().x) {\n      right = node;\n    }\n\n    if (node.depth > bottom.depth) {\n      bottom = node;\n    }\n  });\n  var delta = left === right ? 1 : separation(left, right) / 2;\n  var tx = delta - left.getLayout().x;\n  var kx = 0;\n  var ky = 0;\n  var coorX = 0;\n  var coorY = 0;\n\n  if (layout === 'radial') {\n    kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n    ky = height / (bottom.depth - 1 || 1);\n    eachBefore(realRoot, function (node) {\n      coorX = (node.getLayout().x + tx) * kx;\n      coorY = (node.depth - 1) * ky;\n      var finalCoor = radialCoordinate(coorX, coorY);\n      node.setLayout({\n        x: finalCoor.x,\n        y: finalCoor.y,\n        rawX: coorX,\n        rawY: coorY\n      }, true);\n    });\n  } else {\n    if (seriesModel.get('orient') === 'horizontal') {\n      ky = height / (right.getLayout().x + delta + tx);\n      kx = width / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorY = (node.getLayout().x + tx) * ky;\n        coorX = (node.depth - 1) * kx;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    } else {\n      kx = width / (right.getLayout().x + delta + tx);\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 199 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar List = __webpack_require__(20);\n\nvar Graph = __webpack_require__(406);\n\nvar linkList = __webpack_require__(196);\n\nvar completeDimensions = __webpack_require__(38);\n\nvar CoordinateSystem = __webpack_require__(39);\n\nvar createListFromArray = __webpack_require__(49);\n\nfunction _default(nodes, edges, hostModel, directed, beforeLink) {\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = hostModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, hostModel, hostModel.ecModel);\n  } else {\n    // FIXME\n    var coordSysCtor = CoordinateSystem.get(coordSys); // FIXME\n\n    var dimensionNames = completeDimensions((coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []).concat(['value']), nodes);\n    nodeData = new List(dimensionNames, hostModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], hostModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 200 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(11);\n\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.normal.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;\n\n/***/ }),\n/* 201 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(11);\n\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.normal.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;\n\n/***/ }),\n/* 202 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar throttleUtil = __webpack_require__(62);\n\nvar parallelPreprocessor = __webpack_require__(428);\n\n__webpack_require__(203);\n\n__webpack_require__(431);\n\n__webpack_require__(433);\n\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Parallel = __webpack_require__(429);\n\nvar CoordinateSystem = __webpack_require__(39);\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(18);\n\nvar _cursorHelper = __webpack_require__(134);\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = __webpack_require__(2);\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(2);\n\nvar Line = __webpack_require__(136);\n\nvar zrUtil = __webpack_require__(0);\n\nvar _symbol = __webpack_require__(30);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = __webpack_require__(11);\n\nvar curveUtil = __webpack_require__(91);\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;\n\n/***/ }),\n/* 207 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(2);\n\nvar zrUtil = __webpack_require__(0);\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n    hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;\n\n/***/ }),\n/* 208 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n__webpack_require__(475);\n\n__webpack_require__(478);\n\n__webpack_require__(479);\n\n__webpack_require__(80);\n\n__webpack_require__(483);\n\necharts.extendComponentView({\n  type: 'single'\n});\n\n/***/ }),\n/* 209 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.labelInterval = axis.getLabelInterval();\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n/* 210 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar modelUtil = __webpack_require__(8);\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 211 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar env = __webpack_require__(27);\n\nvar modelUtil = __webpack_require__(8);\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n/* 212 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(2);\n\nvar BaseAxisPointer = __webpack_require__(138);\n\nvar viewHelper = __webpack_require__(105);\n\nvar cartesianAxisHelper = __webpack_require__(182);\n\nvar AxisView = __webpack_require__(53);\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n/* 213 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar Model = __webpack_require__(19);\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 214 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar _symbol = __webpack_require__(30);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(2);\n\nvar _listComponent = __webpack_require__(215);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(9);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 215 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(9);\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(10);\n\nvar graphic = __webpack_require__(2);\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar modelUtil = __webpack_require__(8);\n\nvar brushHelper = __webpack_require__(204);\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 217 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(14);\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n/***/ }),\n/* 218 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}\n\n/***/ }),\n/* 219 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar helper = __webpack_require__(140);\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(14);\n\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});\n\n/***/ }),\n/* 222 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar visualSolution = __webpack_require__(106);\n\nvar VisualMapping = __webpack_require__(54);\n\necharts.registerVisual(echarts.PRIORITY.VISUAL.COMPONENT, function (ecModel) {\n  ecModel.eachComponent('visualMap', function (visualMapModel) {\n    processSingleVisualMap(visualMapModel, ecModel);\n  });\n  prepareVisualMeta(ecModel);\n});\n\nfunction processSingleVisualMap(visualMapModel, ecModel) {\n  visualMapModel.eachTargetSeries(function (seriesModel) {\n    var data = seriesModel.getData();\n    visualSolution.applyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, data, visualMapModel.getValueState, visualMapModel, visualMapModel.getDataDimension(data));\n  });\n} // Only support color.\n\n\nfunction prepareVisualMeta(ecModel) {\n  ecModel.eachSeries(function (seriesModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        visualMeta.dimension = visualMapModel.getDataDimension(data);\n        visualMetaList.push(visualMeta);\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  });\n} // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}\n\n/***/ }),\n/* 223 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar env = __webpack_require__(27);\n\nvar visualDefault = __webpack_require__(224);\n\nvar VisualMapping = __webpack_require__(54);\n\nvar visualSolution = __webpack_require__(106);\n\nvar modelUtil = __webpack_require__(8);\n\nvar numberUtil = __webpack_require__(5);\n\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar DEFAULT_COLOR = ['#f6efa6', '#d88273', '#bf444c'];\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    return optDim != null ? optDim : list.dimensions.length - 1;\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: DEFAULT_COLOR\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 224 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;\n\n/***/ }),\n/* 225 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar formatUtil = __webpack_require__(10);\n\nvar layout = __webpack_require__(9);\n\nvar VisualMapping = __webpack_require__(54);\n\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 226 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar _layout = __webpack_require__(9);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;\n\n/***/ }),\n/* 227 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});\n\n/***/ }),\n/* 228 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n/***/ }),\n/* 229 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(27);\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\nvar createNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    createNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    createNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;\n\n/***/ }),\n/* 230 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(145);\n\nvar createElement = _core.createElement;\n\nvar zrUtil = __webpack_require__(0);\n\nvar Path = __webpack_require__(29);\n\nvar ZImage = __webpack_require__(110);\n\nvar ZText = __webpack_require__(97);\n\nvar _graphic = __webpack_require__(144);\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(svgRoot, tagNames, markLabel) {\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element._dom && defs.contains(element._dom)) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element._dom = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n  defs.removeChild(element._dom);\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;\n\n/***/ }),\n/* 231 */,\n/* 232 */,\n/* 233 */,\n/* 234 */,\n/* 235 */,\n/* 236 */,\n/* 237 */,\n/* 238 */,\n/* 239 */,\n/* 240 */,\n/* 241 */,\n/* 242 */,\n/* 243 */,\n/* 244 */,\n/* 245 */,\n/* 246 */,\n/* 247 */,\n/* 248 */,\n/* 249 */,\n/* 250 */,\n/* 251 */,\n/* 252 */,\n/* 253 */,\n/* 254 */,\n/* 255 */,\n/* 256 */,\n/* 257 */,\n/* 258 */,\n/* 259 */,\n/* 260 */,\n/* 261 */,\n/* 262 */,\n/* 263 */,\n/* 264 */,\n/* 265 */,\n/* 266 */,\n/* 267 */,\n/* 268 */,\n/* 269 */,\n/* 270 */,\n/* 271 */,\n/* 272 */,\n/* 273 */,\n/* 274 */,\n/* 275 */,\n/* 276 */,\n/* 277 */,\n/* 278 */,\n/* 279 */,\n/* 280 */,\n/* 281 */,\n/* 282 */,\n/* 283 */,\n/* 284 */,\n/* 285 */,\n/* 286 */,\n/* 287 */,\n/* 288 */,\n/* 289 */,\n/* 290 */,\n/* 291 */,\n/* 292 */,\n/* 293 */,\n/* 294 */,\n/* 295 */,\n/* 296 */,\n/* 297 */,\n/* 298 */,\n/* 299 */,\n/* 300 */,\n/* 301 */,\n/* 302 */,\n/* 303 */,\n/* 304 */,\n/* 305 */,\n/* 306 */,\n/* 307 */,\n/* 308 */,\n/* 309 */,\n/* 310 */,\n/* 311 */,\n/* 312 */,\n/* 313 */,\n/* 314 */,\n/* 315 */,\n/* 316 */,\n/* 317 */,\n/* 318 */,\n/* 319 */,\n/* 320 */,\n/* 321 */,\n/* 322 */,\n/* 323 */,\n/* 324 */,\n/* 325 */,\n/* 326 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _echarts = __webpack_require__(1);\n\n\nvar _export = __webpack_require__(160);\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\n__webpack_require__(343);\n\n__webpack_require__(354);\n\n__webpack_require__(358);\n\n__webpack_require__(363);\n\n__webpack_require__(367);\n\n__webpack_require__(377);\n\n__webpack_require__(389);\n\n__webpack_require__(396);\n\n__webpack_require__(404);\n\n__webpack_require__(419);\n\n__webpack_require__(423);\n\n__webpack_require__(427);\n\n__webpack_require__(439);\n\n__webpack_require__(444);\n\n__webpack_require__(450);\n\n__webpack_require__(456);\n\n__webpack_require__(460);\n\n__webpack_require__(467);\n\n__webpack_require__(471);\n\n__webpack_require__(474);\n\n__webpack_require__(488);\n\n__webpack_require__(494);\n\n__webpack_require__(495);\n\n__webpack_require__(496);\n\n__webpack_require__(503);\n\n__webpack_require__(80);\n\n__webpack_require__(507);\n\n__webpack_require__(519);\n\n__webpack_require__(202);\n\n__webpack_require__(208);\n\n__webpack_require__(522);\n\n__webpack_require__(530);\n\n__webpack_require__(534);\n\n__webpack_require__(535);\n\n__webpack_require__(542);\n\n__webpack_require__(549);\n\n__webpack_require__(552);\n\n__webpack_require__(555);\n\n__webpack_require__(558);\n\n__webpack_require__(567);\n\n__webpack_require__(578);\n\n__webpack_require__(581);\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\n/***/ }),\n/* 327 */,\n/* 328 */,\n/* 329 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar modelUtil = __webpack_require__(8);\n\nvar Model = __webpack_require__(19);\n\nvar ComponentModel = __webpack_require__(14);\n\nvar globalDefault = __webpack_require__(336);\n\nvar colorPaletteMinin = __webpack_require__(176);\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 330 */,\n/* 331 */,\n/* 332 */,\n/* 333 */,\n/* 334 */,\n/* 335 */\n/***/ (function(module, exports) {\n\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 336 */\n/***/ (function(module, exports) {\n\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 337 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n/* 338 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar modelUtil = __webpack_require__(8);\n\nvar ComponentModel = __webpack_require__(14);\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 339 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(0);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(340);\n\nvar _model = __webpack_require__(8);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 340 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar modelUtil = __webpack_require__(8);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 341 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(159);\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 342 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 343 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\n__webpack_require__(344);\n\n__webpack_require__(345);\n\nvar visualSymbol = __webpack_require__(51);\n\nvar layoutPoints = __webpack_require__(129);\n\nvar dataSample = __webpack_require__(347);\n\n__webpack_require__(77);\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));\n\n/***/ }),\n/* 344 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createListFromArray = __webpack_require__(49);\n\nvar SeriesModel = __webpack_require__(16);\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 345 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar SymbolDraw = __webpack_require__(76);\n\nvar SymbolClz = __webpack_require__(98);\n\nvar lineAnimationDiff = __webpack_require__(346);\n\nvar graphic = __webpack_require__(2);\n\nvar modelUtil = __webpack_require__(8);\n\nvar _poly = __webpack_require__(179);\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = __webpack_require__(41);\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 346 */\n/***/ (function(module, exports) {\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 347 */\n/***/ (function(module, exports) {\n\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 348 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Cartesian = __webpack_require__(349);\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n/* 349 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n/* 350 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Axis = __webpack_require__(50);\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n/* 351 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(180);\n\nvar ComponentModel = __webpack_require__(14);\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 352 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(180);\n\n__webpack_require__(353);\n\n/***/ }),\n/* 353 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar AxisBuilder = __webpack_require__(52);\n\nvar AxisView = __webpack_require__(53);\n\nvar cartesianAxisHelper = __webpack_require__(182);\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n/* 354 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar barLayoutGrid = __webpack_require__(131);\n\n__webpack_require__(130);\n\n__webpack_require__(355);\n\n__webpack_require__(356);\n\n__webpack_require__(77);\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n/***/ }),\n/* 355 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BaseBarSeries = __webpack_require__(183);\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 356 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar _helper = __webpack_require__(184);\n\nvar setLabel = _helper.setLabel;\n\nvar Model = __webpack_require__(19);\n\nvar barItemStyle = __webpack_require__(357);\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 357 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(96);\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 358 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\n__webpack_require__(359);\n\n__webpack_require__(360);\n\nvar createDataSelectAction = __webpack_require__(185);\n\nvar dataColor = __webpack_require__(133);\n\nvar pieLayout = __webpack_require__(361);\n\nvar dataFilter = __webpack_require__(101);\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(zrUtil.curry(dataColor, 'pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'pie'));\n\n/***/ }),\n/* 359 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar List = __webpack_require__(20);\n\nvar zrUtil = __webpack_require__(0);\n\nvar modelUtil = __webpack_require__(8);\n\nvar _number = __webpack_require__(5);\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar completeDimensions = __webpack_require__(38);\n\nvar dataSelectableMixin = __webpack_require__(132);\n\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(option.data);\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this.option.data);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each('value', function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      normal: {\n        // If rotate around circle\n        rotate: false,\n        show: true,\n        // 'outer', 'inside', 'center'\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n        // 默认使用全局文本样式，详见TEXTSTYLE\n        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n      },\n      emphasis: {}\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      normal: {\n        show: true,\n        // 引导线两段中的第一段长度\n        length: 15,\n        // 引导线两段中的第二段长度\n        length2: 15,\n        smooth: false,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1\n      },\n      emphasis: {}\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut',\n    data: []\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 360 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar ChartView = __webpack_require__(41);\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle()));\n  sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), itemModel.get('selected'), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n/***/ }),\n/* 361 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = __webpack_require__(362);\n\nvar zrUtil = __webpack_require__(0);\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var data = seriesModel.getData();\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each('value', function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum('value'); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent('value');\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each('value', function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }, true); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 362 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(47);\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 363 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\n__webpack_require__(364);\n\n__webpack_require__(365);\n\nvar visualSymbol = __webpack_require__(51);\n\nvar layoutPoints = __webpack_require__(129);\n\n__webpack_require__(77);\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'scatter', 'circle', null));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'scatter'));\n\n/***/ }),\n/* 364 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createListFromArray = __webpack_require__(49);\n\nvar SeriesModel = __webpack_require__(16);\n\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // normal: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    //     }\n    // },\n    itemStyle: {\n      normal: {\n        opacity: 0.8 // color: 各异\n\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 365 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar SymbolDraw = __webpack_require__(76);\n\nvar LargeSymbolDraw = __webpack_require__(366);\n\necharts.extendChartView({\n  type: 'scatter',\n  init: function () {\n    this._normalSymbolDraw = new SymbolDraw();\n    this._largeSymbolDraw = new LargeSymbolDraw();\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var largeSymbolDraw = this._largeSymbolDraw;\n    var normalSymbolDraw = this._normalSymbolDraw;\n    var group = this.group;\n    var symbolDraw = seriesModel.get('large') && data.count() > seriesModel.get('largeThreshold') ? largeSymbolDraw : normalSymbolDraw;\n    this._symbolDraw = symbolDraw;\n    symbolDraw.updateData(data);\n    group.add(symbolDraw.group);\n    group.remove(symbolDraw === largeSymbolDraw ? normalSymbolDraw.group : largeSymbolDraw.group);\n  },\n  updateLayout: function (seriesModel) {\n    this._symbolDraw.updateLayout(seriesModel);\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api, true);\n  },\n  dispose: function () {}\n});\n\n/***/ }),\n/* 366 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(2);\n\nvar _symbol = __webpack_require__(30);\n\nvar createSymbol = _symbol.createSymbol;\n// TODO Batch by color\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null,\n    sizes: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var sizes = shape.sizes;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (isNaN(pt[0]) || isNaN(pt[1])) {\n        continue;\n      }\n\n      var size = sizes[i];\n\n      if (size[0] < 4) {\n        // Optimize for small symbol\n        path.rect(pt[0] - size[0] / 2, pt[1] - size[1] / 2, size[0], size[1]);\n      } else {\n        symbolProxyShape.x = pt[0] - size[0] / 2;\n        symbolProxyShape.y = pt[1] - size[1] / 2;\n        symbolProxyShape.width = size[0];\n        symbolProxyShape.height = size[1];\n        symbolProxy.buildPath(path, symbolProxyShape, true);\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var points = shape.points;\n    var sizes = shape.sizes; // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var i = points.length - 1; i >= 0; i--) {\n      var pt = points[i];\n      var size = sizes[i];\n      var x0 = pt[0] - size[0] / 2;\n      var y0 = pt[1] - size[1] / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + size[0] && y <= y0 + size[1]) {\n        // i is dataIndex\n        return i;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n  this._symbolEl = new LargeSymbolPath({// rectHover: true,\n    // cursor: 'default'\n  });\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = this._symbolEl;\n  var seriesModel = data.hostModel;\n  symbolEl.setShape({\n    points: data.mapArray(data.getItemLayout),\n    sizes: data.mapArray(function (idx) {\n      var size = data.getItemVisual(idx, 'symbolSize');\n\n      if (!(size instanceof Array)) {\n        size = [size, size];\n      }\n\n      return size;\n    })\n  }); // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  symbolEl.useStyle(seriesModel.getModel('itemStyle.normal').getItemStyle(['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  } // Enable tooltip\n  // PENDING May have performance issue when path is extremely large\n\n\n  symbolEl.seriesIndex = seriesModel.seriesIndex;\n  symbolEl.on('mousemove', function (e) {\n    symbolEl.dataIndex = null;\n    var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n    if (dataIndex >= 0) {\n      // Provide dataIndex for tooltip\n      symbolEl.dataIndex = dataIndex;\n    }\n  }); // Add back\n\n  this.group.add(symbolEl);\n};\n\nlargeSymbolProto.updateLayout = function (seriesModel) {\n  var data = seriesModel.getData();\n\n  this._symbolEl.setShape({\n    points: data.mapArray(data.getItemLayout)\n  });\n};\n\nlargeSymbolProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n/* 367 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\n__webpack_require__(368);\n\n__webpack_require__(373);\n\n__webpack_require__(374);\n\nvar dataColor = __webpack_require__(133);\n\nvar visualSymbol = __webpack_require__(51);\n\nvar radarLayout = __webpack_require__(375);\n\nvar dataFilter = __webpack_require__(101);\n\nvar backwardCompat = __webpack_require__(376);\n\n// Must use radar component\necharts.registerVisual(zrUtil.curry(dataColor, 'radar'));\necharts.registerVisual(zrUtil.curry(visualSymbol, 'radar', 'circle', null));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'radar'));\necharts.registerPreprocessor(backwardCompat);\n\n/***/ }),\n/* 368 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(369);\n\n__webpack_require__(371);\n\n__webpack_require__(372);\n\n/***/ }),\n/* 369 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar IndicatorAxis = __webpack_require__(370);\n\nvar IntervalScale = __webpack_require__(177);\n\nvar numberUtil = __webpack_require__(5);\n\nvar _axisHelper = __webpack_require__(36);\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = __webpack_require__(39);\n\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, indicatorAxis.dim);\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;\n\n/***/ }),\n/* 370 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Axis = __webpack_require__(50);\n\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;\n\n/***/ }),\n/* 371 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar axisDefault = __webpack_require__(181);\n\nvar Model = __webpack_require__(19);\n\nvar axisModelCommonMixin = __webpack_require__(75);\n\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 372 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar AxisBuilder = __webpack_require__(52);\n\nvar graphic = __webpack_require__(2);\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i]\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i],\n              r: ticksRadius[i + 1]\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 373 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(16);\n\nvar List = __webpack_require__(20);\n\nvar completeDimensions = __webpack_require__(38);\n\nvar zrUtil = __webpack_require__(0);\n\nvar _format = __webpack_require__(10);\n\nvar encodeHTML = _format.encodeHTML;\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var data = option.data || [];\n    var dimensions = completeDimensions([], data, {\n      extraPrefix: 'indicator_',\n      extraFromZero: true\n    });\n    var list = new List(dimensions, this);\n    list.initData(data);\n    return list;\n  },\n  formatTooltip: function (dataIndex) {\n    var value = this.getRawValue(dataIndex);\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      return encodeHTML(axis.name + ' : ' + value[idx]);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 374 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar graphic = __webpack_require__(2);\n\nvar zrUtil = __webpack_require__(0);\n\nvar symbolUtil = __webpack_require__(30);\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle.normal').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle.normal');\n      var hoverAreaStyleModel = itemModel.getModel('areaStyle.emphasis');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 375 */\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n      var dim = data.dimensions[i];\n      data.each(dim, pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 376 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 377 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n__webpack_require__(378);\n\n__webpack_require__(384);\n\n__webpack_require__(193);\n\n__webpack_require__(102);\n\nvar mapSymbolLayout = __webpack_require__(385);\n\nvar mapVisual = __webpack_require__(386);\n\nvar mapDataStatistic = __webpack_require__(387);\n\nvar backwardCompat = __webpack_require__(388);\n\nvar createDataSelectAction = __webpack_require__(185);\n\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);\n\n/***/ }),\n/* 378 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar List = __webpack_require__(20);\n\nvar SeriesModel = __webpack_require__(16);\n\nvar completeDimensions = __webpack_require__(38);\n\nvar _format = __webpack_require__(10);\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = __webpack_require__(132);\n\nvar geoCreator = __webpack_require__(102);\n\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    this._fillOption(option, this.getMapType()); // this.option = option;\n\n\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(option.data);\n  },\n  getInitialData: function (option) {\n    var dimensions = completeDimensions(['value'], option.data || []);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  mergeOption: function (newOption) {\n    this._fillOption(newOption, this.getMapType());\n\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this.option.data);\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {\n    // Shallow clone\n    // option = zrUtil.extend({}, option);\n    option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap); // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    return this.getData().get('value', dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n\n      if (!isNaN(seriesGroup[i].originalData.get('value', otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      normal: {\n        show: false,\n        color: '#000'\n      },\n      emphasis: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      }\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderWidth: 0.5,\n        borderColor: '#444',\n        areaColor: '#eee'\n      },\n      // 也是选中样式\n      emphasis: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 379 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar BoundingRect = __webpack_require__(18);\n\nvar parseGeoJson = __webpack_require__(186);\n\nvar View = __webpack_require__(189);\n\nvar fixNanhai = __webpack_require__(380);\n\nvar fixTextCoord = __webpack_require__(381);\n\nvar fixGeoCoord = __webpack_require__(382);\n\nvar fixDiaoyuIsland = __webpack_require__(383);\n\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var viewTransform = this._viewTransform;\n    viewTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    viewTransform.decomposeTransform();\n    var scale = viewTransform.scale;\n    scale[1] = -scale[1];\n    viewTransform.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;\n\n/***/ }),\n/* 380 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Region = __webpack_require__(187);\n\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 381 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 382 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 383 */\n/***/ (function(module, exports) {\n\n// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 384 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar MapDraw = __webpack_require__(190);\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each('value', function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 385 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each('value', function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 386 */\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle.normal');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 387 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  var dims = ['value'];\n  zrUtil.each(datas, function (data) {\n    data.each(dims, function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(dims, function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 388 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 389 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\n__webpack_require__(390);\n\n__webpack_require__(391);\n\n__webpack_require__(392);\n\nvar visualSymbol = __webpack_require__(51);\n\nvar orthogonalLayout = __webpack_require__(393);\n\nvar radialLayout = __webpack_require__(395);\n\necharts.registerVisual(zrUtil.curry(visualSymbol, 'tree', 'circle', null));\necharts.registerLayout(orthogonalLayout);\necharts.registerLayout(radialLayout);\n\n/***/ }),\n/* 390 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(16);\n\nvar Tree = __webpack_require__(195);\n\nvar _format = __webpack_require__(10);\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex);\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // the orient of orthoginal layout, can be setted to 'horizontal' or 'vertical'\n    orient: 'horizontal',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      normal: {\n        color: '#ccc',\n        width: 1.5,\n        curveness: 0.5\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: 'lightsteelblue',\n        borderColor: '#c23531',\n        borderWidth: 1.5\n      }\n    },\n    label: {\n      normal: {\n        show: true,\n        color: '#555'\n      }\n    },\n    leaves: {\n      label: {\n        normal: {\n          show: true\n        }\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 391 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar SymbolClz = __webpack_require__(98);\n\nvar _layoutHelper = __webpack_require__(197);\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = __webpack_require__(1);\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.get('orient'),\n      curvature: seriesModel.get('lineStyle.normal.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      removeNode(data, oldIdx, symbolEl, group, seriesModel, seriesScope);\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label.normal');\n  seriesScope.hoverLabelModel = itemModel.getModel('label.emphasis');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'horizontal') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'vertical') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 392 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});\n\n/***/ }),\n/* 393 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar commonLayout = __webpack_require__(198);\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 394 */\n/***/ (function(module, exports) {\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;\n\n/***/ }),\n/* 395 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar commonLayout = __webpack_require__(198);\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 396 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n__webpack_require__(397);\n\n__webpack_require__(398);\n\n__webpack_require__(401);\n\nvar treemapVisual = __webpack_require__(402);\n\nvar treemapLayout = __webpack_require__(403);\n\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);\n\n/***/ }),\n/* 397 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar SeriesModel = __webpack_require__(16);\n\nvar Tree = __webpack_require__(195);\n\nvar Model = __webpack_require__(19);\n\nvar _format = __webpack_require__(10);\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _helper = __webpack_require__(78);\n\nvar wrapTreePathInfo = _helper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        normal: {\n          color: 'rgba(0,0,0,0.7)',\n          //'#5793f3',\n          borderColor: 'rgba(255,255,255,0.7)',\n          borderWidth: 1,\n          shadowColor: 'rgba(150,150,150,1)',\n          shadowBlur: 3,\n          shadowOffsetX: 0,\n          shadowOffsetY: 0,\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        emphasis: {\n          textStyle: {}\n        }\n      }\n    },\n    label: {\n      normal: {\n        show: true,\n        // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n        distance: 0,\n        padding: 5,\n        position: 'inside',\n        // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n        // formatter: null,\n        color: '#fff',\n        ellipsis: true // align\n        // verticalAlign\n\n      }\n    },\n    upperLabel: {\n      // Label when node is parent.\n      normal: {\n        show: false,\n        position: [0, '50%'],\n        height: 20,\n        // formatter: null,\n        color: '#fff',\n        ellipsis: true,\n        // align: null,\n        verticalAlign: 'middle'\n      },\n      emphasis: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: null,\n        // Can be 'none' if not necessary.\n        colorAlpha: null,\n        // Can be 'none' if not necessary.\n        colorSaturation: null,\n        // Can be 'none' if not necessary.\n        borderWidth: 0,\n        gapWidth: 0,\n        borderColor: '#fff',\n        borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n        // border color is evaluated by color of current node and\n        // borderColorSaturation.\n\n      },\n      emphasis: {}\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.normal.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 398 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar DataDiffer = __webpack_require__(74);\n\nvar helper = __webpack_require__(78);\n\nvar Breadcrumb = __webpack_require__(399);\n\nvar RoamController = __webpack_require__(103);\n\nvar BoundingRect = __webpack_require__(18);\n\nvar matrix = __webpack_require__(37);\n\nvar animationUtil = __webpack_require__(400);\n\nvar makeStyleMapper = __webpack_require__(96);\n\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label', 'normal'];\nvar PATH_LABEL_EMPHASIS = ['label', 'emphasis'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel', 'normal'];\nvar PATH_UPPERLABEL_EMPHASIS = ['upperLabel', 'emphasis'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var targetInfo = helper.retrieveTargetInfo(payload, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle.normal');\n  var itemStyleEmphasisModel = thisNode.getModel('itemStyle.emphasis'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 399 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(2);\n\nvar layout = __webpack_require__(9);\n\nvar zrUtil = __webpack_require__(0);\n\nvar _helper = __webpack_require__(78);\n\nvar wrapTreePathInfo = _helper.wrapTreePathInfo;\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle.normal'); // var emphasisStyleModel = model.getModel('itemStyle.emphasis');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;\n\n/***/ }),\n/* 400 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;\n\n/***/ }),\n/* 401 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar helper = __webpack_require__(78);\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\n\n/***/ }),\n/* 402 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar VisualMapping = __webpack_require__(54);\n\nvar zrColor = __webpack_require__(46);\n\nvar zrUtil = __webpack_require__(0);\n\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle.normal';\n\nfunction _default(ecModel, api, payload) {\n  var condition = {\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  };\n  ecModel.eachComponent(condition, function (seriesModel) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  });\n}\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 403 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar BoundingRect = __webpack_require__(18);\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = __webpack_require__(9);\n\nvar helper = __webpack_require__(78);\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'normal', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'normal', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'normal', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'normal', 'height'];\n/**\n * @public\n */\n\nfunction _default(ecModel, api, payload) {\n  // Layout result in each node:\n  // {x, y, width, height, area, borderWidth}\n  var condition = {\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  };\n  ecModel.eachComponent(condition, function (seriesModel) {\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var targetInfo = helper.retrieveTargetInfo(payload, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  });\n}\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 404 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\n__webpack_require__(405);\n\n__webpack_require__(407);\n\n__webpack_require__(410);\n\nvar categoryFilter = __webpack_require__(411);\n\nvar visualSymbol = __webpack_require__(51);\n\nvar categoryVisual = __webpack_require__(412);\n\nvar edgeVisual = __webpack_require__(413);\n\nvar simpleLayout = __webpack_require__(414);\n\nvar circularLayout = __webpack_require__(415);\n\nvar forceLayout = __webpack_require__(416);\n\nvar createView = __webpack_require__(418);\n\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(zrUtil.curry(visualSymbol, 'graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});\n\n/***/ }),\n/* 405 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar List = __webpack_require__(20);\n\nvar zrUtil = __webpack_require__(0);\n\nvar _model = __webpack_require__(8);\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = __webpack_require__(19);\n\nvar _format = __webpack_require__(10);\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = __webpack_require__(199);\n\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option.edgeLabel, ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      normal: {\n        position: 'middle'\n      },\n      emphasis: {}\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      normal: {\n        show: false,\n        formatter: '{b}'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {},\n      emphasis: {}\n    },\n    lineStyle: {\n      normal: {\n        color: '#aaa',\n        width: 1,\n        curveness: 0,\n        opacity: 0.5\n      },\n      emphasis: {}\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 406 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!(n1 instanceof Node)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!(n2 instanceof Node)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (n1 instanceof Node) {\n    n1 = n1.id;\n  }\n\n  if (n2 instanceof Node) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!(startNode instanceof Node)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nvar _default = Graph;\nmodule.exports = _default;\n\n/***/ }),\n/* 407 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar SymbolDraw = __webpack_require__(76);\n\nvar LineDraw = __webpack_require__(135);\n\nvar RoamController = __webpack_require__(103);\n\nvar roamHelper = __webpack_require__(192);\n\nvar _cursorHelper = __webpack_require__(134);\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = __webpack_require__(2);\n\nvar adjustEdge = __webpack_require__(409);\n\nvar nodeOpacityPath = ['itemStyle', 'normal', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 408 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(2);\n\nvar vec2 = __webpack_require__(11);\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 409 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curveTool = __webpack_require__(91);\n\nvar vec2 = __webpack_require__(11);\n\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 410 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar _roamHelper = __webpack_require__(194);\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});\n\n/***/ }),\n/* 411 */\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 412 */\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 413 */\n/***/ (function(module, exports) {\n\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.normal.color'.split('.');\n    var opacityQuery = 'lineStyle.normal.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 414 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _simpleLayoutHelper = __webpack_require__(200);\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = coordSys.dimensions;\n      data.each(dimensions, function () {\n        var hasValue;\n        var args = arguments;\n        var value = [];\n\n        for (var i = 0; i < dimensions.length; i++) {\n          if (!isNaN(args[i])) {\n            hasValue = true;\n          }\n\n          value.push(args[i]);\n        }\n\n        var idx = args[args.length - 1];\n\n        if (hasValue) {\n          data.setItemLayout(idx, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(idx, [NaN, NaN]);\n        }\n      });\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 415 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _circularLayoutHelper = __webpack_require__(201);\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 416 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _forceHelper = __webpack_require__(417);\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = __webpack_require__(200);\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = __webpack_require__(201);\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = __webpack_require__(5);\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = __webpack_require__(11);\n\nvar zrUtil = __webpack_require__(0);\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.normal.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 417 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(11);\n\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;\n\n/***/ }),\n/* 418 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar View = __webpack_require__(189);\n\nvar _layout = __webpack_require__(9);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = __webpack_require__(175);\n\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 419 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(420);\n\n__webpack_require__(421);\n\n/***/ }),\n/* 420 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar List = __webpack_require__(20);\n\nvar SeriesModel = __webpack_require__(16);\n\nvar zrUtil = __webpack_require__(0);\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var list = new List(['value'], this);\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    } // Only use the first data item\n\n\n    list.initData(dataOpt);\n    return list;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      normal: {\n        color: 'auto'\n      }\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 421 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PointerPath = __webpack_require__(422);\n\nvar graphic = __webpack_require__(2);\n\nvar ChartView = __webpack_require__(41);\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle.normal').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get('value', idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('itemStyle.emphasis').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: seriesModel.getData().getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;\n\n/***/ }),\n/* 422 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(29);\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 423 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\n__webpack_require__(424);\n\n__webpack_require__(425);\n\nvar dataColor = __webpack_require__(133);\n\nvar funnelLayout = __webpack_require__(426);\n\nvar dataFilter = __webpack_require__(101);\n\necharts.registerVisual(zrUtil.curry(dataColor, 'funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'funnel'));\n\n/***/ }),\n/* 424 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar List = __webpack_require__(20);\n\nvar _model = __webpack_require__(8);\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar completeDimensions = __webpack_require__(38);\n\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var sum = data.getSum('value'); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      normal: {\n        show: true,\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    labelLine: {\n      normal: {\n        show: true,\n        length: 20,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      },\n      emphasis: {}\n    },\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      emphasis: {// color: 各异,\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 425 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(2);\n\nvar zrUtil = __webpack_require__(0);\n\nvar ChartView = __webpack_require__(41);\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'normal', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;\n\n/***/ }),\n/* 426 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar layout = __webpack_require__(9);\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueArr = data.mapArray('value', function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent('value');\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get('value', idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + itemHeight);\n      y += itemHeight + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 427 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n__webpack_require__(202);\n\n__webpack_require__(436);\n\n__webpack_require__(437);\n\nvar parallelVisual = __webpack_require__(438);\n\necharts.registerVisual(parallelVisual);\n\n/***/ }),\n/* 428 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar modelUtil = __webpack_require__(8);\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 429 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar matrix = __webpack_require__(37);\n\nvar layoutUtil = __webpack_require__(9);\n\nvar axisHelper = __webpack_require__(36);\n\nvar ParallelAxis = __webpack_require__(430);\n\nvar graphic = __webpack_require__(2);\n\nvar numberUtil = __webpack_require__(5);\n\nvar sliderMove = __webpack_require__(79);\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, dim);\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1,\n        labelInterval: axes.get(dim).getLabelInterval()\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {Object} context\n   */\n  eachActiveState: function (data, callback, context) {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var values = data.getValues(dimensions, i);\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var dimName = dimensions[j];\n          var state = axesMap.get(dimName).model.getActiveState(values[j], j);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback.call(context, activeState, i);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;\n\n/***/ }),\n/* 430 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Axis = __webpack_require__(50);\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;\n\n/***/ }),\n/* 431 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Component = __webpack_require__(14);\n\n__webpack_require__(432);\n\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 432 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar ComponentModel = __webpack_require__(14);\n\nvar makeStyleMapper = __webpack_require__(96);\n\nvar axisModelCreator = __webpack_require__(99);\n\nvar numberUtil = __webpack_require__(5);\n\nvar axisModelCommonMixin = __webpack_require__(75);\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null) {\n      return 'inactive';\n    }\n\n    for (var i = 0, len = activeIntervals.length; i < len; i++) {\n      if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n        return 'active';\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 433 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(203);\n\n__webpack_require__(434);\n\n__webpack_require__(435);\n\n/***/ }),\n/* 434 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected',\n  update: 'updateVisual'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});\n\n/***/ }),\n/* 435 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar AxisBuilder = __webpack_require__(52);\n\nvar BrushController = __webpack_require__(137);\n\nvar brushHelper = __webpack_require__(204);\n\nvar graphic = __webpack_require__(2);\n\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n\n  /**\n   * @override\n   */\n  updateVisual: function (axisModel, ecModel, api, payload) {\n    this._brushController && this._brushController.updateCovers(getCoverInfoList(axisModel));\n  },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n/* 436 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar List = __webpack_require__(20);\n\nvar zrUtil = __webpack_require__(0);\n\nvar SeriesModel = __webpack_require__(16);\n\nvar completeDimensions = __webpack_require__(38);\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.normal.color',\n  getInitialData: function (option, ecModel) {\n    var parallelModel = ecModel.getComponent('parallel', this.get('parallelIndex'));\n    var parallelAxisIndices = parallelModel.parallelAxisIndex;\n    var rawData = option.data;\n    var modelDims = parallelModel.dimensions;\n    var dataDims = generateDataDims(modelDims, rawData);\n    var dataDimsInfo = zrUtil.map(dataDims, function (dim, dimIndex) {\n      var modelDimsIndex = zrUtil.indexOf(modelDims, dim);\n      var axisModel = modelDimsIndex >= 0 && ecModel.getComponent('parallelAxis', parallelAxisIndices[modelDimsIndex]);\n\n      if (axisModel && axisModel.get('type') === 'category') {\n        translateCategoryValue(axisModel, dim, rawData);\n        return {\n          name: dim,\n          type: 'ordinal'\n        };\n      } else if (modelDimsIndex < 0) {\n        return completeDimensions.guessOrdinal(rawData, dimIndex) ? {\n          name: dim,\n          type: 'ordinal'\n        } : dim;\n      } else {\n        return dim;\n      }\n    });\n    var list = new List(dataDimsInfo, this);\n    list.initData(rawData); // Anication is forbiden in progressive data mode.\n\n    if (this.option.progressive) {\n      this.option.animation = false;\n    }\n\n    return list;\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      normal: {\n        show: false\n      },\n      emphasis: {\n        show: false\n      }\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      normal: {\n        width: 1,\n        opacity: 0.45,\n        type: 'solid'\n      }\n    },\n    progressive: false,\n    // 100\n    smooth: false,\n    animationEasing: 'linear'\n  }\n});\n\nfunction translateCategoryValue(axisModel, dim, rawData) {\n  var axisData = axisModel.get('data');\n  var numberDim = convertDimNameToNumber(dim);\n\n  if (axisData && axisData.length) {\n    zrUtil.each(rawData, function (dataItem) {\n      if (!dataItem) {\n        return;\n      } // FIXME\n      // time consuming, should use hash?\n\n\n      var index = zrUtil.indexOf(axisData, dataItem[numberDim]);\n      dataItem[numberDim] = index >= 0 ? index : NaN;\n    });\n  } // FIXME\n  // 如果没有设置axis data, 应自动算出，或者提示。\n\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nfunction generateDataDims(modelDims, rawData) {\n  // parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  // We detect max dim by parallelModel.dimensions and fist\n  // item in rawData arbitrarily.\n  var maxDimNum = 0;\n  zrUtil.each(modelDims, function (dimName) {\n    var numberDim = convertDimNameToNumber(dimName);\n    numberDim > maxDimNum && (maxDimNum = numberDim);\n  });\n  var firstItem = rawData[0];\n\n  if (firstItem && firstItem.length - 1 > maxDimNum) {\n    maxDimNum = firstItem.length - 1;\n  }\n\n  var dataDims = [];\n\n  for (var i = 0; i <= maxDimNum; i++) {\n    dataDims.push('dim' + i);\n  }\n\n  return dataDims;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 437 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(2);\n\nvar zrUtil = __webpack_require__(0);\n\nvar ChartView = __webpack_require__(41);\n\nvar SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    this._renderForNormal(seriesModel, payload); // this[\n    //     seriesModel.option.progressive\n    //         ? '_renderForProgressive'\n    //         : '_renderForNormal'\n    // ](seriesModel);\n\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _renderForNormal: function (seriesModel, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var option = seriesModel.option;\n    var smooth = option.smooth ? SMOOTH : null; // Consider switch between progressive and not.\n    // oldData && oldData.__plProgressive && dataGroup.removeAll();\n\n    data.diff(oldData).add(add).update(update).remove(remove).execute(); // Update style\n\n    updateElCommon(data, smooth); // First create\n\n    if (!this._data) {\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n\n    function add(newDataIndex) {\n      addEl(data, dataGroup, newDataIndex, dimensions, coordSys, null, smooth);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(dimName, dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n}\n\nfunction updateElCommon(data, smooth) {\n  var seriesStyleModel = data.hostModel.getModel('lineStyle.normal');\n  var lineStyle = seriesStyleModel.getLineStyle();\n  data.eachItemGraphicEl(function (line, dataIndex) {\n    if (data.hasItemOption) {\n      var itemModel = data.getItemModel(dataIndex);\n      var lineStyleModel = itemModel.getModel('lineStyle.normal', seriesStyleModel);\n      lineStyle = lineStyleModel.getLineStyle(['color', 'stroke']);\n    }\n\n    line.useStyle(zrUtil.extend(lineStyle, {\n      fill: null,\n      // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n      stroke: data.getItemVisual(dataIndex, 'color'),\n      // lineStyle.opacity have been set to itemVisual in parallelVisual.\n      opacity: data.getItemVisual(dataIndex, 'opacity')\n    }));\n    line.shape.smooth = smooth;\n  });\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;\n\n/***/ }),\n/* 438 */\n/***/ (function(module, exports) {\n\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('parallel', function (seriesModel) {\n    var itemStyleModel = seriesModel.getModel('itemStyle.normal');\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle.normal').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    coordSys.eachActiveState(data, function (activeState, dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var opacity = opacityMap[activeState];\n\n      if (activeState === 'normal') {\n        var itemOpacity = itemModel.get(opacityAccessPath, true);\n        itemOpacity != null && (opacity = itemOpacity);\n      }\n\n      data.setItemVisual(dataIndex, 'opacity', opacity);\n    });\n    data.setVisual('color', color);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 439 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n__webpack_require__(440);\n\n__webpack_require__(441);\n\nvar sankeyLayout = __webpack_require__(442);\n\nvar sankeyVisual = __webpack_require__(443);\n\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);\n\n/***/ }),\n/* 440 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(16);\n\nvar createGraphFromNodeEdge = __webpack_require__(199);\n\nvar _format = __webpack_require__(10);\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      normal: {\n        show: true,\n        position: 'right',\n        color: '#000',\n        fontSize: 12\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1,\n        borderColor: '#333'\n      }\n    },\n    lineStyle: {\n      normal: {\n        color: '#314656',\n        opacity: 0.2,\n        curveness: 0.5\n      },\n      emphasis: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 441 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(2);\n\nvar echarts = __webpack_require__(1);\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle.normal');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var n2Layout = edge.node2.getLayout();\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = n1Layout.x + n1Layout.dx;\n      var y1 = n1Layout.y + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = n2Layout.x;\n      var y2 = n2Layout.y + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('lineStyle.emphasis').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect  for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      var rect = new graphic.Rect({\n        shape: {\n          x: layout.x,\n          y: layout.y,\n          width: node.getLayout().dx,\n          height: node.getLayout().dy\n        },\n        style: itemModel.getModel('itemStyle.normal').getItemStyle()\n      });\n      var hoverStyle = node.getModel('itemStyle.emphasis').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 442 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar layout = __webpack_require__(9);\n\nvar nest = __webpack_require__(205);\n\nvar zrUtil = __webpack_require__(0);\n\n/**\n * @file The layout algorithm of sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, nodeWidth, width) {\n  var remainNodes = nodes;\n  var nextNode = null;\n  var x = 0;\n  var kx = 0;\n\n  while (remainNodes.length) {\n    nextNode = [];\n\n    for (var i = 0, len = remainNodes.length; i < len; i++) {\n      var node = remainNodes[i];\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n\n      for (var j = 0, lenj = node.outEdges.length; j < lenj; j++) {\n        nextNode.push(node.outEdges[j].node2);\n      }\n    }\n\n    remainNodes = nextNode;\n    ++x;\n  }\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // if the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a === b ? 0 : NaN;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 443 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar VisualMapping = __webpack_require__(54);\n\nvar zrUtil = __webpack_require__(0);\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    nodes.sort(function (a, b) {\n      return a.getLayout().value - b.getLayout().value;\n    });\n    var minValue = nodes[0].getLayout().value;\n    var maxValue = nodes[nodes.length - 1].getLayout().value;\n    zrUtil.each(nodes, function (node) {\n      var mapping = new VisualMapping({\n        type: 'color',\n        mappingMethod: 'linear',\n        dataExtent: [minValue, maxValue],\n        visual: seriesModel.get('color')\n      });\n      var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n      node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n      var itemModel = node.getModel();\n      var customColor = itemModel.get('itemStyle.normal.color');\n\n      if (customColor != null) {\n        node.setVisual('color', customColor);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 444 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n__webpack_require__(445);\n\n__webpack_require__(447);\n\nvar boxplotVisual = __webpack_require__(448);\n\nvar boxplotLayout = __webpack_require__(449);\n\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);\n\n/***/ }),\n/* 445 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar SeriesModel = __webpack_require__(16);\n\nvar _whiskerBoxCommon = __webpack_require__(104);\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: ['min', 'Q1', 'median', 'Q3', 'max'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      normal: {\n        color: '#fff',\n        borderWidth: 1\n      },\n      emphasis: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 446 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar Path = __webpack_require__(29);\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nvar WhiskerPath = Path.extend({\n  type: 'whiskerInBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    for (var i in shape) {\n      if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\n        var pts = shape[i];\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        ctx.lineTo(pts[1][0], pts[1][1]);\n      }\n    }\n  }\n});\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/WhiskerBox}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Function} styleUpdater\n * @param {boolean} isInit\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction WhiskerBox(data, idx, styleUpdater, isInit) {\n  graphic.Group.call(this);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.bodyIndex;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.whiskerIndex;\n  /**\n   * @type {Function}\n   */\n\n  this.styleUpdater = styleUpdater;\n\n  this._createContent(data, idx, isInit);\n\n  this.updateData(data, idx, isInit);\n  /**\n   * Last series model.\n   * @type {module:echarts/model/Series}\n   */\n\n  this._seriesModel;\n}\n\nvar whiskerBoxProto = WhiskerBox.prototype;\n\nwhiskerBoxProto._createContent = function (data, idx, isInit) {\n  var itemLayout = data.getItemLayout(idx);\n  var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\n  var count = 0; // Whisker element.\n\n  this.add(new graphic.Polygon({\n    shape: {\n      points: isInit ? transInit(itemLayout.bodyEnds, constDim, itemLayout) : itemLayout.bodyEnds\n    },\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.bodyIndex = count++; // Box element.\n\n  var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\n    return isInit ? transInit(ends, constDim, itemLayout) : ends;\n  });\n  this.add(new WhiskerPath({\n    shape: makeWhiskerEndsShape(whiskerEnds),\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.whiskerIndex = count++;\n};\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nfunction makeWhiskerEndsShape(whiskerEnds) {\n  // zr animation only support 2-dim array.\n  var shape = {};\n  zrUtil.each(whiskerEnds, function (ends, i) {\n    shape['ends' + i] = ends;\n  });\n  return shape;\n}\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\nwhiskerBoxProto.updateData = function (data, idx, isInit) {\n  var seriesModel = this._seriesModel = data.hostModel;\n  var itemLayout = data.getItemLayout(idx);\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps']; // this.childAt(this.bodyIndex).stopAnimation(true);\n  // this.childAt(this.whiskerIndex).stopAnimation(true);\n\n  updateMethod(this.childAt(this.bodyIndex), {\n    shape: {\n      points: itemLayout.bodyEnds\n    }\n  }, seriesModel, idx);\n  updateMethod(this.childAt(this.whiskerIndex), {\n    shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)\n  }, seriesModel, idx);\n  this.styleUpdater.call(null, this, data, idx);\n};\n\nzrUtil.inherits(WhiskerBox, graphic.Group);\n/**\n * @constructor\n * @alias module:echarts/chart/helper/WhiskerBoxDraw\n */\n\nfunction WhiskerBoxDraw(styleUpdater) {\n  this.group = new graphic.Group();\n  this.styleUpdater = styleUpdater;\n}\n\nvar whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nwhiskerBoxDrawProto.updateData = function (data) {\n  var group = this.group;\n  var oldData = this._data;\n  var styleUpdater = this.styleUpdater;\n  data.diff(oldData).add(function (newIdx) {\n    if (data.hasValue(newIdx)) {\n      var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n    if (!data.hasValue(newIdx)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\n    } else {\n      symbolEl.updateData(data, newIdx);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && group.remove(el);\n  }).execute();\n  this._data = data;\n};\n/**\n * Remove symbols.\n * @param {module:echarts/data/List} data\n */\n\n\nwhiskerBoxDrawProto.remove = function () {\n  var group = this.group;\n  var data = this._data;\n  this._data = null;\n  data && data.eachItemGraphicEl(function (el) {\n    el && group.remove(el);\n  });\n};\n\nvar _default = WhiskerBoxDraw;\nmodule.exports = _default;\n\n/***/ }),\n/* 447 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar ChartView = __webpack_require__(41);\n\nvar graphic = __webpack_require__(2);\n\nvar _whiskerBoxCommon = __webpack_require__(104);\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(BoxplotView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var borderColor = data.getItemVisual(idx, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.style.set(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  whiskerEl.dirty();\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.style.set(itemStyle);\n  bodyEl.style.stroke = borderColor;\n  bodyEl.dirty();\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;\n\n/***/ }),\n/* 448 */\n/***/ (function(module, exports) {\n\nvar borderColorQuery = ['itemStyle', 'normal', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 449 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var chartLayout = seriesModel.get('layout');\n  var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n  var constDim = 1 - variableDim;\n  var coordDims = ['x', 'y'];\n  var vDims = [];\n  var cDim;\n  zrUtil.each(data.dimensions, function (dimName) {\n    var dimInfo = data.getDimensionInfo(dimName);\n    var coordDim = dimInfo.coordDim;\n\n    if (coordDim === coordDims[constDim]) {\n      vDims.push(dimName);\n    } else if (coordDim === coordDims[variableDim]) {\n      cDim = dimName;\n    }\n  });\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  data.each([cDim].concat(vDims), function () {\n    var args = arguments;\n    var axisDimVal = args[0];\n    var idx = args[vDims.length + 1];\n    var median = getPoint(args[3]);\n    var end1 = getPoint(args[1]);\n    var end5 = getPoint(args[5]);\n    var whiskerEnds = [[end1, getPoint(args[2])], [end5, getPoint(args[4])]];\n    layEndLine(end1);\n    layEndLine(end5);\n    layEndLine(median);\n    var bodyEnds = [];\n    addBodyEnd(whiskerEnds[0][1], 0);\n    addBodyEnd(whiskerEnds[1][1], 1);\n    data.setItemLayout(idx, {\n      chartLayout: chartLayout,\n      initBaseline: median[constDim],\n      median: median,\n      bodyEnds: bodyEnds,\n      whiskerEnds: whiskerEnds\n    });\n\n    function getPoint(val) {\n      var p = [];\n      p[variableDim] = axisDimVal;\n      p[constDim] = val;\n      var point;\n\n      if (isNaN(axisDimVal) || isNaN(val)) {\n        point = [NaN, NaN];\n      } else {\n        point = coordSys.dataToPoint(p);\n        point[variableDim] += offset;\n      }\n\n      return point;\n    }\n\n    function addBodyEnd(point, start) {\n      var point1 = point.slice();\n      var point2 = point.slice();\n      point1[variableDim] += halfWidth;\n      point2[variableDim] -= halfWidth;\n      start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n    }\n\n    function layEndLine(endCenter) {\n      var line = [endCenter.slice(), endCenter.slice()];\n      line[0][variableDim] -= halfWidth;\n      line[1][variableDim] += halfWidth;\n      whiskerEnds.push(line);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 450 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n__webpack_require__(451);\n\n__webpack_require__(452);\n\nvar preprocessor = __webpack_require__(453);\n\nvar candlestickVisual = __webpack_require__(454);\n\nvar candlestickLayout = __webpack_require__(455);\n\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);\n\n/***/ }),\n/* 451 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar SeriesModel = __webpack_require__(16);\n\nvar _whiskerBoxCommon = __webpack_require__(104);\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      normal: {\n        color: '#c23531',\n        // 阳线 positive\n        color0: '#314656',\n        // 阴线 negative     '#c23531', '#314656'\n        borderWidth: 1,\n        // FIXME\n        // ec2中使用的是lineStyle.color 和 lineStyle.color0\n        borderColor: '#c23531',\n        borderColor0: '#314656'\n      },\n      emphasis: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 452 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar ChartView = __webpack_require__(41);\n\nvar graphic = __webpack_require__(2);\n\nvar _whiskerBoxCommon = __webpack_require__(104);\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(CandlestickView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var color = data.getItemVisual(idx, 'color');\n  var borderColor = data.getItemVisual(idx, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['color', 'color0', 'borderColor', 'borderColor0']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.useStyle(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.useStyle(itemStyle);\n  bodyEl.style.fill = color;\n  bodyEl.style.stroke = borderColor;\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;\n\n/***/ }),\n/* 453 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 454 */\n/***/ (function(module, exports) {\n\nvar positiveBorderColorQuery = ['itemStyle', 'normal', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'normal', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'normal', 'color'];\nvar negativeColorQuery = ['itemStyle', 'normal', 'color0'];\n\nfunction _default(ecModel, api) {\n  ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect'\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var sign = data.getItemLayout(idx).sign;\n        data.setItemVisual(idx, {\n          color: itemModel.get(sign > 0 ? positiveColorQuery : negativeColorQuery),\n          borderColor: itemModel.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 455 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\n\nvar _graphic = __webpack_require__(2);\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\nvar retrieve2 = zrUtil.retrieve2;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var chartLayout = seriesModel.get('layout');\n    var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n    var constDim = 1 - variableDim;\n    var coordDims = ['x', 'y'];\n    var vDims = [];\n    var cDim;\n    zrUtil.each(data.dimensions, function (dimName) {\n      var dimInfo = data.getDimensionInfo(dimName);\n      var coordDim = dimInfo.coordDim;\n\n      if (coordDim === coordDims[constDim]) {\n        vDims.push(dimName);\n      } else if (coordDim === coordDims[variableDim]) {\n        cDim = dimName;\n      }\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    var dataIndex = 0;\n    data.each([cDim].concat(vDims), function () {\n      var args = arguments;\n      var axisDimVal = args[0];\n      var idx = args[vDims.length + 1];\n      var openVal = args[1];\n      var closeVal = args[2];\n      var lowestVal = args[3];\n      var highestVal = args[4];\n      var ocLow = Math.min(openVal, closeVal);\n      var ocHigh = Math.max(openVal, closeVal);\n      var ocLowPoint = getPoint(ocLow);\n      var ocHighPoint = getPoint(ocHigh);\n      var lowestPoint = getPoint(lowestVal);\n      var highestPoint = getPoint(highestVal);\n      var whiskerEnds = [[subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint)], [subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint)]];\n      var bodyEnds = [];\n      addBodyEnd(ocHighPoint, 0);\n      addBodyEnd(ocLowPoint, 1);\n      var sign;\n\n      if (openVal > closeVal) {\n        sign = -1;\n      } else if (openVal < closeVal) {\n        sign = 1;\n      } else {\n        // If close === open, compare with close of last record\n        if (dataIndex > 0) {\n          sign = data.getItemModel(dataIndex - 1).get()[2] <= closeVal ? 1 : -1;\n        } else {\n          // No record of previous, set to be positive\n          sign = 1;\n        }\n      }\n\n      data.setItemLayout(idx, {\n        chartLayout: chartLayout,\n        sign: sign,\n        initBaseline: openVal > closeVal ? ocHighPoint[constDim] : ocLowPoint[constDim],\n        // open point.\n        bodyEnds: bodyEnds,\n        whiskerEnds: whiskerEnds,\n        brushRect: makeBrushRect()\n      });\n      ++dataIndex;\n\n      function getPoint(val) {\n        var p = [];\n        p[variableDim] = axisDimVal;\n        p[constDim] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[variableDim] = subPixelOptimize(point1[variableDim] + candleWidth / 2, 1, false);\n        point2[variableDim] = subPixelOptimize(point2[variableDim] - candleWidth / 2, 1, true);\n        start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n      }\n\n      function makeBrushRect() {\n        var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n        var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n        pmin[variableDim] -= candleWidth / 2;\n        pmax[variableDim] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: constDim ? candleWidth : pmax[0] - pmin[0],\n          height: constDim ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[variableDim] = subPixelOptimize(point[variableDim], 1);\n        return point;\n      }\n    }, true);\n  });\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 456 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\n__webpack_require__(457);\n\n__webpack_require__(458);\n\nvar visualSymbol = __webpack_require__(51);\n\nvar layoutPoints = __webpack_require__(129);\n\necharts.registerVisual(zrUtil.curry(visualSymbol, 'effectScatter', 'circle', null));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'effectScatter'));\n\n/***/ }),\n/* 457 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createListFromArray = __webpack_require__(49);\n\nvar SeriesModel = __webpack_require__(16);\n\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    var list = createListFromArray(option.data, this, ecModel);\n    return list;\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     normal: {\n    //         opacity: 1\n    //     }\n    // }\n\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 458 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar SymbolDraw = __webpack_require__(76);\n\nvar EffectSymbol = __webpack_require__(459);\n\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateLayout: function () {\n    this._symbolDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 459 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar _symbol = __webpack_require__(30);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = __webpack_require__(2);\n\nvar Group = _graphic.Group;\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = __webpack_require__(98);\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;\n\n/***/ }),\n/* 460 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n__webpack_require__(461);\n\n__webpack_require__(462);\n\nvar linesLayout = __webpack_require__(465);\n\nvar linesVisual = __webpack_require__(466);\n\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);\n\n/***/ }),\n/* 461 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(16);\n\nvar List = __webpack_require__(20);\n\nvar zrUtil = __webpack_require__(0);\n\nvar _format = __webpack_require__(10);\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = __webpack_require__(39);\n\n// Convert [ [{coord: []}, {coord: []}] ]\n// to [ { coords: [[]] } ]\nfunction preprocessOption(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = zrUtil.map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return zrUtil.mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.normal.color',\n  init: function (option) {\n    // Not using preprocessor because mergeOption may not have series.type\n    preprocessOption(option);\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    preprocessOption(option);\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.normal.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      normal: {\n        show: false,\n        position: 'end' // distance: 5,\n        // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n      }\n    },\n    lineStyle: {\n      normal: {\n        opacity: 0.5\n      }\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 462 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar LineDraw = __webpack_require__(135);\n\nvar EffectLine = __webpack_require__(206);\n\nvar Line = __webpack_require__(136);\n\nvar Polyline = __webpack_require__(207);\n\nvar EffectPolyline = __webpack_require__(463);\n\nvar LargeLineDraw = __webpack_require__(464);\n\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var lineDraw = this._lineDraw;\n    var hasEffect = seriesModel.get('effect.show');\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.get('large') && data.count() >= seriesModel.get('largeThreshold');\n\n    if (hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLarge !== this._isLarge) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLarge ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLarge = isLarge;\n    }\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (hasEffect && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    this.group.add(lineDraw.group);\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n  },\n  updateLayout: function (seriesModel, ecModel, api) {\n    this._lineDraw.updateLayout(seriesModel); // Not use motion when dragging or zooming\n\n\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove(api, true); // Clear motion when lineDraw is removed\n\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 463 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Polyline = __webpack_require__(207);\n\nvar zrUtil = __webpack_require__(0);\n\nvar EffectLine = __webpack_require__(206);\n\nvar vec2 = __webpack_require__(11);\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;\n\n/***/ }),\n/* 464 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(2);\n\nvar lineContain = __webpack_require__(330);\n\nvar quadraticContain = __webpack_require__(331);\n\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var isPolyline = shape.polyline;\n\n    for (var i = 0; i < segs.length; i++) {\n      var seg = segs[i];\n\n      if (isPolyline) {\n        path.moveTo(seg[0][0], seg[0][1]);\n\n        for (var j = 1; j < seg.length; j++) {\n          path.lineTo(seg[j][0], seg[j][1]);\n        }\n      } else {\n        path.moveTo(seg[0][0], seg[0][1]);\n\n        if (seg.length > 2) {\n          path.quadraticCurveTo(seg[2][0], seg[2][1], seg[1][0], seg[1][1]);\n        } else {\n          path.lineTo(seg[1][0], seg[1][1]);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var isPolyline = shape.polyline;\n    var lineWidth = Math.max(this.style.lineWidth, 1); // Not consider transform\n\n    for (var i = 0; i < segs.length; i++) {\n      var seg = segs[i];\n\n      if (isPolyline) {\n        for (var j = 1; j < seg.length; j++) {\n          if (lineContain.containStroke(seg[j - 1][0], seg[j - 1][1], seg[j][0], seg[j][1], lineWidth, x, y)) {\n            return i;\n          }\n        }\n      } else {\n        if (seg.length > 2) {\n          if (quadraticContain.containStroke(seg[0][0], seg[0][1], seg[2][0], seg[2][1], seg[1][0], seg[1][1], lineWidth, x, y)) {\n            return i;\n          }\n        } else {\n          if (lineContain.containStroke(seg[0][0], seg[0][1], seg[1][0], seg[1][1], lineWidth, x, y)) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n  this._lineEl = new LargeLineShape();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = this._lineEl;\n  var seriesModel = data.hostModel;\n  lineEl.setShape({\n    segs: data.mapArray(data.getItemLayout),\n    polyline: seriesModel.get('polyline')\n  });\n  lineEl.useStyle(seriesModel.getModel('lineStyle.normal').getLineStyle());\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill'); // Enable tooltip\n  // PENDING May have performance issue when path is extremely large\n\n  lineEl.seriesIndex = seriesModel.seriesIndex;\n  lineEl.on('mousemove', function (e) {\n    lineEl.dataIndex = null;\n    var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n    if (dataIndex > 0) {\n      // Provide dataIndex for tooltip\n      lineEl.dataIndex = dataIndex;\n    }\n  }); // Add back\n\n  this.group.add(lineEl);\n};\n\nlargeLineProto.updateLayout = function (seriesModel) {\n  var data = seriesModel.getData();\n\n  this._lineEl.setShape({\n    segs: data.mapArray(data.getItemLayout)\n  });\n};\n\nlargeLineProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;\n\n/***/ }),\n/* 465 */\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('lines', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var lineData = seriesModel.getData(); // FIXME Use data dimensions ?\n\n    lineData.each(function (idx) {\n      var itemModel = lineData.getItemModel(idx);\n      var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.get('coords');\n      var pts = [];\n\n      if (seriesModel.get('polyline')) {\n        for (var i = 0; i < coords.length; i++) {\n          pts.push(coordSys.dataToPoint(coords[i]));\n        }\n      } else {\n        pts[0] = coordSys.dataToPoint(coords[0]);\n        pts[1] = coordSys.dataToPoint(coords[1]);\n        var curveness = itemModel.get('lineStyle.normal.curveness');\n\n        if (+curveness) {\n          pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n        }\n      }\n\n      lineData.setItemLayout(idx, pts);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 466 */\n/***/ (function(module, exports) {\n\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('lines', function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var opacityQuery = 'lineStyle.normal.opacity'.split('.');\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n    data.each(function (idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 467 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(468);\n\n__webpack_require__(469);\n\n/***/ }),\n/* 468 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(16);\n\nvar createListFromArray = __webpack_require__(49);\n\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 469 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar graphic = __webpack_require__(2);\n\nvar HeatmapLayer = __webpack_require__(470);\n\nvar zrUtil = __webpack_require__(0);\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(coordSys, seriesModel, api);\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  dispose: function () {},\n  _renderOnCartesianAndCalendar: function (coordSys, seriesModel, api) {\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var width = xAxis.getBandWidth();\n      var height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle.normal';\n    var hoverItemStyleQuery = 'itemStyle.emphasis';\n    var labelQuery = 'label.normal';\n    var hoverLabelQuery = 'label.emphasis';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel('label.normal');\n    var hoverLabelModel = seriesModel.getModel('label.emphasis');\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0], seriesModel.coordDimToDataDim('value')[0]] : [seriesModel.coordDimToDataDim('time')[0], seriesModel.coordDimToDataDim('value')[0]];\n    data.each(function (idx) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          return;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          return;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    });\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform().transform;\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var points = data.mapArray(['lng', 'lat', 'value'], function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 470 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;\n\n/***/ }),\n/* 471 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\n__webpack_require__(130);\n\n__webpack_require__(472);\n\n__webpack_require__(473);\n\nvar barLayoutGrid = __webpack_require__(131);\n\nvar visualSymbol = __webpack_require__(51);\n\n__webpack_require__(77);\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'pictorialBar'));\necharts.registerVisual(zrUtil.curry(visualSymbol, 'pictorialBar', 'roundRect', null));\n\n/***/ }),\n/* 472 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BaseBarSeries = __webpack_require__(183);\n\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 473 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar _symbol = __webpack_require__(30);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = __webpack_require__(184);\n\nvar setLabel = _helper.setLabel;\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;\n\n/***/ }),\n/* 474 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\n__webpack_require__(208);\n\n__webpack_require__(484);\n\n__webpack_require__(485);\n\nvar themeRiverLayout = __webpack_require__(486);\n\nvar themeRiverVisual = __webpack_require__(487);\n\nvar dataFilter = __webpack_require__(101);\n\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'themeRiver'));\n\n/***/ }),\n/* 475 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Single = __webpack_require__(476);\n\nvar CoordinateSystem = __webpack_require__(39);\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});\n\n/***/ }),\n/* 476 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SingleAxis = __webpack_require__(477);\n\nvar axisHelper = __webpack_require__(36);\n\nvar _layout = __webpack_require__(9);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        var dim = this.dimension;\n\n        this._axis.scale.unionExtentFromData(data, seriesModel.coordDimToDataDim(dim));\n\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;\n\n/***/ }),\n/* 477 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Axis = __webpack_require__(50);\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n  /**\n   * @type {number}\n   */\n\n  this._labelInterval = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;\n\n/***/ }),\n/* 478 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar AxisBuilder = __webpack_require__(52);\n\nvar graphic = __webpack_require__(2);\n\nvar singleAxisHelper = __webpack_require__(209);\n\nvar AxisView = __webpack_require__(53);\n\nvar getInterval = AxisBuilder.getInterval;\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel, layout.labelInterval);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var p1 = [];\n    var p2 = [];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;\n\n/***/ }),\n/* 479 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar ComponentModel = __webpack_require__(14);\n\nvar axisModelCreator = __webpack_require__(99);\n\nvar axisModelCommonMixin = __webpack_require__(75);\n\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 480 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar modelUtil = __webpack_require__(8);\n\nvar modelHelper = __webpack_require__(100);\n\nvar findPointFromSeries = __webpack_require__(210);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 481 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 482 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar globalListener = __webpack_require__(211);\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n/* 483 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(2);\n\nvar BaseAxisPointer = __webpack_require__(138);\n\nvar viewHelper = __webpack_require__(105);\n\nvar singleAxisHelper = __webpack_require__(209);\n\nvar AxisView = __webpack_require__(53);\n\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n/* 484 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar completeDimensions = __webpack_require__(38);\n\nvar SeriesModel = __webpack_require__(16);\n\nvar List = __webpack_require__(20);\n\nvar zrUtil = __webpack_require__(0);\n\nvar _format = __webpack_require__(10);\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = __webpack_require__(205);\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var dimensions = [];\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type');\n    dimensions = [{\n      name: 'time',\n      // FIXME common?\n      type: axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float'\n    }, {\n      name: 'value',\n      type: 'float'\n    }, {\n      name: 'name',\n      type: 'ordinal'\n    }]; // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    });\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    dimensions = completeDimensions(dimensions, data);\n    var list = new List(dimensions, this);\n    list.initData(data, nameList);\n    return list;\n  },\n\n  /**\n   * Used by single coordinate\n   *\n   * @param {string} axisDim  the dimension for single coordinate\n   * @return {Array.<string> } specified dimensions on the axis.\n   */\n  coordDimToDataDim: function (axisDim) {\n    return ['time'];\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get('time', index1) - data.get('time', index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.get('name', dataIndex);\n    var htmlValue = data.get('value', dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      normal: {\n        margin: 4,\n        textAlign: 'right',\n        show: true,\n        position: 'left',\n        color: '#000',\n        fontSize: 11\n      },\n      emphasis: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 485 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar _poly = __webpack_require__(179);\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = __webpack_require__(2);\n\nvar _util = __webpack_require__(0);\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = __webpack_require__(74);\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label.normal');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('itemStyle.emphasis');\n      var itemStyleModel = itemModel.getModel('itemStyle.normal');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 486 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar numberUtil = __webpack_require__(5);\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get('time', idx));\n      pt[1] = data.get('value', idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 487 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(0);\n\nvar createHashMap = _util.createHashMap;\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 488 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphicUtil = __webpack_require__(2);\n\nvar _labelHelper = __webpack_require__(178);\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\nvar createListFromArray = __webpack_require__(49);\n\nvar barGrid = __webpack_require__(131);\n\nvar DataDiffer = __webpack_require__(74);\n\nvar prepareCartesian2d = __webpack_require__(489);\n\nvar prepareGeo = __webpack_require__(490);\n\nvar prepareSingleAxis = __webpack_require__(491);\n\nvar preparePolar = __webpack_require__(492);\n\nvar prepareCalendar = __webpack_require__(493);\n\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle', 'normal'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['itemStyle', 'emphasis'];\nvar LABEL_NORMAL = ['label', 'normal'];\nvar LABEL_EMPHASIS = ['label', 'emphasis']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    data.diff(oldData).add(function (newIdx) {\n      data.hasValue(newIdx) && createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      data.hasValue(newIdx) ? createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data) : el && group.remove(el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currLabelValueDim;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currLabelValueDim = findLabelValueDim(data);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n\n    if (currLabelValueDim != null) {\n      graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n        autoColor: currVisualColor,\n        isRectText: true\n      });\n      itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), data.get(currLabelValueDim, dataIndexInside)) : null;\n    }\n\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n\n    if (currLabelValueDim != null) {\n      graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n        isRectText: true\n      }, true);\n      itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), data.get(currLabelValueDim, dataIndexInside)) : null;\n    }\n\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return barGrid.getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}\n\n/***/ }),\n/* 489 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 490 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 491 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 492 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 493 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 494 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar modelUtil = __webpack_require__(8);\n\nvar graphicUtil = __webpack_require__(2);\n\nvar layoutUtil = __webpack_require__(9);\n\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}\n\n/***/ }),\n/* 495 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(77);\n\n__webpack_require__(212);\n\n__webpack_require__(80);\n\n/***/ }),\n/* 496 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(497);\n\n__webpack_require__(500);\n\n__webpack_require__(501);\n\n__webpack_require__(502);\n\n/***/ }),\n/* 497 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n__webpack_require__(213);\n\n__webpack_require__(498);\n\n__webpack_require__(214);\n\nvar legendFilter = __webpack_require__(499);\n\nvar Component = __webpack_require__(14);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n/* 498 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n/* 499 */\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 500 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(213);\n\nvar _layout = __webpack_require__(9);\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 501 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar layoutUtil = __webpack_require__(9);\n\nvar LegendView = __webpack_require__(214);\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n/* 502 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ }),\n/* 503 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n__webpack_require__(80);\n\n__webpack_require__(504);\n\n__webpack_require__(505);\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n/* 504 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 505 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar env = __webpack_require__(27);\n\nvar TooltipContent = __webpack_require__(506);\n\nvar formatUtil = __webpack_require__(10);\n\nvar numberUtil = __webpack_require__(5);\n\nvar graphic = __webpack_require__(2);\n\nvar findPointFromSeries = __webpack_require__(210);\n\nvar layoutUtil = __webpack_require__(9);\n\nvar Model = __webpack_require__(19);\n\nvar globalListener = __webpack_require__(211);\n\nvar axisHelper = __webpack_require__(36);\n\nvar axisPointerViewHelper = __webpack_require__(105);\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 506 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar zrColor = __webpack_require__(46);\n\nvar eventUtil = __webpack_require__(48);\n\nvar env = __webpack_require__(27);\n\nvar formatUtil = __webpack_require__(10);\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n/* 507 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar barPolar = __webpack_require__(508);\n\n__webpack_require__(139);\n\n__webpack_require__(514);\n\n__webpack_require__(516);\n\n__webpack_require__(80);\n\n__webpack_require__(518);\n\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});\n\n/***/ }),\n/* 508 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var angleAxis = polar.getAngleAxis();\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    var valueAxisStart = valueAxis.getExtent()[0];\n    var valueMax = valueAxis.model.get('max');\n    var valueMin = valueAxis.model.get('min');\n    var coordDims = [seriesModel.coordDimToDataDim('radius')[0], seriesModel.coordDimToDataDim('angle')[0]];\n    var coords = data.mapArray(coordDims, function (radius, angle) {\n      return polar.dataToPoint([radius, angle]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = polar.pointToCoord(coords[idx]);\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle;\n\n      if (valueAxis.dim === 'radius') {\n        // radial sector\n        r0 = lastCoordOrigin;\n        r = coord[0];\n        startAngle = (-coord[1] + columnOffset) * Math.PI / 180;\n        endAngle = startAngle + columnWidth * Math.PI / 180;\n\n        if (Math.abs(r) < barMinHeight) {\n          r = r0 + (r < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoordsOrigin[stackId][idx][sign] = r;\n      } else {\n        // tangential sector\n        r0 = coord[0] + columnOffset;\n        r = r0 + columnWidth; // clamp data if min or max is defined for valueAxis\n\n        if (valueMax != null) {\n          value = Math.min(value, valueMax);\n        }\n\n        if (valueMin != null) {\n          value = Math.max(value, valueMin);\n        }\n\n        var angle = angleAxis.dataToAngle(value);\n\n        if (Math.abs(angle - lastCoordOrigin) < barMinAngle) {\n          angle = lastCoordOrigin - (value < 0 ? -1 : 1) * barMinAngle;\n        }\n\n        startAngle = -lastCoordOrigin * Math.PI / 180;\n        endAngle = -angle * Math.PI / 180; // if the previous stack is at the end of the ring,\n        // add a round to differentiate it from origin\n\n        var extent = angleAxis.getExtent();\n        var stackCoord = angle;\n\n        if (stackCoord === extent[0] && value > 0) {\n          stackCoord = extent[1];\n        } else if (stackCoord === extent[1] && value < 0) {\n          stackCoord = extent[0];\n        }\n\n        lastStackCoordsOrigin[stackId][idx][sign] = stackCoord;\n      }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n    }, true);\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;\n\n/***/ }),\n/* 509 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar RadiusAxis = __webpack_require__(510);\n\nvar AngleAxis = __webpack_require__(511);\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;\n\n/***/ }),\n/* 510 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Axis = __webpack_require__(50);\n\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;\n\n/***/ }),\n/* 511 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Axis = __webpack_require__(50);\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;\n\n/***/ }),\n/* 512 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n__webpack_require__(513);\n\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 513 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar ComponentModel = __webpack_require__(14);\n\nvar axisModelCreator = __webpack_require__(99);\n\nvar axisModelCommonMixin = __webpack_require__(75);\n\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);\n\n/***/ }),\n/* 514 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(139);\n\n__webpack_require__(515);\n\n/***/ }),\n/* 515 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar Model = __webpack_require__(19);\n\nvar AxisView = __webpack_require__(53);\n\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n\n    if (angleAxis.type !== 'category') {\n      // Remove the last tick which will overlap the first tick\n      ticksAngles.pop();\n    }\n\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngle) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngle)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var axis = angleAxisModel.axis;\n    var categoryData = angleAxisModel.get('data');\n    var labelModel = angleAxisModel.getModel('axisLabel');\n    var labels = angleAxisModel.getFormattedLabels();\n    var labelMargin = labelModel.get('margin');\n    var labelsAngles = axis.getLabelsCoords(); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelsAngles[i]]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (categoryData && categoryData[i] && categoryData[i].textStyle) {\n        labelModel = new Model(categoryData[i].textStyle, labelModel, labelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labels[i],\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i])\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0] * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i] * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i] * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 516 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(139);\n\n__webpack_require__(517);\n\n/***/ }),\n/* 517 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar AxisBuilder = __webpack_require__(52);\n\nvar AxisView = __webpack_require__(53);\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i]\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i],\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i];\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 518 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar formatUtil = __webpack_require__(10);\n\nvar BaseAxisPointer = __webpack_require__(138);\n\nvar graphic = __webpack_require__(2);\n\nvar viewHelper = __webpack_require__(105);\n\nvar matrix = __webpack_require__(37);\n\nvar AxisBuilder = __webpack_require__(52);\n\nvar AxisView = __webpack_require__(53);\n\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n/* 519 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\n__webpack_require__(520);\n\n__webpack_require__(102);\n\n__webpack_require__(521);\n\n__webpack_require__(193);\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});\n\n/***/ }),\n/* 520 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar modelUtil = __webpack_require__(8);\n\nvar ComponentModel = __webpack_require__(14);\n\nvar Model = __webpack_require__(19);\n\nvar selectableMixin = __webpack_require__(132);\n\nvar geoCreator = __webpack_require__(102);\n\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      normal: {\n        show: false,\n        color: '#000'\n      },\n      emphasis: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      }\n    },\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderWidth: 0.5,\n        borderColor: '#444',\n        color: '#eee'\n      },\n      emphasis: {\n        // 也是选中样式\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 521 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MapDraw = __webpack_require__(190);\n\nvar echarts = __webpack_require__(1);\n\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 522 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar preprocessor = __webpack_require__(523);\n\n__webpack_require__(524);\n\n__webpack_require__(526);\n\n__webpack_require__(527);\n\n__webpack_require__(528);\n\n__webpack_require__(529);\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n/***/ }),\n/* 523 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 524 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar BoundingRect = __webpack_require__(18);\n\nvar visualSolution = __webpack_require__(106);\n\nvar selector = __webpack_require__(525);\n\nvar throttleUtil = __webpack_require__(62);\n\nvar BrushTargetManager = __webpack_require__(216);\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}\n\n/***/ }),\n/* 525 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar polygonContain = __webpack_require__(188);\n\nvar BoundingRect = __webpack_require__(18);\n\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;\n\n/***/ }),\n/* 526 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar visualSolution = __webpack_require__(106);\n\nvar Model = __webpack_require__(19);\n\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 527 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar BrushController = __webpack_require__(137);\n\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n\n  /**\n   * @override\n   */\n  updateLayout: updateController,\n\n  /**\n   * @override\n   */\n  updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 528 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});\n\n/***/ }),\n/* 529 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar featureManager = __webpack_require__(42);\n\nvar lang = __webpack_require__(63);\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype;\n\nproto.render = proto.updateView = proto.updateLayout = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;\n\n/***/ }),\n/* 530 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(531);\n\n__webpack_require__(532);\n\n__webpack_require__(533);\n\n/***/ }),\n/* 531 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar layout = __webpack_require__(9);\n\nvar numberUtil = __webpack_require__(5);\n\nvar CoordinateSystem = __webpack_require__(39);\n\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle.normal').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time <= range.end.time)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;\n\n/***/ }),\n/* 532 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar ComponentModel = __webpack_require__(14);\n\nvar _layout = __webpack_require__(9);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      normal: {\n        color: '#fff',\n        borderWidth: 1,\n        borderColor: '#ccc'\n      }\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 533 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(2);\n\nvar formatUtil = __webpack_require__(10);\n\nvar numberUtil = __webpack_require__(5);\n\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle.normal').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 534 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar graphic = __webpack_require__(2);\n\nvar _layout = __webpack_require__(9);\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n/***/ }),\n/* 535 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(217);\n\n__webpack_require__(81);\n\n__webpack_require__(82);\n\n__webpack_require__(537);\n\n__webpack_require__(538);\n\n__webpack_require__(539);\n\n__webpack_require__(540);\n\n__webpack_require__(218);\n\n__webpack_require__(219);\n\n/***/ }),\n/* 536 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar numberUtil = __webpack_require__(5);\n\nvar helper = __webpack_require__(140);\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n/***/ }),\n/* 537 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomModel = __webpack_require__(81);\n\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 538 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar eventTool = __webpack_require__(48);\n\nvar graphic = __webpack_require__(2);\n\nvar throttle = __webpack_require__(62);\n\nvar DataZoomView = __webpack_require__(82);\n\nvar numberUtil = __webpack_require__(5);\n\nvar layout = __webpack_require__(9);\n\nvar sliderMove = __webpack_require__(79);\n\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime);\n\n    if (realtime) {\n      realtime && this._dispatchZoomAction();\n    }\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false);\n\n    this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;\n\n/***/ }),\n/* 539 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomModel = __webpack_require__(81);\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 540 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar DataZoomView = __webpack_require__(82);\n\nvar sliderMove = __webpack_require__(79);\n\nvar roams = __webpack_require__(541);\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Notice: origin this._range should be maintained, and should not be re-fetched\n    // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n    // info will be missed because of 'throttle' of this.dispatchAction.\n\n    if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n      this._range = dataZoomModel.getPercentRange();\n    } // Reset controllers.\n\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    return this._range = range;\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    return this._range = range;\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;\n\n/***/ }),\n/* 541 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar RoamController = __webpack_require__(103);\n\nvar throttleUtil = __webpack_require__(62);\n\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction shouldRecordRange(payload, dataZoomId) {\n  if (payload && payload.type === 'dataZoom' && payload.batch) {\n    for (var i = 0, len = payload.batch.length; i < len; i++) {\n      if (payload.batch[i].dataZoomId === dataZoomId) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {};\n  var typePriority = {\n    'true': 2,\n    'move': 1,\n    'false': 0,\n    'undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n    typePriority[oneType] > typePriority[controlType] && (controlType = oneType); // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.shouldRecordRange = shouldRecordRange;\nexports.generateCoordId = generateCoordId;\n\n/***/ }),\n/* 542 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(543);\n\n__webpack_require__(546);\n\n/***/ }),\n/* 543 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar preprocessor = __webpack_require__(220);\n\n__webpack_require__(221);\n\n__webpack_require__(222);\n\n__webpack_require__(544);\n\n__webpack_require__(545);\n\n__webpack_require__(227);\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n/***/ }),\n/* 544 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar VisualMapModel = __webpack_require__(223);\n\nvar numberUtil = __webpack_require__(5);\n\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, true, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 545 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar LinearGradient = __webpack_require__(334);\n\nvar eventTool = __webpack_require__(48);\n\nvar VisualMapView = __webpack_require__(225);\n\nvar graphic = __webpack_require__(2);\n\nvar numberUtil = __webpack_require__(5);\n\nvar sliderMove = __webpack_require__(79);\n\nvar helper = __webpack_require__(226);\n\nvar modelUtil = __webpack_require__(8);\n\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var dim = data.getDimension(visualMapModel.getDataDimension(data));\n    var value = data.get(dim, el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;\n\n/***/ }),\n/* 546 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar preprocessor = __webpack_require__(220);\n\n__webpack_require__(221);\n\n__webpack_require__(222);\n\n__webpack_require__(547);\n\n__webpack_require__(548);\n\n__webpack_require__(227);\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n/***/ }),\n/* 547 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar VisualMapModel = __webpack_require__(223);\n\nvar VisualMapping = __webpack_require__(54);\n\nvar visualDefault = __webpack_require__(224);\n\nvar _number = __webpack_require__(5);\n\nvar reformIntervals = _number.reformIntervals;\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, true, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 548 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar VisualMapView = __webpack_require__(225);\n\nvar graphic = __webpack_require__(2);\n\nvar _symbol = __webpack_require__(30);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = __webpack_require__(9);\n\nvar helper = __webpack_require__(226);\n\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;\n\n/***/ }),\n/* 549 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n__webpack_require__(550);\n\n__webpack_require__(551);\n\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});\n\n/***/ }),\n/* 550 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MarkerModel = __webpack_require__(141);\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      normal: {\n        show: true,\n        position: 'inside'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 2\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 551 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar SymbolDraw = __webpack_require__(76);\n\nvar numberUtil = __webpack_require__(5);\n\nvar List = __webpack_require__(20);\n\nvar markerHelper = __webpack_require__(142);\n\nvar MarkerView = __webpack_require__(143);\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  updateLayout: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 552 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n__webpack_require__(553);\n\n__webpack_require__(554);\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});\n\n/***/ }),\n/* 553 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MarkerModel = __webpack_require__(141);\n\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      normal: {\n        show: true,\n        position: 'end'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    lineStyle: {\n      normal: {\n        type: 'dashed'\n      },\n      emphasis: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 554 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar List = __webpack_require__(20);\n\nvar numberUtil = __webpack_require__(5);\n\nvar markerHelper = __webpack_require__(142);\n\nvar LineDraw = __webpack_require__(135);\n\nvar MarkerView = __webpack_require__(143);\n\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  updateLayout: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.normal.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 555 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\n__webpack_require__(556);\n\n__webpack_require__(557);\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});\n\n/***/ }),\n/* 556 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MarkerModel = __webpack_require__(141);\n\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      normal: {\n        show: true,\n        position: 'top'\n      },\n      emphasis: {\n        show: true,\n        position: 'top'\n      }\n    },\n    itemStyle: {\n      normal: {\n        // color and borderColor default to use color from series\n        // color: 'auto'\n        // borderColor: 'auto'\n        borderWidth: 0\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 557 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar colorUtil = __webpack_require__(46);\n\nvar List = __webpack_require__(20);\n\nvar numberUtil = __webpack_require__(5);\n\nvar graphic = __webpack_require__(2);\n\nvar markerHelper = __webpack_require__(142);\n\nvar MarkerView = __webpack_require__(143);\n\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y], true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  updateLayout: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesName = seriesModel.name;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesName) || areaGroupMap.set(seriesName, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle.normal').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}\n\n/***/ }),\n/* 558 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar preprocessor = __webpack_require__(559);\n\n__webpack_require__(560);\n\n__webpack_require__(561);\n\n__webpack_require__(562);\n\n__webpack_require__(564);\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n/***/ }),\n/* 559 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 560 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(14);\n\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});\n\n/***/ }),\n/* 561 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});\n\n/***/ }),\n/* 562 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar TimelineModel = __webpack_require__(563);\n\nvar modelUtil = __webpack_require__(8);\n\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      normal: {\n        show: true,\n        interval: 'auto',\n        rotate: 0,\n        // formatter: null,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#304654'\n      },\n      emphasis: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: '#304654',\n        borderWidth: 1\n      },\n      emphasis: {\n        color: '#c23531'\n      }\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      normal: {\n        color: '#304654',\n        borderColor: '#304654',\n        borderWidth: 1\n      },\n      emphasis: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, modelUtil.dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 563 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar ComponentModel = __webpack_require__(14);\n\nvar List = __webpack_require__(20);\n\nvar modelUtil = __webpack_require__(8);\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {\n      normal: {},\n      emphasis: {}\n    },\n    label: {\n      normal: {\n        color: '#000'\n      },\n      emphasis: {}\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 564 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar BoundingRect = __webpack_require__(18);\n\nvar matrix = __webpack_require__(37);\n\nvar graphic = __webpack_require__(2);\n\nvar layout = __webpack_require__(9);\n\nvar TimelineView = __webpack_require__(565);\n\nvar TimelineAxis = __webpack_require__(566);\n\nvar _symbol = __webpack_require__(30);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = __webpack_require__(36);\n\nvar numberUtil = __webpack_require__(5);\n\nvar _format = __webpack_require__(10);\n\nvar encodeHTML = _format.encodeHTML;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.normal.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show');\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.normal.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showControl = controlModel.get('show', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.normal.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.normal.verticalAlign') || timelineModel.get('label.normal.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transfrom to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType);\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n\n    this._customizeScale(scale, data);\n\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _customizeScale: function (scale, data) {\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    scale.getTicksLabels = function () {\n      return zrUtil.map(this.getTicks(), scale.getLabel, scale);\n    };\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    each(ticks, function (value, dataIndex) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(dataIndex);\n      var itemStyleModel = itemModel.getModel('itemStyle.normal');\n      var hoverStyleModel = itemModel.getModel('itemStyle.emphasis');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, dataIndex)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = dataIndex;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = timelineModel.getModel('label.normal');\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    var labels = axisHelper.getFormattedLabels(axis, labelModel.get('formatter'));\n    var labelInterval = axis.getLabelInterval();\n    each(ticks, function (tick, dataIndex) {\n      if (axis.isLabelIgnored(dataIndex, labelInterval)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label.normal');\n      var hoverLabelModel = itemModel.getModel('label.emphasis');\n      var tickCoord = axis.dataToCoord(tick);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labels[dataIndex],\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle.normal').getItemStyle();\n    var hoverStyle = timelineModel.getModel('controlStyle.emphasis').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 565 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ComponentView = __webpack_require__(128);\n\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 566 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Axis = __webpack_require__(50);\n\nvar axisHelper = __webpack_require__(36);\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._autoLabelInterval;\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var timelineModel = this.model;\n    var labelModel = timelineModel.getModel('label.normal');\n    var labelInterval = labelModel.get('interval');\n\n    if (labelInterval != null && labelInterval != 'auto') {\n      return labelInterval;\n    }\n\n    var labelInterval = this._autoLabelInterval;\n\n    if (!labelInterval) {\n      labelInterval = this._autoLabelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisHelper.getFormattedLabels(this, labelModel.get('formatter')), labelModel.getFont(), timelineModel.get('orient') === 'horizontal' ? 0 : 90, labelModel.get('rotate'));\n    }\n\n    return labelInterval;\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @public\n   * @param  {number} idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;\n\n/***/ }),\n/* 567 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(568);\n\n__webpack_require__(569);\n\n__webpack_require__(570);\n\n__webpack_require__(571);\n\n__webpack_require__(572);\n\n__webpack_require__(573);\n\n__webpack_require__(577);\n\n/***/ }),\n/* 568 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar featureManager = __webpack_require__(42);\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 569 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar textContain = __webpack_require__(47);\n\nvar featureManager = __webpack_require__(42);\n\nvar graphic = __webpack_require__(2);\n\nvar Model = __webpack_require__(19);\n\nvar DataDiffer = __webpack_require__(74);\n\nvar listComponentHelper = __webpack_require__(215);\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 570 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(27);\n\nvar lang = __webpack_require__(63);\n\nvar featureManager = __webpack_require__(42);\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n/***/ }),\n/* 571 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar lang = __webpack_require__(63);\n\nvar featureManager = __webpack_require__(42);\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n/***/ }),\n/* 572 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar eventTool = __webpack_require__(48);\n\nvar lang = __webpack_require__(63);\n\nvar featureManager = __webpack_require__(42);\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n/***/ }),\n/* 573 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar zrUtil = __webpack_require__(0);\n\nvar BrushController = __webpack_require__(137);\n\nvar BrushTargetManager = __webpack_require__(216);\n\nvar history = __webpack_require__(228);\n\nvar sliderMove = __webpack_require__(79);\n\nvar lang = __webpack_require__(63);\n\nvar featureManager = __webpack_require__(42);\n\n__webpack_require__(574);\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n/***/ }),\n/* 574 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(217);\n\n__webpack_require__(81);\n\n__webpack_require__(82);\n\n__webpack_require__(575);\n\n__webpack_require__(576);\n\n__webpack_require__(218);\n\n__webpack_require__(219);\n\n/***/ }),\n/* 575 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomModel = __webpack_require__(81);\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 576 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomView = __webpack_require__(82);\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 577 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1);\n\nvar history = __webpack_require__(228);\n\nvar lang = __webpack_require__(63);\n\nvar featureManager = __webpack_require__(42);\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n/***/ }),\n/* 578 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(579);\n\nvar _zrender = __webpack_require__(126);\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = __webpack_require__(580);\n\nregisterPainter('vml', Painter);\n\n/***/ }),\n/* 579 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(27);\n\nvar _vector = __webpack_require__(11);\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = __webpack_require__(18);\n\nvar colorTool = __webpack_require__(46);\n\nvar textContain = __webpack_require__(47);\n\nvar textHelper = __webpack_require__(158);\n\nvar RectText = __webpack_require__(327);\n\nvar Displayable = __webpack_require__(174);\n\nvar ZImage = __webpack_require__(110);\n\nvar Text = __webpack_require__(97);\n\nvar Path = __webpack_require__(29);\n\nvar PathProxy = __webpack_require__(111);\n\nvar Gradient = __webpack_require__(159);\n\nvar vmlCore = __webpack_require__(229);\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$inject.measureText(function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}\n\n/***/ }),\n/* 580 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrLog = __webpack_require__(109);\n\nvar vmlCore = __webpack_require__(229);\n\nvar _util = __webpack_require__(0);\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;\n\n/***/ }),\n/* 581 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(144);\n\nvar _zrender = __webpack_require__(126);\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = __webpack_require__(582);\n\nregisterPainter('svg', Painter);\n\n/***/ }),\n/* 582 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(145);\n\nvar createElement = _core.createElement;\n\nvar zrLog = __webpack_require__(109);\n\nvar Path = __webpack_require__(29);\n\nvar ZImage = __webpack_require__(110);\n\nvar ZText = __webpack_require__(97);\n\nvar arrayDiff = __webpack_require__(583);\n\nvar GradientManager = __webpack_require__(584);\n\nvar ClippathManager = __webpack_require__(585);\n\nvar _util = __webpack_require__(0);\n\nvar each = _util.each;\n\nvar _graphic = __webpack_require__(144);\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n */\n\n\nvar SVGPainter = function (root, storage) {\n  this.root = root;\n  this.storage = storage;\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style['user-select'] = 'none';\n  this.gradientManager = new GradientManager(svgRoot);\n  this.clipPathManager = new ClippathManager(svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow: hidden;';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize();\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable);\n          var el = getSvgElement(displayable) || getTextSvgElement(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable, el); // Update gradient\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function () {\n    var width = this._getWidth();\n\n    var height = this._getHeight();\n\n    if (this._width !== width && this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = this._viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n  getWidth: function () {\n    return this._getWidth();\n  },\n  getHeight: function () {\n    return this._getHeight();\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToSvg: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:img/svg+xml;utf-8,' + unescape(html);\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;\n\n/***/ }),\n/* 583 */\n/***/ (function(module, exports) {\n\n// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 584 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Definable = __webpack_require__(230);\n\nvar zrUtil = __webpack_require__(0);\n\nvar zrLog = __webpack_require__(109);\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(svgRoot) {\n  Definable.call(this, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 585 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Definable = __webpack_require__(230);\n\nvar zrUtil = __webpack_require__(0);\n\nvar matrix = __webpack_require__(37);\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(svgRoot) {\n  Definable.call(this, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n * @param {SVGElement}  svgElement  SVG element of displayable\n */\n\nClippathManager.prototype.update = function (displayable, svgElement) {\n  this.updateDom(svgElement, displayable.__clipPaths, false);\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    clipPathEl.appendChild(pathEl);\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 586 */,\n/* 587 */,\n/* 588 */,\n/* 589 */,\n/* 590 */,\n/* 591 */,\n/* 592 */,\n/* 593 */,\n/* 594 */,\n/* 595 */,\n/* 596 */,\n/* 597 */,\n/* 598 */,\n/* 599 */,\n/* 600 */,\n/* 601 */,\n/* 602 */,\n/* 603 */,\n/* 604 */,\n/* 605 */,\n/* 606 */,\n/* 607 */,\n/* 608 */,\n/* 609 */,\n/* 610 */,\n/* 611 */,\n/* 612 */,\n/* 613 */,\n/* 614 */,\n/* 615 */,\n/* 616 */,\n/* 617 */,\n/* 618 */,\n/* 619 */,\n/* 620 */,\n/* 621 */,\n/* 622 */,\n/* 623 */,\n/* 624 */,\n/* 625 */,\n/* 626 */,\n/* 627 */,\n/* 628 */,\n/* 629 */,\n/* 630 */,\n/* 631 */,\n/* 632 */,\n/* 633 */,\n/* 634 */,\n/* 635 */,\n/* 636 */,\n/* 637 */,\n/* 638 */,\n/* 639 */,\n/* 640 */,\n/* 641 */,\n/* 642 */,\n/* 643 */,\n/* 644 */,\n/* 645 */,\n/* 646 */,\n/* 647 */,\n/* 648 */,\n/* 649 */,\n/* 650 */,\n/* 651 */,\n/* 652 */,\n/* 653 */,\n/* 654 */,\n/* 655 */,\n/* 656 */,\n/* 657 */,\n/* 658 */,\n/* 659 */,\n/* 660 */,\n/* 661 */,\n/* 662 */,\n/* 663 */,\n/* 664 */,\n/* 665 */,\n/* 666 */,\n/* 667 */,\n/* 668 */,\n/* 669 */,\n/* 670 */,\n/* 671 */,\n/* 672 */,\n/* 673 */,\n/* 674 */,\n/* 675 */,\n/* 676 */,\n/* 677 */,\n/* 678 */,\n/* 679 */,\n/* 680 */,\n/* 681 */,\n/* 682 */,\n/* 683 */,\n/* 684 */,\n/* 685 */,\n/* 686 */,\n/* 687 */,\n/* 688 */,\n/* 689 */,\n/* 690 */,\n/* 691 */,\n/* 692 */,\n/* 693 */,\n/* 694 */,\n/* 695 */,\n/* 696 */,\n/* 697 */,\n/* 698 */,\n/* 699 */,\n/* 700 */,\n/* 701 */,\n/* 702 */,\n/* 703 */,\n/* 704 */,\n/* 705 */,\n/* 706 */,\n/* 707 */,\n/* 708 */,\n/* 709 */,\n/* 710 */,\n/* 711 */,\n/* 712 */,\n/* 713 */,\n/* 714 */,\n/* 715 */,\n/* 716 */,\n/* 717 */,\n/* 718 */,\n/* 719 */,\n/* 720 */,\n/* 721 */,\n/* 722 */,\n/* 723 */,\n/* 724 */,\n/* 725 */,\n/* 726 */,\n/* 727 */,\n/* 728 */,\n/* 729 */,\n/* 730 */,\n/* 731 */,\n/* 732 */,\n/* 733 */,\n/* 734 */,\n/* 735 */,\n/* 736 */,\n/* 737 */,\n/* 738 */,\n/* 739 */,\n/* 740 */,\n/* 741 */,\n/* 742 */,\n/* 743 */,\n/* 744 */,\n/* 745 */,\n/* 746 */,\n/* 747 */,\n/* 748 */,\n/* 749 */,\n/* 750 */,\n/* 751 */,\n/* 752 */,\n/* 753 */,\n/* 754 */,\n/* 755 */,\n/* 756 */,\n/* 757 */,\n/* 758 */,\n/* 759 */,\n/* 760 */,\n/* 761 */,\n/* 762 */,\n/* 763 */,\n/* 764 */,\n/* 765 */,\n/* 766 */,\n/* 767 */,\n/* 768 */,\n/* 769 */,\n/* 770 */,\n/* 771 */,\n/* 772 */,\n/* 773 */,\n/* 774 */,\n/* 775 */,\n/* 776 */,\n/* 777 */,\n/* 778 */,\n/* 779 */,\n/* 780 */,\n/* 781 */,\n/* 782 */,\n/* 783 */,\n/* 784 */,\n/* 785 */,\n/* 786 */,\n/* 787 */,\n/* 788 */,\n/* 789 */,\n/* 790 */,\n/* 791 */,\n/* 792 */,\n/* 793 */,\n/* 794 */,\n/* 795 */,\n/* 796 */,\n/* 797 */,\n/* 798 */,\n/* 799 */,\n/* 800 */,\n/* 801 */,\n/* 802 */,\n/* 803 */,\n/* 804 */,\n/* 805 */,\n/* 806 */,\n/* 807 */,\n/* 808 */,\n/* 809 */,\n/* 810 */,\n/* 811 */,\n/* 812 */,\n/* 813 */,\n/* 814 */,\n/* 815 */,\n/* 816 */,\n/* 817 */,\n/* 818 */,\n/* 819 */,\n/* 820 */,\n/* 821 */,\n/* 822 */,\n/* 823 */,\n/* 824 */,\n/* 825 */,\n/* 826 */,\n/* 827 */,\n/* 828 */,\n/* 829 */,\n/* 830 */,\n/* 831 */,\n/* 832 */,\n/* 833 */,\n/* 834 */,\n/* 835 */,\n/* 836 */,\n/* 837 */,\n/* 838 */,\n/* 839 */,\n/* 840 */,\n/* 841 */,\n/* 842 */,\n/* 843 */,\n/* 844 */,\n/* 845 */,\n/* 846 */,\n/* 847 */,\n/* 848 */,\n/* 849 */,\n/* 850 */,\n/* 851 */,\n/* 852 */,\n/* 853 */,\n/* 854 */,\n/* 855 */,\n/* 856 */,\n/* 857 */,\n/* 858 */,\n/* 859 */,\n/* 860 */,\n/* 861 */,\n/* 862 */,\n/* 863 */,\n/* 864 */,\n/* 865 */,\n/* 866 */,\n/* 867 */,\n/* 868 */,\n/* 869 */,\n/* 870 */,\n/* 871 */,\n/* 872 */,\n/* 873 */,\n/* 874 */,\n/* 875 */,\n/* 876 */,\n/* 877 */,\n/* 878 */,\n/* 879 */,\n/* 880 */,\n/* 881 */,\n/* 882 */,\n/* 883 */,\n/* 884 */,\n/* 885 */,\n/* 886 */,\n/* 887 */,\n/* 888 */,\n/* 889 */,\n/* 890 */,\n/* 891 */,\n/* 892 */,\n/* 893 */,\n/* 894 */,\n/* 895 */,\n/* 896 */,\n/* 897 */,\n/* 898 */,\n/* 899 */,\n/* 900 */,\n/* 901 */,\n/* 902 */,\n/* 903 */,\n/* 904 */,\n/* 905 */,\n/* 906 */,\n/* 907 */,\n/* 908 */,\n/* 909 */,\n/* 910 */,\n/* 911 */,\n/* 912 */,\n/* 913 */,\n/* 914 */,\n/* 915 */,\n/* 916 */,\n/* 917 */,\n/* 918 */,\n/* 919 */,\n/* 920 */,\n/* 921 */,\n/* 922 */,\n/* 923 */,\n/* 924 */,\n/* 925 */,\n/* 926 */,\n/* 927 */,\n/* 928 */,\n/* 929 */,\n/* 930 */,\n/* 931 */,\n/* 932 */,\n/* 933 */,\n/* 934 */,\n/* 935 */,\n/* 936 */,\n/* 937 */,\n/* 938 */,\n/* 939 */,\n/* 940 */,\n/* 941 */,\n/* 942 */,\n/* 943 */,\n/* 944 */,\n/* 945 */,\n/* 946 */,\n/* 947 */,\n/* 948 */,\n/* 949 */,\n/* 950 */,\n/* 951 */,\n/* 952 */,\n/* 953 */,\n/* 954 */,\n/* 955 */,\n/* 956 */,\n/* 957 */,\n/* 958 */,\n/* 959 */,\n/* 960 */,\n/* 961 */,\n/* 962 */,\n/* 963 */,\n/* 964 */,\n/* 965 */,\n/* 966 */,\n/* 967 */,\n/* 968 */,\n/* 969 */,\n/* 970 */,\n/* 971 */,\n/* 972 */,\n/* 973 */,\n/* 974 */,\n/* 975 */,\n/* 976 */,\n/* 977 */,\n/* 978 */,\n/* 979 */,\n/* 980 */,\n/* 981 */,\n/* 982 */,\n/* 983 */,\n/* 984 */,\n/* 985 */,\n/* 986 */,\n/* 987 */,\n/* 988 */,\n/* 989 */,\n/* 990 */,\n/* 991 */,\n/* 992 */,\n/* 993 */,\n/* 994 */,\n/* 995 */,\n/* 996 */,\n/* 997 */,\n/* 998 */,\n/* 999 */,\n/* 1000 */,\n/* 1001 */,\n/* 1002 */,\n/* 1003 */,\n/* 1004 */,\n/* 1005 */,\n/* 1006 */,\n/* 1007 */,\n/* 1008 */,\n/* 1009 */,\n/* 1010 */,\n/* 1011 */,\n/* 1012 */,\n/* 1013 */,\n/* 1014 */,\n/* 1015 */,\n/* 1016 */,\n/* 1017 */,\n/* 1018 */,\n/* 1019 */,\n/* 1020 */,\n/* 1021 */,\n/* 1022 */,\n/* 1023 */,\n/* 1024 */,\n/* 1025 */,\n/* 1026 */,\n/* 1027 */,\n/* 1028 */,\n/* 1029 */,\n/* 1030 */,\n/* 1031 */,\n/* 1032 */,\n/* 1033 */,\n/* 1034 */,\n/* 1035 */,\n/* 1036 */,\n/* 1037 */,\n/* 1038 */,\n/* 1039 */,\n/* 1040 */,\n/* 1041 */,\n/* 1042 */,\n/* 1043 */,\n/* 1044 */,\n/* 1045 */,\n/* 1046 */,\n/* 1047 */,\n/* 1048 */,\n/* 1049 */,\n/* 1050 */,\n/* 1051 */,\n/* 1052 */,\n/* 1053 */,\n/* 1054 */,\n/* 1055 */,\n/* 1056 */,\n/* 1057 */,\n/* 1058 */,\n/* 1059 */,\n/* 1060 */,\n/* 1061 */,\n/* 1062 */,\n/* 1063 */,\n/* 1064 */,\n/* 1065 */,\n/* 1066 */,\n/* 1067 */,\n/* 1068 */,\n/* 1069 */,\n/* 1070 */,\n/* 1071 */,\n/* 1072 */,\n/* 1073 */,\n/* 1074 */,\n/* 1075 */,\n/* 1076 */,\n/* 1077 */,\n/* 1078 */,\n/* 1079 */,\n/* 1080 */,\n/* 1081 */,\n/* 1082 */,\n/* 1083 */,\n/* 1084 */,\n/* 1085 */,\n/* 1086 */,\n/* 1087 */,\n/* 1088 */,\n/* 1089 */,\n/* 1090 */,\n/* 1091 */,\n/* 1092 */,\n/* 1093 */,\n/* 1094 */,\n/* 1095 */,\n/* 1096 */,\n/* 1097 */,\n/* 1098 */,\n/* 1099 */,\n/* 1100 */,\n/* 1101 */,\n/* 1102 */,\n/* 1103 */,\n/* 1104 */,\n/* 1105 */,\n/* 1106 */,\n/* 1107 */,\n/* 1108 */,\n/* 1109 */,\n/* 1110 */,\n/* 1111 */,\n/* 1112 */,\n/* 1113 */,\n/* 1114 */,\n/* 1115 */,\n/* 1116 */,\n/* 1117 */,\n/* 1118 */,\n/* 1119 */,\n/* 1120 */,\n/* 1121 */,\n/* 1122 */,\n/* 1123 */,\n/* 1124 */,\n/* 1125 */,\n/* 1126 */,\n/* 1127 */,\n/* 1128 */,\n/* 1129 */,\n/* 1130 */,\n/* 1131 */,\n/* 1132 */,\n/* 1133 */,\n/* 1134 */,\n/* 1135 */,\n/* 1136 */,\n/* 1137 */,\n/* 1138 */,\n/* 1139 */,\n/* 1140 */,\n/* 1141 */,\n/* 1142 */,\n/* 1143 */,\n/* 1144 */,\n/* 1145 */,\n/* 1146 */,\n/* 1147 */,\n/* 1148 */,\n/* 1149 */,\n/* 1150 */,\n/* 1151 */,\n/* 1152 */,\n/* 1153 */,\n/* 1154 */,\n/* 1155 */,\n/* 1156 */,\n/* 1157 */,\n/* 1158 */,\n/* 1159 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(1160);\n\nvar _react = __webpack_require__(4);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(31);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _reactRouterDom = __webpack_require__(56);\n\nvar _index = __webpack_require__(113);\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _list = __webpack_require__(1162);\n\nvar _list2 = _interopRequireDefault(_list);\n\nvar _detail = __webpack_require__(1165);\n\nvar _detail2 = _interopRequireDefault(_detail);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Evaluating = function (_Component) {\n  _inherits(Evaluating, _Component);\n\n  function Evaluating() {\n    _classCallCheck(this, Evaluating);\n\n    return _possibleConstructorReturn(this, (Evaluating.__proto__ || Object.getPrototypeOf(Evaluating)).apply(this, arguments));\n  }\n\n  _createClass(Evaluating, [{\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(\n        _reactRouterDom.HashRouter,\n        null,\n        _react2.default.createElement(\n          \"div\",\n          { className: \"pc-price-market\" },\n          _react2.default.createElement(_index2.default, { classIco: \"nav-item-active\" }),\n          _react2.default.createElement(\n            \"div\",\n            { className: \"page-wrap\" },\n            _react2.default.createElement(\n              \"div\",\n              { className: \"container\" },\n              _react2.default.createElement(\n                _reactRouterDom.Switch,\n                null,\n                _react2.default.createElement(_reactRouterDom.Route, { path: \"/detail\", component: _detail2.default }),\n                _react2.default.createElement(_reactRouterDom.Route, { path: \"/\", component: _list2.default })\n              )\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return Evaluating;\n}(_react.Component);\n\nexports.default = Evaluating;\n\n_reactDom2.default.render(_react2.default.createElement(Evaluating, null), document.getElementById(\"root\"));\n\n/***/ }),\n/* 1160 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1161);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(7)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 1161 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(6)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \"/* 项目公共样式 */\\nbody,\\nimg,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nul,\\nli,\\np,\\nbutton,\\ninput,\\ntable,\\ntr,\\ntd,\\nth {\\n  margin: 0;\\n  padding: 0;\\n}\\nhtml,\\nbody {\\n  min-width: 1200px;\\n}\\nbody {\\n  font-family: \\\"Microsoft YaHei\\\", \\\"\\\\5FAE\\\\8F6F\\\\96C5\\\\9ED1\\\", Arial, sans-serif;\\n  color: #ccc;\\n  font-size: 12px;\\n  background: url(\" + __webpack_require__(125) + \") no-repeat center center;\\n  background-size: 100% 100%;\\n  overflow-y: auto;\\n}\\nh2 {\\n  font-size: 14px;\\n}\\nul {\\n  list-style: none;\\n}\\nimg {\\n  border: none;\\n}\\ninput,\\nbutton,\\nselect,\\noption {\\n  border: none;\\n  outline: none;\\n}\\na {\\n  text-decoration: none;\\n  color: #fff;\\n}\\nnav {\\n  /* 测试 autoprefixer */\\n  -webkit-transition: -webkit-transform 1s;\\n  transition: -webkit-transform 1s;\\n  transition: transform 1s;\\n  transition: transform 1s, -webkit-transform 1s;\\n}\\nnav.active {\\n  /* 测试 autoprefixer */\\n  -webkit-transform: translate(30px);\\n      -ms-transform: translate(30px);\\n          transform: translate(30px);\\n}\\nnav a {\\n  margin-right: 20px;\\n  color: #7265e6;\\n}\\n/* 基础样式（与项目无关） */\\n.clearfix::before,\\n.clearfix::after {\\n  content: '';\\n  display: table;\\n}\\n.clearfix::after {\\n  clear: both;\\n}\\n.pc-price-market {\\n  position: relative;\\n  width: 100%;\\n  color: #fff;\\n}\\n.pc-price-market .page-wrap {\\n  padding-top: 8px;\\n  width: 100%;\\n  text-align: center;\\n  color: #ffffff;\\n}\\n.pc-price-market .page-wrap .content {\\n  width: 812px;\\n  margin: 0 auto;\\n  padding: 50px 144px 80px;\\n  color: #000;\\n  background: #ffffff;\\n  box-shadow: 1px 0px 2px rgba(0, 0, 0, 0.41);\\n}\\n.pc-price-market .page-wrap h2 {\\n  height: 26px;\\n  line-height: 19px;\\n}\\n.pc-price-market .page-wrap p {\\n  line-height: 32px;\\n  text-align: left;\\n}\\n.pc-price-market .page-wrap .reply-detail {\\n  margin: 34px auto 54px;\\n  -webkit-box-pack: center;\\n  -webkit-justify-content: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n}\\n.container {\\n  width: 1100px;\\n  margin: 0 auto;\\n  padding: 20px 0;\\n  box-sizing: border-box;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 1162 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(1163);\n\nvar _react = __webpack_require__(4);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(31);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _app = __webpack_require__(13);\n\nvar _env = __webpack_require__(17);\n\nvar _reactRouterDom = __webpack_require__(56);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar List = function (_Component) {\n  _inherits(List, _Component);\n\n  function List(props) {\n    _classCallCheck(this, List);\n\n    var _this = _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this, props));\n\n    _this.state = {\n      list: []\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"getListData\",\n    value: function getListData() {\n      var _this2 = this;\n\n      (0, _app.getData)(_env.PORTOCAL + \"/article/ico\").then(function (data) {\n        if (data.code === 4000) {\n          _this2.setState({\n            list: [].concat(_toConsumableArray(data.data))\n          });\n        } else {\n          throw new Error(data.msg);\n        }\n      }).catch(function (e) {\n        alert(e.toString().replace(\"Error:\", \"\"));\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getListData();\n    }\n  }, {\n    key: \"goWebsite\",\n    value: function goWebsite(idx, e) {\n      e.stopPropagation();\n      window.open(this.state.list[idx].website);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _react2.default.createElement(\n        \"div\",\n        { className: \"list-box\" },\n        this.state.list.length > 0 && this.state.list.map(function (item, index) {\n          return _react2.default.createElement(\n            _reactRouterDom.Link,\n            {\n              to: {\n                pathname: \"/detail\",\n                search: \"?id=\" + item.id\n              },\n              key: \"index\",\n              className: \"list-item\"\n            },\n            _react2.default.createElement(\"img\", { className: \"list-img\", src: item.img }),\n            _react2.default.createElement(\n              \"div\",\n              { className: \"list-info\" },\n              _react2.default.createElement(\n                \"h3\",\n                { className: \"list-title\" },\n                item.title\n              ),\n              _react2.default.createElement(\n                \"div\",\n                { className: \"list-t\" },\n                \"\\u76EE\\u524D\\u72B6\\u6001\\uFF1A\",\n                item.assess_status\n              ),\n              _react2.default.createElement(\n                \"div\",\n                { className: \"list-t\" },\n                \"\\u5B98\\u7F51\\uFF1A\",\n                _react2.default.createElement(\n                  \"span\",\n                  {\n                    className: \"a\",\n                    onClick: _this3.goWebsite.bind(_this3, index)\n                  },\n                  item.website\n                )\n              ),\n              _react2.default.createElement(\n                \"div\",\n                { className: \"list-t\" },\n                \"\\u65F6\\u95F4\\uFF1A\",\n                item.created_at\n              )\n            )\n          );\n        }),\n        this.state.list.length == 0 && _react2.default.createElement(\n          \"div\",\n          { style: { padding: \"200px 0\" } },\n          \"\\u6682\\u65E0\\u6570\\u636E\"\n        )\n      );\n    }\n  }]);\n\n  return List;\n}(_react.Component);\n\nexports.default = List;\n\n/***/ }),\n/* 1163 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1164);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(7)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 1164 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(6)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".list-box {\\n  box-sizing: border-box;\\n  padding: 0 140px;\\n  background: #2eafea;\\n}\\n.list-box .list-item {\\n  padding: 35px 0;\\n  border-bottom: 1px solid #fff;\\n  display: block;\\n}\\n.list-box .list-item:nth-last-child(1) {\\n  border-bottom: 0;\\n}\\n.list-box .list-img {\\n  width: 235px;\\n  height: 134px;\\n  display: inline-block;\\n  vertical-align: top;\\n  margin-right: 20px;\\n}\\n.list-box .list-info {\\n  display: inline-block;\\n  vertical-align: top;\\n  width: 565px;\\n  color: #fff;\\n  text-align: left;\\n}\\n.list-box .list-info .list-title {\\n  font-size: 18px;\\n}\\n.list-box .list-info .list-t {\\n  margin-top: 20px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 1165 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(4);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(31);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _reactRouterDom = __webpack_require__(56);\n\nvar _app = __webpack_require__(13);\n\nvar _env = __webpack_require__(17);\n\nvar _index = __webpack_require__(1166);\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = __webpack_require__(1169);\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = __webpack_require__(1172);\n\nvar _index6 = _interopRequireDefault(_index5);\n\nvar _index7 = __webpack_require__(1212);\n\nvar _index8 = _interopRequireDefault(_index7);\n\n__webpack_require__(1215);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Detail = function (_Component) {\n  _inherits(Detail, _Component);\n\n  function Detail(props, content) {\n    _classCallCheck(this, Detail);\n\n    var _this = _possibleConstructorReturn(this, (Detail.__proto__ || Object.getPrototypeOf(Detail)).call(this, props));\n\n    _this.state = {\n      query: null,\n      viewData: null,\n      intro: null\n    };\n    return _this;\n  }\n\n  _createClass(Detail, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var q = (0, _app.getQuery)(this.props.location.search);\n      this.setState({\n        query: q\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      (0, _app.getData)(_env.PORTOCAL + \"/article/ico/\" + this.state.query.id).then(function (data) {\n        if (data.code === 4000) {\n          _this2.setState({\n            viewData: data.data\n          });\n        } else {\n          throw new error(data.msg);\n        }\n      }).catch(function (e) {\n        alert(e.toString().replace(\"Error:\", \"\"));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var cont = this.state.viewData;\n      var intro = this.state.intro;\n      //console.log(cont);\n\n      return _react2.default.createElement(\n        \"div\",\n        { className: \"detail-box\" },\n        cont && _react2.default.createElement(\n          \"div\",\n          { className: \"detail\" },\n          _react2.default.createElement(\n            \"h1\",\n            { className: \"detail-title\" },\n            cont.title\n          ),\n          _react2.default.createElement(\n            \"div\",\n            { className: \"detail-time\" },\n            \"\\u66F4\\u65B0\\u4E8E\\uFF1A\",\n            cont.created_at\n          ),\n          _react2.default.createElement(\n            \"div\",\n            { className: \"detail-box1\" },\n            _react2.default.createElement(\n              \"div\",\n              { className: \"box1-left\" },\n              _react2.default.createElement(\n                \"div\",\n                { className: \"circle\" },\n                cont.ico_score\n              ),\n              _react2.default.createElement(\n                \"div\",\n                { className: \"state\" },\n                \"\\u4E0A\\u7EBF\\u4EA4\\u6613\\u4E2D\"\n              )\n            ),\n            _react2.default.createElement(\n              \"div\",\n              { className: \"box1-middle\" },\n              _react2.default.createElement(\n                \"div\",\n                { className: \"risk-level\" },\n                \"\\u98CE\\u9669\\u7B49\\u7EA7 :\",\n                \" \",\n                _react2.default.createElement(\"span\", {\n                  className: \"risk-level-color1\",\n                  style: { background: cont.risk_level_color }\n                }),\n                \" \",\n                cont.risk_level_name\n              )\n            ),\n            _react2.default.createElement(\n              \"div\",\n              { className: \"box1-right\" },\n              _react2.default.createElement(\n                \"span\",\n                { className: \"right-item\" },\n                \"\\u5C71\\u9E21\\u5C71\\u9E21\\u5C71\\u9E21\"\n              ),\n              _react2.default.createElement(\"br\", null),\n              _react2.default.createElement(\n                \"span\",\n                { className: \"right-item\" },\n                \"\\u5C71\\u9E21\\u5C71\\u9E21\\u5C71\\u9E21\"\n              )\n            )\n          ),\n          _react2.default.createElement(\n            \"p\",\n            { className: \"remind\" },\n            \"\\u90D1\\u91CD\\u58F0\\u660E\\uFF1A\\u6240\\u6709 ICO \\u90FD\\u6709\\u5F52 \\uFF10 \\u7684\\u98CE\\u9669\\uFF0C\\u6240\\u6709\\u4FE1\\u606F\\u4EC5\\u4F9B\\u53C2\\u8003\\uFF0C\\u4E0D\\u6784\\u6210\\u4EFB\\u4F55\\u6295\\u8D44\\u53D1\\u8D77\"\n          ),\n          _react2.default.createElement(_index2.default, {\n            img: cont.img,\n            desc: cont.desc,\n            website: cont.website\n          }),\n          _react2.default.createElement(_index4.default, {\n            ico_assess_issue_info: cont.ico_assess_issue_info,\n            unit: cont.ico.unit\n          }),\n          _react2.default.createElement(_index6.default, { ico_assess_structure: cont.ico_assess_structure }),\n          _react2.default.createElement(_index8.default, {\n            ico_assess_project_analyse: cont.ico_assess_project_analyse\n          })\n        ),\n        !cont && _react2.default.createElement(\n          \"div\",\n          { style: { padding: \"200px 0\" } },\n          \"\\u65E0\\u6CD5\\u67E5\\u8BE2\\u5230\\u6570\\u636E\"\n        )\n      );\n    }\n  }]);\n\n  return Detail;\n}(_react.Component);\n\nexports.default = Detail;\n\n/***/ }),\n/* 1166 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(1167);\n\nvar _react = __webpack_require__(4);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _app = __webpack_require__(13);\n\nvar _env = __webpack_require__(17);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ProjectIntro = function (_Component) {\n  _inherits(ProjectIntro, _Component);\n\n  function ProjectIntro() {\n    _classCallCheck(this, ProjectIntro);\n\n    return _possibleConstructorReturn(this, (ProjectIntro.__proto__ || Object.getPrototypeOf(ProjectIntro)).apply(this, arguments));\n  }\n\n  _createClass(ProjectIntro, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          img = _props.img,\n          desc = _props.desc,\n          website = _props.website;\n\n      return _react2.default.createElement(\n        \"div\",\n        null,\n        _react2.default.createElement(\n          \"div\",\n          { className: \"project-intro\" },\n          _react2.default.createElement(\n            \"h2\",\n            { className: \"project-intro-title\" },\n            \"\\u9879\\u76EE\\u6982\\u8FF0\"\n          ),\n          _react2.default.createElement(\"img\", { className: \"project-intro-pic\", src: img }),\n          _react2.default.createElement(\n            \"p\",\n            { className: \"project-intro-content\" },\n            desc\n          ),\n          _react2.default.createElement(\n            \"p\",\n            { className: \"project-intro-website\" },\n            \"\\u5B98\\u7F51: \",\n            website\n          )\n        )\n      );\n    }\n  }]);\n\n  return ProjectIntro;\n}(_react.Component);\n\nexports.default = ProjectIntro;\n\n/***/ }),\n/* 1167 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1168);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(7)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 1168 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(6)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".project-intro {\\n  margin-top: 38px;\\n  text-align: left;\\n}\\n.project-intro-title {\\n  margin-bottom: 22px;\\n}\\n.project-intro-pic {\\n  width: 658px;\\n  height: 188px;\\n}\\n.project-intro-content {\\n  margin: 22px 0;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 1169 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(1170);\n\nvar _react = __webpack_require__(4);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _app = __webpack_require__(13);\n\nvar _env = __webpack_require__(17);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IcoPublish = function (_Component) {\n  _inherits(IcoPublish, _Component);\n\n  function IcoPublish() {\n    _classCallCheck(this, IcoPublish);\n\n    return _possibleConstructorReturn(this, (IcoPublish.__proto__ || Object.getPrototypeOf(IcoPublish)).apply(this, arguments));\n  }\n\n  _createClass(IcoPublish, [{\n    key: \"render\",\n    value: function render() {\n      var unit = this.props.unit;\n\n      var info = this.props.ico_assess_issue_info;\n      return _react2.default.createElement(\n        \"div\",\n        null,\n        _react2.default.createElement(\n          \"div\",\n          { className: \"ico-publish\" },\n          _react2.default.createElement(\n            \"h2\",\n            { className: \"ico-publish-title\" },\n            \"ICO\\u53D1\\u884C\\u60C5\\u51B5\"\n          ),\n          _react2.default.createElement(\n            \"table\",\n            null,\n            _react2.default.createElement(\n              \"thead\",\n              null,\n              _react2.default.createElement(\n                \"tr\",\n                null,\n                _react2.default.createElement(\n                  \"th\",\n                  null,\n                  \"\\u4F17\\u7B79\\u65F6\\u95F4\"\n                ),\n                _react2.default.createElement(\n                  \"th\",\n                  null,\n                  \"\\u603B\\u53D1\\u884C\\u91CF\"\n                ),\n                _react2.default.createElement(\n                  \"th\",\n                  null,\n                  \"ICO\\u91CF\"\n                ),\n                _react2.default.createElement(\n                  \"th\",\n                  null,\n                  \"\\u63A5\\u53D7\\u5E01\\u79CD\"\n                ),\n                _react2.default.createElement(\n                  \"th\",\n                  null,\n                  \"\\u4F17\\u7B79\\u91D1\\u989D\"\n                ),\n                _react2.default.createElement(\n                  \"th\",\n                  null,\n                  \"\\u4EF7\\u683C\"\n                )\n              )\n            ),\n            _react2.default.createElement(\n              \"tbody\",\n              null,\n              info && info.map(function (item) {\n                return _react2.default.createElement(\n                  \"tr\",\n                  { key: item.id },\n                  _react2.default.createElement(\n                    \"td\",\n                    null,\n                    item.crowdfunding_start_at.substring(0, 10) + \"-\" + item.crowdfunding_end_at.substring(5, 10)\n                  ),\n                  _react2.default.createElement(\n                    \"td\",\n                    null,\n                    item.ico_circulation / 100000000 + \"\\u4EBF\" + unit\n                  ),\n                  _react2.default.createElement(\n                    \"td\",\n                    null,\n                    item.ico_amount / 100000000 + \"\\u4EBF\" + unit\n                  ),\n                  _react2.default.createElement(\n                    \"td\",\n                    null,\n                    item.ico_accept\n                  ),\n                  _react2.default.createElement(\n                    \"td\",\n                    null,\n                    item.ico_crowfunding_amount / 10000 + \"\\u4E07\" + item.ico_crowfunding_amount_unit + \"\\u7B49\\u503C\"\n                  ),\n                  _react2.default.createElement(\n                    \"td\",\n                    null,\n                    item.ico_price\n                  )\n                );\n              })\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return IcoPublish;\n}(_react.Component);\n\nexports.default = IcoPublish;\n\n/***/ }),\n/* 1170 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1171);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(7)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 1171 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(6)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".ico-publish {\\n  margin-top: 36px;\\n}\\n.ico-publish table {\\n  margin: 0 auto;\\n  border-spacing: 0;\\n  width: 660px;\\n  color: #ffffff;\\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.67);\\n  background: rgba(255, 255, 255, 0.2);\\n}\\n.ico-publish th {\\n  font-weight: 400;\\n}\\n.ico-publish td,\\n.ico-publish th {\\n  height: 38px;\\n  border-spacing: 0;\\n}\\n.ico-publish-title {\\n  margin-bottom: 20px;\\n  text-align: left;\\n}\\n.ico-publish-table {\\n  width: 660px;\\n  height: 102px;\\n  background: rgba(255, 255, 255, 0.2);\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: center;\\n  -webkit-justify-content: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n  -webkit-align-items: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n}\\n.ico-publish-item {\\n  -webkit-box-flex: 1;\\n  -webkit-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n}\\n.ico-publish-item p {\\n  text-align: center !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 1172 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(1173);\n\nvar _react = __webpack_require__(4);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _app = __webpack_require__(13);\n\nvar _env = __webpack_require__(17);\n\nvar _echarts = __webpack_require__(326);\n\nvar _echarts2 = _interopRequireDefault(_echarts);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Strcture = function (_Component) {\n  _inherits(Strcture, _Component);\n\n  function Strcture() {\n    _classCallCheck(this, Strcture);\n\n    return _possibleConstructorReturn(this, (Strcture.__proto__ || Object.getPrototypeOf(Strcture)).apply(this, arguments));\n  }\n\n  _createClass(Strcture, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var strcture = this.refs.strcture;\n      var myChart = _echarts2.default.init(strcture);\n      var strctureData = this.props.ico_assess_structure;\n      var value = [];\n      var theColor = [];\n      strctureData.map(function (item) {\n        value.push({ value: item.percentage });\n        theColor.push(item.color_value);\n      });\n\n      var option = {\n        title: {\n          // text: \"某站点用户访问来源\",\n          // subtext: \"纯属虚构\",\n          //x: \"left\"\n        },\n        // tooltip: {\n        //   trigger: \"item\",\n        //   formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n        // },\n        // legend: {\n        //   orient: \"vertical\",\n        //   left: \"left\",\n        //   data: [\"直接访问\", \"邮件营销\", \"联盟广告\", \"视频广告\", \"搜索引擎\"]\n        // },\n        series: [{\n          //name: \"访问来源\",\n          type: \"pie\",\n          radius: \"85%\",\n          center: [\"40%\", \"50%\"],\n          data: value,\n          color: theColor,\n          labelLine: {\n            normal: {\n              show: false\n            }\n          },\n          itemStyle: {\n            emphasis: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: \"rgba(0, 0, 0, 0.5)\"\n            }\n          }\n        }]\n      };\n      myChart.setOption(option);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ico_assess_structure = this.props.ico_assess_structure;\n\n\n      return _react2.default.createElement(\n        \"div\",\n        { className: \"strcture\" },\n        _react2.default.createElement(\n          \"h2\",\n          null,\n          \"\\u7ED3\\u6784\"\n        ),\n        _react2.default.createElement(\"div\", { className: \"strcture-chart\", ref: \"strcture\" }),\n        _react2.default.createElement(\n          \"div\",\n          { className: \"strcture-detail\" },\n          ico_assess_structure && ico_assess_structure.map(function (item) {\n            return _react2.default.createElement(\n              \"p\",\n              {\n                key: item.id\n              },\n              item.color_name + \" : \" + item.percentage + \"% , \" + item.desc\n            );\n          })\n        )\n      );\n    }\n  }]);\n\n  return Strcture;\n}(_react.Component);\n\nexports.default = Strcture;\n\n/***/ }),\n/* 1173 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1174);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(7)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 1174 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(6)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".strcture {\\n  width: 660px;\\n  height: 160px;\\n  margin-top: 36px;\\n  text-align: left;\\n}\\n.strcture-chart {\\n  display: inline-block;\\n  width: 260px;\\n  height: 160px;\\n  margin-right: 76px;\\n}\\n.strcture-detail {\\n  display: inline-block;\\n  height: 160px;\\n  vertical-align: bottom;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 1175 */,\n/* 1176 */,\n/* 1177 */,\n/* 1178 */,\n/* 1179 */,\n/* 1180 */,\n/* 1181 */,\n/* 1182 */,\n/* 1183 */,\n/* 1184 */,\n/* 1185 */,\n/* 1186 */,\n/* 1187 */,\n/* 1188 */,\n/* 1189 */,\n/* 1190 */,\n/* 1191 */,\n/* 1192 */,\n/* 1193 */,\n/* 1194 */,\n/* 1195 */,\n/* 1196 */,\n/* 1197 */,\n/* 1198 */,\n/* 1199 */,\n/* 1200 */,\n/* 1201 */,\n/* 1202 */,\n/* 1203 */,\n/* 1204 */,\n/* 1205 */,\n/* 1206 */,\n/* 1207 */,\n/* 1208 */,\n/* 1209 */,\n/* 1210 */,\n/* 1211 */,\n/* 1212 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(1213);\n\nvar _react = __webpack_require__(4);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _app = __webpack_require__(13);\n\nvar _env = __webpack_require__(17);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ProjectAnaly = function (_Component) {\n  _inherits(ProjectAnaly, _Component);\n\n  function ProjectAnaly() {\n    _classCallCheck(this, ProjectAnaly);\n\n    return _possibleConstructorReturn(this, (ProjectAnaly.__proto__ || Object.getPrototypeOf(ProjectAnaly)).apply(this, arguments));\n  }\n\n  _createClass(ProjectAnaly, [{\n    key: \"render\",\n    value: function render() {\n      var ico_assess_project_analyse = this.props.ico_assess_project_analyse;\n\n      return _react2.default.createElement(\n        \"div\",\n        { className: \"project-analy\" },\n        _react2.default.createElement(\n          \"h2\",\n          { className: \"project-analy-title\" },\n          \"\\u9879\\u76EE\\u5206\\u6570\\u5206\\u6790\"\n        ),\n        _react2.default.createElement(\n          \"table\",\n          null,\n          _react2.default.createElement(\n            \"thead\",\n            null,\n            _react2.default.createElement(\n              \"tr\",\n              null,\n              _react2.default.createElement(\n                \"th\",\n                null,\n                \"\\u7C7B\\u578B\"\n              ),\n              _react2.default.createElement(\n                \"th\",\n                null,\n                \"\\u8BC4\\u6D4B\\u89C2\\u70B9\"\n              ),\n              _react2.default.createElement(\n                \"th\",\n                { style: { borderRight: 0 } },\n                \"\\u8BC4\\u5206(10\\u5206\\u8BC4\\u6D4B)\"\n              )\n            )\n          ),\n          _react2.default.createElement(\n            \"tbody\",\n            null,\n            ico_assess_project_analyse && ico_assess_project_analyse.map(function (item) {\n              return _react2.default.createElement(\n                \"tr\",\n                { key: item.id },\n                _react2.default.createElement(\n                  \"td\",\n                  null,\n                  item.name\n                ),\n                _react2.default.createElement(\n                  \"td\",\n                  null,\n                  item.desc\n                ),\n                _react2.default.createElement(\n                  \"td\",\n                  { style: { borderRight: 0 } },\n                  item.score\n                )\n              );\n            })\n          )\n        ),\n        _react2.default.createElement(\n          \"p\",\n          { className: \"analy-remind\" },\n          \"\\u6CE8\\uFF1A\\u5206\\u6570\\u7531\\u9879\\u76EE\\u767D\\u76AE\\u4E66\\u4EE5\\u53CA\\u6574\\u4F53\\u89C4\\u5212\\u8BC4\\u4F30\\u800C\\u5F97\\u51FA\\uFF0C\\u53EA\\u505A\\u6295\\u8D44\\u53C2\\u8003\\u3002\"\n        )\n      );\n    }\n  }]);\n\n  return ProjectAnaly;\n}(_react.Component);\n\nexports.default = ProjectAnaly;\n\n/***/ }),\n/* 1213 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1214);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(7)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 1214 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(6)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".project-analy {\\n  margin-top: 36px;\\n}\\n.project-analy table {\\n  margin: 0 auto;\\n  border: 1px solid #e6e6e6;\\n  border-spacing: 0;\\n  width: 660px;\\n  height: 173px;\\n  color: #333333;\\n  background: #fff;\\n  box-shadow: 0px 1px 2px rgba(4, 0, 0, 0.45);\\n}\\n.project-analy td,\\n.project-analy th {\\n  height: 38px;\\n  border-bottom: 1px solid #e6e6e6;\\n  border-right: 1px solid #e6e6e6;\\n  border-spacing: 0;\\n}\\n.project-analy .analy-remind {\\n  margin-top: 14px;\\n}\\n.project-analy-title {\\n  margin-bottom: 24px;\\n  text-align: left;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 1215 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1216);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(7)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 1216 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(6)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".detail-box {\\n  width: 820px;\\n  margin: 0 auto;\\n  box-sizing: border-box;\\n}\\n.detail-box h1,\\n.detail-box h2 {\\n  font-weight: 400;\\n}\\n.detail-box .introduce-text {\\n  width: 660px;\\n}\\n.detail {\\n  background: #1b96d1;\\n  box-sizing: border-box;\\n  padding: 30px 80px;\\n  color: #fff;\\n}\\n.detail .detail-title {\\n  font-size: 20px;\\n}\\n.detail .detail-time {\\n  font-size: 14px;\\n  margin: 20px 0;\\n}\\n.detail .detail-box1 {\\n  background: rgba(255, 255, 255, 0.2);\\n  text-align: left;\\n  box-sizing: border-box;\\n  padding: 20px 0;\\n  box-shadow: 0px 1px 2px rgba(4, 0, 0, 0.45);\\n}\\n.detail .detail-box1 .box1-left {\\n  width: 180px;\\n  display: inline-block;\\n  vertical-align: middle;\\n  height: 90px;\\n  text-align: center;\\n  padding-top: 5px;\\n  border-right: 1px solid #fff;\\n}\\n.detail .detail-box1 .circle {\\n  background: #fff;\\n  width: 60px;\\n  height: 60px;\\n  border-radius: 50%;\\n  overflow: hidden;\\n  text-align: center;\\n  line-height: 60px;\\n  color: #ff3232;\\n  font-size: 20px;\\n  display: inline-block;\\n}\\n.detail .detail-box1 .state {\\n  margin-top: 10px;\\n}\\n.detail .detail-box1 .box1-middle {\\n  width: 290px;\\n  display: inline-block;\\n  vertical-align: middle;\\n  height: 90px;\\n  line-height: 45px;\\n  box-sizing: border-box;\\n}\\n.detail .detail-box1 .box1-middle .risk-level {\\n  text-align: center;\\n}\\n.detail .detail-box1 .box1-middle .risk-level-color1,\\n.detail .detail-box1 .box1-middle .risk-level-color2 {\\n  display: inline-block;\\n  width: 20px;\\n  height: 20px;\\n}\\n.detail .detail-box1 .box1-right {\\n  width: 180px;\\n  display: inline-block;\\n  vertical-align: middle;\\n  height: 90px;\\n  text-align: center;\\n}\\n.detail .detail-box1 .box1-right .right-item {\\n  display: inline-block;\\n  padding: 5px 8px;\\n  border-radius: 15px;\\n  border: 1px solid #fff;\\n  margin: 5px 0;\\n}\\n.detail .remind {\\n  margin-top: 24px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ })\n],[1159]);\n\n\n// WEBPACK FOOTER //\n// assets/js/evaluating/index.6fab2f806.js","var zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.3';\nvar dependencies = {\n  zrender: '3.7.2'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$inject.createCanvas(creator);\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // --------\n// Exports\n// --------\n\nvar registerMap;\nvar getMap;\nvar parseGeoJSON;\nvar dataTool; // FIXME\n\nvar $inject = {\n  registerMap: function (f) {\n    registerMap = f;\n    exports.registerMap = f; \n  },\n  getMap: function (f) {\n    getMap = f;\n    exports.getMap = f; \n  },\n  parseGeoJSON: function (f) {\n    parseGeoJSON = f;\n    exports.parseGeoJSON = f; \n  },\n  dataTool: function (f) {\n    dataTool = f;\n    exports.dataTool = f; \n  }\n};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.parseGeoJSON = parseGeoJSON;\nexports.dataTool = dataTool;\nexports.$inject = $inject;var ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/echarts.js\n// module id = 1\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/layout.js\n// module id = 9\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Component.js\n// module id = 14\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Series.js\n// module id = 16\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Chart.js\n// module id = 41\n// module chunks = 0 1","var features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/featureManager.js\n// module id = 42\n// module chunks = 0 1","function _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/symbol.js\n// module id = 51\n// module chunks = 0 1","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisBuilder.js\n// module id = 52\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisView.js\n// module id = 53\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/VisualMapping.js\n// module id = 54\n// module chunks = 0 1","var _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/lang.js\n// module id = 63\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 76\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/gridSimple.js\n// module id = 77\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction retrieveTargetInfo(payload, seriesModel) {\n  if (payload && (payload.type === 'treemapZoomToNode' || payload.type === 'treemapRootToNode')) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/helper.js\n// module id = 78\n// module chunks = 0 1","/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/sliderMove.js\n// module id = 79\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer.js\n// module id = 80\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 81\n// module chunks = 0 1","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 82\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Symbol.js\n// module id = 98\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCreator.js\n// module id = 99\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 100\n// module chunks = 0 1","function _default(seriesType, ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType(seriesType, function (series) {\n    var data = series.getData();\n    data.filterSelf(function (idx) {\n      var name = data.getName(idx); // If in any legend component the status is not selected.\n\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }, this);\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataFilter.js\n// module id = 101\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar mapDataStores = {};\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = mapDataStores[name];\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = mapDataStores[mapType];\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * @param {string} mapName\n   * @param {Object|string} geoJson\n   * @param {Object} [specialAreas]\n   *\n   * @example\n   *     $.get('USA.json', function (geoJson) {\n   *         echarts.registerMap('USA', geoJson);\n   *         // Or\n   *         echarts.registerMap('USA', {\n   *             geoJson: geoJson,\n   *             specialAreas: {}\n   *         })\n   *     });\n   */\n  registerMap: function (mapName, geoJson, specialAreas) {\n    if (geoJson.geoJson && !geoJson.features) {\n      specialAreas = geoJson.specialAreas;\n      geoJson = geoJson.geoJson;\n    }\n\n    if (typeof geoJson === 'string') {\n      geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n    }\n\n    mapDataStores[mapName] = {\n      geoJson: geoJson,\n      specialAreas: specialAreas\n    };\n  },\n\n  /**\n   * @param {string} mapName\n   * @return {Object}\n   */\n  getMap: function (mapName) {\n    return mapDataStores[mapName];\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = geoCreator.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n}; // Inject methods into echarts\n\necharts.$inject.registerMap(geoCreator.registerMap);\necharts.$inject.getMap(geoCreator.getMap);\necharts.$inject.parseGeoJSON(parseGeoJson);\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/geoCreator.js\n// module id = 102\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/RoamController.js\n// module id = 103\n// module chunks = 0 1","var List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar WhiskerBoxDraw = require(\"../helper/WhiskerBoxDraw\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var categories;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      categories = xAxisModel.getCategories();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      categories = yAxisModel.getCategories();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var data = option.data;\n    addOrdinal && zrUtil.each(data, function (item, index) {\n      if (item.value && zrUtil.isArray(item.value)) {\n        item.value.unshift(index);\n      } else {\n        zrUtil.isArray(item) && item.unshift(index);\n      }\n    });\n    var defaultValueDimensions = this.defaultValueDimensions;\n    var dimensions = [{\n      name: baseAxisDim,\n      otherDims: {\n        tooltip: false\n      },\n      dimsDef: ['base']\n    }, {\n      name: otherAxisDim,\n      dimsDef: defaultValueDimensions.slice()\n    }];\n    dimensions = completeDimensions(dimensions, data, {\n      encodeDef: this.get('encode'),\n      dimsDef: this.get('dimensions'),\n      // Consider empty data entry.\n      dimCount: defaultValueDimensions.length + 1\n    });\n    var list = new List(dimensions, this);\n    list.initData(data, categories ? categories.slice() : null);\n    return list;\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nvar viewMixin = {\n  init: function () {\n    /**\n     * Old data.\n     * @private\n     * @type {module:echarts/chart/helper/WhiskerBoxDraw}\n     */\n    var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(this.getStyleUpdater());\n    this.group.add(whiskerBoxDraw.group);\n  },\n  render: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.updateData(seriesModel.getData());\n  },\n  remove: function (ecModel) {\n    this._whiskerBoxDraw.remove();\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;\nexports.viewMixin = viewMixin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js\n// module id = 104\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 105\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem, true);\n  } else {\n    data.each([dimension], eachItem, true);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/visualSolution.js\n// module id = 106\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/component.js\n// module id = 127\n// module chunks = 0 1","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Component.js\n// module id = 128\n// module chunks = 0 1","function _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/layout/points.js\n// module id = 129\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Grid.js\n// module id = 130\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/layout/barGrid.js\n// module id = 131\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  updateSelectedMap: function (targetList) {\n    this._targetList = targetList.slice();\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/selectableMixin.js\n// module id = 132\n// module chunks = 0 1","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType, ecModel) {\n  // Pie and funnel may use diferrent scope\n  var paletteScope = {};\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var dataAll = seriesModel.getRawData();\n    var idxMap = {};\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/dataColor.js\n// module id = 133\n// module chunks = 0 1","var IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/cursorHelper.js\n// module id = 134\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\n\n\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n/**\n * @param {module:echarts/data/List} lineData\n */\n\nlineDrawProto.updateData = function (lineData) {\n  var oldLineData = this._lineData;\n  var group = this.group;\n  var LineCtor = this._ctor;\n  var hostModel = lineData.hostModel;\n  var seriesScope = {\n    lineStyle: hostModel.getModel('lineStyle.normal').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('lineStyle.emphasis').getLineStyle(),\n    labelModel: hostModel.getModel('label.normal'),\n    hoverLabelModel: hostModel.getModel('label.emphasis')\n  };\n  lineData.diff(oldLineData).add(function (idx) {\n    if (!lineNeedsDraw(lineData.getItemLayout(idx))) {\n      return;\n    }\n\n    var lineGroup = new LineCtor(lineData, idx, seriesScope);\n    lineData.setItemGraphicEl(idx, lineGroup);\n    group.add(lineGroup);\n  }).update(function (newIdx, oldIdx) {\n    var lineGroup = oldLineData.getItemGraphicEl(oldIdx);\n\n    if (!lineNeedsDraw(lineData.getItemLayout(newIdx))) {\n      group.remove(lineGroup);\n      return;\n    }\n\n    if (!lineGroup) {\n      lineGroup = new LineCtor(lineData, newIdx, seriesScope);\n    } else {\n      lineGroup.updateData(lineData, newIdx, seriesScope);\n    }\n\n    lineData.setItemGraphicEl(newIdx, lineGroup);\n    group.add(lineGroup);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n  this._lineData = lineData;\n};\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData;\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LineDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/LineDraw.js\n// module id = 135\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n    hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n    labelModel = itemModel.getModel('label.normal');\n    hoverLabelModel = itemModel.getModel('label.emphasis');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var defaultText;\n  var normalText;\n  var emphasisText;\n\n  if (showLabel || hoverShowLabel) {\n    var rawVal = seriesModel.getRawValue(idx);\n    defaultText = rawVal == null ? defaultText = lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    defaultLabelColor = visualColor || '#000';\n    normalText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType), defaultText);\n    emphasisText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), normalText);\n  } // label.afterUpdate = lineAfterUpdate;\n\n\n  if (showLabel) {\n    var labelStyle = graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  } else {\n    label.setStyle('text', null);\n  }\n\n  if (hoverShowLabel) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Line.js\n// module id = 136\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushController.js\n// module id = 137\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 138\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./PolarModel\");\n\n// TODO Axis scale\n// 依赖 PolarModel 做预处理\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      radiusAxis.scale.unionExtentFromData(data, 'radius');\n      angleAxis.scale.unionExtentFromData(data, 'angle');\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/polarCreator.js\n// module id = 139\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/helper.js\n// module id = 140\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt.label, ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, modelUtil.dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkerModel.js\n// module id = 141\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n}\n\nfunction getPrecision(data, valueAxisDim, dataIndex) {\n  var precision = -1;\n\n  do {\n    precision = Math.max(numberUtil.getPrecision(data.get(valueAxisDim, dataIndex)), precision);\n    data = data.stackedOn;\n  } while (data);\n\n  return precision;\n}\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var value = numCalculate(data, targetDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(targetDataDim, value, true)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex, true);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex, true);\n  var precision = getPrecision(data, targetDataDim, dataIndex);\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          var dataDim = seriesModel.coordDimToDataDim(dims[i])[0];\n          coord[i] = numCalculate(data, dataDim, coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(seriesModel.dataDimToCoordDim(ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n    ret.valueDataDim = seriesModel.coordDimToDataDim(ret.valueAxis.dim)[0];\n  }\n\n  return ret;\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    }, true);\n    return sum / count;\n  } else {\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/markerHelper.js\n// module id = 142\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkerView.js\n// module id = 143\n// module chunks = 0 1","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale);\n    attr(svgEl, 'paint-order', 'stroke');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive % PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  text != null && (text += '');\n\n  if (!text) {\n    return;\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    }\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/graphic.js\n// module id = 144\n// module chunks = 0 1","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/core.js\n// module id = 145\n// module chunks = 0 1","var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/colorPalette.js\n// module id = 176\n// module chunks = 0 1","var _model = require(\"../../util/model\");\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/labelHelper.js\n// module id = 178\n// module chunks = 0 1","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/poly.js\n// module id = 179\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 180\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisDefault.js\n// module id = 181\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 182\n// module chunks = 0 1","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 183\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/helper.js\n// module id = 184\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/createDataSelectAction.js\n// module id = 185\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 186\n// module chunks = 0 1","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/Region.js\n// module id = 187\n// module chunks = 0 1","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/polygon.js\n// module id = 188\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransform = new TransformDummy();\n  this._viewTransform = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var viewTransform = this._viewTransform;\n    viewTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    viewTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransform;\n  },\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var viewTransformMatrix = this._viewTransform.getLocalTransform();\n\n    var roamTransform = this._roamTransform;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, viewTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, viewTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransform = this._roamTransform;\n    var viewTransform = this._viewTransform;\n    viewTransform.parent = roamTransform;\n    roamTransform.updateTransform();\n    viewTransform.updateTransform();\n    viewTransform.transform && matrix.copy(this.transform || (this.transform = []), viewTransform.transform);\n\n    if (this.transform) {\n      this.invTransform = this.invTransform || [];\n      matrix.invert(this.invTransform, this.transform);\n    } else {\n      this.invTransform = null;\n    }\n\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data) {\n    var transform = this.transform;\n    return transform ? v2ApplyTransform([], data, transform) : [data[0], data[1]];\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/View.js\n// module id = 189\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle', 'normal'];\n    var hoverItemStyleAccessPath = ['itemStyle', 'emphasis'];\n    var labelAccessPath = ['label', 'normal'];\n    var hoverLabelAccessPath = ['label', 'emphasis'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get('value', dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/MapDraw.js\n// module id = 190\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/interactionMutex.js\n// module id = 191\n// module chunks = 0 1","/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/roamHelper.js\n// module id = 192\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateLayout'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/geoRoam.js\n// module id = 193\n// module chunks = 0 1","/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/roamHelper.js\n// module id = 194\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar List = require(\"./List\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar completeDimensions = require(\"./helper/completeDimensions\");\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensions = completeDimensions([{\n    name: 'value'\n  }], listData, {\n    dimCount: dimMax\n  });\n  var list = new List(dimensions, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/Tree.js\n// module id = 195\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/linkList.js\n// module id = 196\n// module chunks = 0 1","var layout = require(\"../../util/layout\");\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/layoutHelper.js\n// module id = 197\n// module chunks = 0 1","var _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\nfunction _default(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n  init(virtualRoot);\n  eachAfter(realRoot, firstWalk, separation);\n  virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n  eachBefore(realRoot, secondWalk);\n  var left = realRoot;\n  var right = realRoot;\n  var bottom = realRoot;\n  eachBefore(realRoot, function (node) {\n    var x = node.getLayout().x;\n\n    if (x < left.getLayout().x) {\n      left = node;\n    }\n\n    if (x > right.getLayout().x) {\n      right = node;\n    }\n\n    if (node.depth > bottom.depth) {\n      bottom = node;\n    }\n  });\n  var delta = left === right ? 1 : separation(left, right) / 2;\n  var tx = delta - left.getLayout().x;\n  var kx = 0;\n  var ky = 0;\n  var coorX = 0;\n  var coorY = 0;\n\n  if (layout === 'radial') {\n    kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n    ky = height / (bottom.depth - 1 || 1);\n    eachBefore(realRoot, function (node) {\n      coorX = (node.getLayout().x + tx) * kx;\n      coorY = (node.depth - 1) * ky;\n      var finalCoor = radialCoordinate(coorX, coorY);\n      node.setLayout({\n        x: finalCoor.x,\n        y: finalCoor.y,\n        rawX: coorX,\n        rawY: coorY\n      }, true);\n    });\n  } else {\n    if (seriesModel.get('orient') === 'horizontal') {\n      ky = height / (right.getLayout().x + delta + tx);\n      kx = width / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorY = (node.getLayout().x + tx) * ky;\n        coorX = (node.depth - 1) * kx;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    } else {\n      kx = width / (right.getLayout().x + delta + tx);\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/commonLayout.js\n// module id = 198\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\nfunction _default(nodes, edges, hostModel, directed, beforeLink) {\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = hostModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, hostModel, hostModel.ecModel);\n  } else {\n    // FIXME\n    var coordSysCtor = CoordinateSystem.get(coordSys); // FIXME\n\n    var dimensionNames = completeDimensions((coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []).concat(['value']), nodes);\n    nodeData = new List(dimensionNames, hostModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], hostModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js\n// module id = 199\n// module chunks = 0 1","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.normal.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js\n// module id = 200\n// module chunks = 0 1","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.normal.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js\n// module id = 201\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/parallel.js\n// module id = 202\n// module chunks = 0 1","var Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/parallelCreator.js\n// module id = 203\n// module chunks = 0 1","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/brushHelper.js\n// module id = 204\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/array/nest.js\n// module id = 205\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/EffectLine.js\n// module id = 206\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n    hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Polyline.js\n// module id = 207\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\necharts.extendComponentView({\n  type: 'single'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/singleAxis.js\n// module id = 208\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.labelInterval = axis.getLabelInterval();\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/singleAxisHelper.js\n// module id = 209\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 210\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/globalListener.js\n// module id = 211\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 212\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 213\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 214\n// module chunks = 0 1","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/listComponent.js\n// module id = 215\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushTargetManager.js\n// module id = 216\n// module chunks = 0 1","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 217\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 218\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 219\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/preprocessor.js\n// module id = 220\n// module chunks = 0 1","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/typeDefaulter.js\n// module id = 221\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\necharts.registerVisual(echarts.PRIORITY.VISUAL.COMPONENT, function (ecModel) {\n  ecModel.eachComponent('visualMap', function (visualMapModel) {\n    processSingleVisualMap(visualMapModel, ecModel);\n  });\n  prepareVisualMeta(ecModel);\n});\n\nfunction processSingleVisualMap(visualMapModel, ecModel) {\n  visualMapModel.eachTargetSeries(function (seriesModel) {\n    var data = seriesModel.getData();\n    visualSolution.applyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, data, visualMapModel.getValueState, visualMapModel, visualMapModel.getDataDimension(data));\n  });\n} // Only support color.\n\n\nfunction prepareVisualMeta(ecModel) {\n  ecModel.eachSeries(function (seriesModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        visualMeta.dimension = visualMapModel.getDataDimension(data);\n        visualMetaList.push(visualMeta);\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  });\n} // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/visualEncoding.js\n// module id = 222\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar DEFAULT_COLOR = ['#f6efa6', '#d88273', '#bf444c'];\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    return optDim != null ? optDim : list.dimensions.length - 1;\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: DEFAULT_COLOR\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/VisualMapModel.js\n// module id = 223\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/visualDefault.js\n// module id = 224\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/VisualMapView.js\n// module id = 225\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/helper.js\n// module id = 226\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/visualMapAction.js\n// module id = 227\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/history.js\n// module id = 228\n// module chunks = 0 1","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\nvar createNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    createNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    createNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/vml/core.js\n// module id = 229\n// module chunks = 0 1","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(svgRoot, tagNames, markLabel) {\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element._dom && defs.contains(element._dom)) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element._dom = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n  defs.removeChild(element._dom);\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/helper/Definable.js\n// module id = 230\n// module chunks = 0 1","var _echarts = require(\"./lib/echarts\");\n\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/index.js\n// module id = 326\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMinin = require(\"./mixin/colorPalette\");\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Global.js\n// module id = 329\n// module chunks = 0 1","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/boxLayout.js\n// module id = 335\n// module chunks = 0 1","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/globalDefault.js\n// module id = 336\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/ExtensionAPI.js\n// module id = 337\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/OptionManager.js\n// module id = 338\n// module chunks = 0 1","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/backwardCompat.js\n// module id = 339\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 340\n// module chunks = 0 1","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/seriesColor.js\n// module id = 341\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/loading/default.js\n// module id = 342\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line.js\n// module id = 343\n// module chunks = 0 1","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/LineSeries.js\n// module id = 344\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/LineView.js\n// module id = 345\n// module chunks = 0 1","// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 346\n// module chunks = 0 1","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataSample.js\n// module id = 347\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 348\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 349\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 350\n// module chunks = 0 1","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/GridModel.js\n// module id = 351\n// module chunks = 0 1","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis.js\n// module id = 352\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 353\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barLayoutGrid = require(\"../layout/barGrid\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar.js\n// module id = 354\n// module chunks = 0 1","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/BarSeries.js\n// module id = 355\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/BarView.js\n// module id = 356\n// module chunks = 0 1","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/barItemStyle.js\n// module id = 357\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(zrUtil.curry(dataColor, 'pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'pie'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie.js\n// module id = 358\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(option.data);\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this.option.data);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each('value', function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      normal: {\n        // If rotate around circle\n        rotate: false,\n        show: true,\n        // 'outer', 'inside', 'center'\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n        // 默认使用全局文本样式，详见TEXTSTYLE\n        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n      },\n      emphasis: {}\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      normal: {\n        show: true,\n        // 引导线两段中的第一段长度\n        length: 15,\n        // 引导线两段中的第二段长度\n        length2: 15,\n        smooth: false,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1\n      },\n      emphasis: {}\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut',\n    data: []\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieSeries.js\n// module id = 359\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle()));\n  sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), itemModel.get('selected'), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieView.js\n// module id = 360\n// module chunks = 0 1","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var data = seriesModel.getData();\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each('value', function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum('value'); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent('value');\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each('value', function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }, true); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/pieLayout.js\n// module id = 361\n// module chunks = 0 1","var textContain = require(\"zrender/lib/contain/text\");\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/labelLayout.js\n// module id = 362\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'scatter', 'circle', null));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'scatter'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/scatter.js\n// module id = 363\n// module chunks = 0 1","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // normal: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    //     }\n    // },\n    itemStyle: {\n      normal: {\n        opacity: 0.8 // color: 各异\n\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/scatter/ScatterSeries.js\n// module id = 364\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\necharts.extendChartView({\n  type: 'scatter',\n  init: function () {\n    this._normalSymbolDraw = new SymbolDraw();\n    this._largeSymbolDraw = new LargeSymbolDraw();\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var largeSymbolDraw = this._largeSymbolDraw;\n    var normalSymbolDraw = this._normalSymbolDraw;\n    var group = this.group;\n    var symbolDraw = seriesModel.get('large') && data.count() > seriesModel.get('largeThreshold') ? largeSymbolDraw : normalSymbolDraw;\n    this._symbolDraw = symbolDraw;\n    symbolDraw.updateData(data);\n    group.add(symbolDraw.group);\n    group.remove(symbolDraw === largeSymbolDraw ? normalSymbolDraw.group : largeSymbolDraw.group);\n  },\n  updateLayout: function (seriesModel) {\n    this._symbolDraw.updateLayout(seriesModel);\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api, true);\n  },\n  dispose: function () {}\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/scatter/ScatterView.js\n// module id = 365\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n// TODO Batch by color\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null,\n    sizes: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var sizes = shape.sizes;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (isNaN(pt[0]) || isNaN(pt[1])) {\n        continue;\n      }\n\n      var size = sizes[i];\n\n      if (size[0] < 4) {\n        // Optimize for small symbol\n        path.rect(pt[0] - size[0] / 2, pt[1] - size[1] / 2, size[0], size[1]);\n      } else {\n        symbolProxyShape.x = pt[0] - size[0] / 2;\n        symbolProxyShape.y = pt[1] - size[1] / 2;\n        symbolProxyShape.width = size[0];\n        symbolProxyShape.height = size[1];\n        symbolProxy.buildPath(path, symbolProxyShape, true);\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var points = shape.points;\n    var sizes = shape.sizes; // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var i = points.length - 1; i >= 0; i--) {\n      var pt = points[i];\n      var size = sizes[i];\n      var x0 = pt[0] - size[0] / 2;\n      var y0 = pt[1] - size[1] / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + size[0] && y <= y0 + size[1]) {\n        // i is dataIndex\n        return i;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n  this._symbolEl = new LargeSymbolPath({// rectHover: true,\n    // cursor: 'default'\n  });\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = this._symbolEl;\n  var seriesModel = data.hostModel;\n  symbolEl.setShape({\n    points: data.mapArray(data.getItemLayout),\n    sizes: data.mapArray(function (idx) {\n      var size = data.getItemVisual(idx, 'symbolSize');\n\n      if (!(size instanceof Array)) {\n        size = [size, size];\n      }\n\n      return size;\n    })\n  }); // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  symbolEl.useStyle(seriesModel.getModel('itemStyle.normal').getItemStyle(['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  } // Enable tooltip\n  // PENDING May have performance issue when path is extremely large\n\n\n  symbolEl.seriesIndex = seriesModel.seriesIndex;\n  symbolEl.on('mousemove', function (e) {\n    symbolEl.dataIndex = null;\n    var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n    if (dataIndex >= 0) {\n      // Provide dataIndex for tooltip\n      symbolEl.dataIndex = dataIndex;\n    }\n  }); // Add back\n\n  this.group.add(symbolEl);\n};\n\nlargeSymbolProto.updateLayout = function (seriesModel) {\n  var data = seriesModel.getData();\n\n  this._symbolEl.setShape({\n    points: data.mapArray(data.getItemLayout)\n  });\n};\n\nlargeSymbolProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js\n// module id = 366\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n// Must use radar component\necharts.registerVisual(zrUtil.curry(dataColor, 'radar'));\necharts.registerVisual(zrUtil.curry(visualSymbol, 'radar', 'circle', null));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'radar'));\necharts.registerPreprocessor(backwardCompat);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar.js\n// module id = 367\n// module chunks = 0 1","require(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/radar.js\n// module id = 368\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, indicatorAxis.dim);\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/radar/Radar.js\n// module id = 369\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/radar/IndicatorAxis.js\n// module id = 370\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/radar/RadarModel.js\n// module id = 371\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i]\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i],\n              r: ticksRadius[i + 1]\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/radar/RadarView.js\n// module id = 372\n// module chunks = 0 1","var SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var data = option.data || [];\n    var dimensions = completeDimensions([], data, {\n      extraPrefix: 'indicator_',\n      extraFromZero: true\n    });\n    var list = new List(dimensions, this);\n    list.initData(data);\n    return list;\n  },\n  formatTooltip: function (dataIndex) {\n    var value = this.getRawValue(dataIndex);\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      return encodeHTML(axis.name + ' : ' + value[idx]);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar/RadarSeries.js\n// module id = 373\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle.normal').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle.normal');\n      var hoverAreaStyleModel = itemModel.getModel('areaStyle.emphasis');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar/RadarView.js\n// module id = 374\n// module chunks = 0 1","function _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n      var dim = data.dimensions[i];\n      data.each(dim, pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar/radarLayout.js\n// module id = 375\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/radar/backwardCompat.js\n// module id = 376\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map.js\n// module id = 377\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    this._fillOption(option, this.getMapType()); // this.option = option;\n\n\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(option.data);\n  },\n  getInitialData: function (option) {\n    var dimensions = completeDimensions(['value'], option.data || []);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  mergeOption: function (newOption) {\n    this._fillOption(newOption, this.getMapType());\n\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this.option.data);\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {\n    // Shallow clone\n    // option = zrUtil.extend({}, option);\n    option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap); // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    return this.getData().get('value', dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n\n      if (!isNaN(seriesGroup[i].originalData.get('value', otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      normal: {\n        show: false,\n        color: '#000'\n      },\n      emphasis: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      }\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderWidth: 0.5,\n        borderColor: '#444',\n        areaColor: '#eee'\n      },\n      // 也是选中样式\n      emphasis: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/MapSeries.js\n// module id = 378\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar View = require(\"../View\");\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var viewTransform = this._viewTransform;\n    viewTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    viewTransform.decomposeTransform();\n    var scale = viewTransform.scale;\n    scale[1] = -scale[1];\n    viewTransform.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/Geo.js\n// module id = 379\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/fix/nanhai.js\n// module id = 380\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/fix/textCoord.js\n// module id = 381\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/fix/geoCoord.js\n// module id = 382\n// module chunks = 0 1","// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js\n// module id = 383\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each('value', function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/MapView.js\n// module id = 384\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each('value', function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/mapSymbolLayout.js\n// module id = 385\n// module chunks = 0 1","function _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle.normal');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/mapVisual.js\n// module id = 386\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  var dims = ['value'];\n  zrUtil.each(datas, function (data) {\n    data.each(dims, function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(dims, function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/mapDataStatistic.js\n// module id = 387\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/map/backwardCompat.js\n// module id = 388\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar orthogonalLayout = require(\"./tree/orthogonalLayout\");\n\nvar radialLayout = require(\"./tree/radialLayout\");\n\necharts.registerVisual(zrUtil.curry(visualSymbol, 'tree', 'circle', null));\necharts.registerLayout(orthogonalLayout);\necharts.registerLayout(radialLayout);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree.js\n// module id = 389\n// module chunks = 0 1","var SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex);\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // the orient of orthoginal layout, can be setted to 'horizontal' or 'vertical'\n    orient: 'horizontal',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      normal: {\n        color: '#ccc',\n        width: 1.5,\n        curveness: 0.5\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: 'lightsteelblue',\n        borderColor: '#c23531',\n        borderWidth: 1.5\n      }\n    },\n    label: {\n      normal: {\n        show: true,\n        color: '#555'\n      }\n    },\n    leaves: {\n      label: {\n        normal: {\n          show: true\n        }\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/TreeSeries.js\n// module id = 390\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.get('orient'),\n      curvature: seriesModel.get('lineStyle.normal.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      removeNode(data, oldIdx, symbolEl, group, seriesModel, seriesScope);\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label.normal');\n  seriesScope.hoverLabelModel = itemModel.getModel('label.emphasis');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'horizontal') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'vertical') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/TreeView.js\n// module id = 391\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/treeAction.js\n// module id = 392\n// module chunks = 0 1","var commonLayout = require(\"./commonLayout\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/orthogonalLayout.js\n// module id = 393\n// module chunks = 0 1","/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/traversalHelper.js\n// module id = 394\n// module chunks = 0 1","var commonLayout = require(\"./commonLayout\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/tree/radialLayout.js\n// module id = 395\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap.js\n// module id = 396\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _helper = require(\"./helper\");\n\nvar wrapTreePathInfo = _helper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        normal: {\n          color: 'rgba(0,0,0,0.7)',\n          //'#5793f3',\n          borderColor: 'rgba(255,255,255,0.7)',\n          borderWidth: 1,\n          shadowColor: 'rgba(150,150,150,1)',\n          shadowBlur: 3,\n          shadowOffsetX: 0,\n          shadowOffsetY: 0,\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        emphasis: {\n          textStyle: {}\n        }\n      }\n    },\n    label: {\n      normal: {\n        show: true,\n        // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n        distance: 0,\n        padding: 5,\n        position: 'inside',\n        // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n        // formatter: null,\n        color: '#fff',\n        ellipsis: true // align\n        // verticalAlign\n\n      }\n    },\n    upperLabel: {\n      // Label when node is parent.\n      normal: {\n        show: false,\n        position: [0, '50%'],\n        height: 20,\n        // formatter: null,\n        color: '#fff',\n        ellipsis: true,\n        // align: null,\n        verticalAlign: 'middle'\n      },\n      emphasis: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: null,\n        // Can be 'none' if not necessary.\n        colorAlpha: null,\n        // Can be 'none' if not necessary.\n        colorSaturation: null,\n        // Can be 'none' if not necessary.\n        borderWidth: 0,\n        gapWidth: 0,\n        borderColor: '#fff',\n        borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n        // border color is evaluated by color of current node and\n        // borderColorSaturation.\n\n      },\n      emphasis: {}\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.normal.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/TreemapSeries.js\n// module id = 397\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"./helper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label', 'normal'];\nvar PATH_LABEL_EMPHASIS = ['label', 'emphasis'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel', 'normal'];\nvar PATH_UPPERLABEL_EMPHASIS = ['upperLabel', 'emphasis'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var targetInfo = helper.retrieveTargetInfo(payload, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle.normal');\n  var itemStyleEmphasisModel = thisNode.getModel('itemStyle.emphasis'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/TreemapView.js\n// module id = 398\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _helper = require(\"./helper\");\n\nvar wrapTreePathInfo = _helper.wrapTreePathInfo;\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle.normal'); // var emphasisStyleModel = model.getModel('itemStyle.emphasis');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/Breadcrumb.js\n// module id = 399\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/animation.js\n// module id = 400\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"./helper\");\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/treemapAction.js\n// module id = 401\n// module chunks = 0 1","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle.normal';\n\nfunction _default(ecModel, api, payload) {\n  var condition = {\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  };\n  ecModel.eachComponent(condition, function (seriesModel) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  });\n}\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/treemapVisual.js\n// module id = 402\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'normal', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'normal', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'normal', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'normal', 'height'];\n/**\n * @public\n */\n\nfunction _default(ecModel, api, payload) {\n  // Layout result in each node:\n  // {x, y, width, height, area, borderWidth}\n  var condition = {\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  };\n  ecModel.eachComponent(condition, function (seriesModel) {\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var targetInfo = helper.retrieveTargetInfo(payload, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  });\n}\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/treemap/treemapLayout.js\n// module id = 403\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(zrUtil.curry(visualSymbol, 'graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph.js\n// module id = 404\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option.edgeLabel, ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      normal: {\n        position: 'middle'\n      },\n      emphasis: {}\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      normal: {\n        show: false,\n        formatter: '{b}'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {},\n      emphasis: {}\n    },\n    lineStyle: {\n      normal: {\n        color: '#aaa',\n        width: 1,\n        curveness: 0,\n        opacity: 0.5\n      },\n      emphasis: {}\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/GraphSeries.js\n// module id = 405\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!(n1 instanceof Node)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!(n2 instanceof Node)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (n1 instanceof Node) {\n    n1 = n1.id;\n  }\n\n  if (n2 instanceof Node) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!(startNode instanceof Node)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nvar _default = Graph;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/Graph.js\n// module id = 406\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\nvar nodeOpacityPath = ['itemStyle', 'normal', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/GraphView.js\n// module id = 407\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/LinePath.js\n// module id = 408\n// module chunks = 0 1","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/adjustEdge.js\n// module id = 409\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/graphAction.js\n// module id = 410\n// module chunks = 0 1","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/categoryFilter.js\n// module id = 411\n// module chunks = 0 1","function _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/categoryVisual.js\n// module id = 412\n// module chunks = 0 1","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.normal.color'.split('.');\n    var opacityQuery = 'lineStyle.normal.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/edgeVisual.js\n// module id = 413\n// module chunks = 0 1","var _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = coordSys.dimensions;\n      data.each(dimensions, function () {\n        var hasValue;\n        var args = arguments;\n        var value = [];\n\n        for (var i = 0; i < dimensions.length; i++) {\n          if (!isNaN(args[i])) {\n            hasValue = true;\n          }\n\n          value.push(args[i]);\n        }\n\n        var idx = args[args.length - 1];\n\n        if (hasValue) {\n          data.setItemLayout(idx, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(idx, [NaN, NaN]);\n        }\n      });\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/simpleLayout.js\n// module id = 414\n// module chunks = 0 1","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/circularLayout.js\n// module id = 415\n// module chunks = 0 1","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.normal.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/forceLayout.js\n// module id = 416\n// module chunks = 0 1","var vec2 = require(\"zrender/lib/core/vector\");\n\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/forceHelper.js\n// module id = 417\n// module chunks = 0 1","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/createView.js\n// module id = 418\n// module chunks = 0 1","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/gauge.js\n// module id = 419\n// module chunks = 0 1","var List = require(\"../../data/List\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var list = new List(['value'], this);\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    } // Only use the first data item\n\n\n    list.initData(dataOpt);\n    return list;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      normal: {\n        color: 'auto'\n      }\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/gauge/GaugeSeries.js\n// module id = 420\n// module chunks = 0 1","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle.normal').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get('value', idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('itemStyle.emphasis').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: seriesModel.getData().getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/gauge/GaugeView.js\n// module id = 421\n// module chunks = 0 1","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/gauge/PointerPath.js\n// module id = 422\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerVisual(zrUtil.curry(dataColor, 'funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'funnel'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel.js\n// module id = 423\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var sum = data.getSum('value'); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      normal: {\n        show: true,\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    labelLine: {\n      normal: {\n        show: true,\n        length: 20,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      },\n      emphasis: {}\n    },\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      emphasis: {// color: 各异,\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel/FunnelSeries.js\n// module id = 424\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'normal', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel/FunnelView.js\n// module id = 425\n// module chunks = 0 1","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueArr = data.mapArray('value', function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent('value');\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get('value', idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + itemHeight);\n      y += itemHeight + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel/funnelLayout.js\n// module id = 426\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\necharts.registerVisual(parallelVisual);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/parallel.js\n// module id = 427\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js\n// module id = 428\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, dim);\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1,\n        labelInterval: axes.get(dim).getLabelInterval()\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {Object} context\n   */\n  eachActiveState: function (data, callback, context) {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var values = data.getValues(dimensions, i);\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var dimName = dimensions[j];\n          var state = axesMap.get(dimName).model.getActiveState(values[j], j);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback.call(context, activeState, i);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/Parallel.js\n// module id = 429\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/ParallelAxis.js\n// module id = 430\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/ParallelModel.js\n// module id = 431\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null) {\n      return 'inactive';\n    }\n\n    for (var i = 0, len = activeIntervals.length; i < len; i++) {\n      if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n        return 'active';\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/parallel/AxisModel.js\n// module id = 432\n// module chunks = 0 1","require(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/parallelAxis.js\n// module id = 433\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected',\n  update: 'updateVisual'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/parallelAxisAction.js\n// module id = 434\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n\n  /**\n   * @override\n   */\n  updateVisual: function (axisModel, ecModel, api, payload) {\n    this._brushController && this._brushController.updateCovers(getCoverInfoList(axisModel));\n  },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/ParallelAxisView.js\n// module id = 435\n// module chunks = 0 1","var List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.normal.color',\n  getInitialData: function (option, ecModel) {\n    var parallelModel = ecModel.getComponent('parallel', this.get('parallelIndex'));\n    var parallelAxisIndices = parallelModel.parallelAxisIndex;\n    var rawData = option.data;\n    var modelDims = parallelModel.dimensions;\n    var dataDims = generateDataDims(modelDims, rawData);\n    var dataDimsInfo = zrUtil.map(dataDims, function (dim, dimIndex) {\n      var modelDimsIndex = zrUtil.indexOf(modelDims, dim);\n      var axisModel = modelDimsIndex >= 0 && ecModel.getComponent('parallelAxis', parallelAxisIndices[modelDimsIndex]);\n\n      if (axisModel && axisModel.get('type') === 'category') {\n        translateCategoryValue(axisModel, dim, rawData);\n        return {\n          name: dim,\n          type: 'ordinal'\n        };\n      } else if (modelDimsIndex < 0) {\n        return completeDimensions.guessOrdinal(rawData, dimIndex) ? {\n          name: dim,\n          type: 'ordinal'\n        } : dim;\n      } else {\n        return dim;\n      }\n    });\n    var list = new List(dataDimsInfo, this);\n    list.initData(rawData); // Anication is forbiden in progressive data mode.\n\n    if (this.option.progressive) {\n      this.option.animation = false;\n    }\n\n    return list;\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      normal: {\n        show: false\n      },\n      emphasis: {\n        show: false\n      }\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      normal: {\n        width: 1,\n        opacity: 0.45,\n        type: 'solid'\n      }\n    },\n    progressive: false,\n    // 100\n    smooth: false,\n    animationEasing: 'linear'\n  }\n});\n\nfunction translateCategoryValue(axisModel, dim, rawData) {\n  var axisData = axisModel.get('data');\n  var numberDim = convertDimNameToNumber(dim);\n\n  if (axisData && axisData.length) {\n    zrUtil.each(rawData, function (dataItem) {\n      if (!dataItem) {\n        return;\n      } // FIXME\n      // time consuming, should use hash?\n\n\n      var index = zrUtil.indexOf(axisData, dataItem[numberDim]);\n      dataItem[numberDim] = index >= 0 ? index : NaN;\n    });\n  } // FIXME\n  // 如果没有设置axis data, 应自动算出，或者提示。\n\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nfunction generateDataDims(modelDims, rawData) {\n  // parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  // We detect max dim by parallelModel.dimensions and fist\n  // item in rawData arbitrarily.\n  var maxDimNum = 0;\n  zrUtil.each(modelDims, function (dimName) {\n    var numberDim = convertDimNameToNumber(dimName);\n    numberDim > maxDimNum && (maxDimNum = numberDim);\n  });\n  var firstItem = rawData[0];\n\n  if (firstItem && firstItem.length - 1 > maxDimNum) {\n    maxDimNum = firstItem.length - 1;\n  }\n\n  var dataDims = [];\n\n  for (var i = 0; i <= maxDimNum; i++) {\n    dataDims.push('dim' + i);\n  }\n\n  return dataDims;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/parallel/ParallelSeries.js\n// module id = 436\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    this._renderForNormal(seriesModel, payload); // this[\n    //     seriesModel.option.progressive\n    //         ? '_renderForProgressive'\n    //         : '_renderForNormal'\n    // ](seriesModel);\n\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _renderForNormal: function (seriesModel, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var option = seriesModel.option;\n    var smooth = option.smooth ? SMOOTH : null; // Consider switch between progressive and not.\n    // oldData && oldData.__plProgressive && dataGroup.removeAll();\n\n    data.diff(oldData).add(add).update(update).remove(remove).execute(); // Update style\n\n    updateElCommon(data, smooth); // First create\n\n    if (!this._data) {\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n\n    function add(newDataIndex) {\n      addEl(data, dataGroup, newDataIndex, dimensions, coordSys, null, smooth);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(dimName, dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n}\n\nfunction updateElCommon(data, smooth) {\n  var seriesStyleModel = data.hostModel.getModel('lineStyle.normal');\n  var lineStyle = seriesStyleModel.getLineStyle();\n  data.eachItemGraphicEl(function (line, dataIndex) {\n    if (data.hasItemOption) {\n      var itemModel = data.getItemModel(dataIndex);\n      var lineStyleModel = itemModel.getModel('lineStyle.normal', seriesStyleModel);\n      lineStyle = lineStyleModel.getLineStyle(['color', 'stroke']);\n    }\n\n    line.useStyle(zrUtil.extend(lineStyle, {\n      fill: null,\n      // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n      stroke: data.getItemVisual(dataIndex, 'color'),\n      // lineStyle.opacity have been set to itemVisual in parallelVisual.\n      opacity: data.getItemVisual(dataIndex, 'opacity')\n    }));\n    line.shape.smooth = smooth;\n  });\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/parallel/ParallelView.js\n// module id = 437\n// module chunks = 0 1","var opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('parallel', function (seriesModel) {\n    var itemStyleModel = seriesModel.getModel('itemStyle.normal');\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle.normal').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    coordSys.eachActiveState(data, function (activeState, dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var opacity = opacityMap[activeState];\n\n      if (activeState === 'normal') {\n        var itemOpacity = itemModel.get(opacityAccessPath, true);\n        itemOpacity != null && (opacity = itemOpacity);\n      }\n\n      data.setItemVisual(dataIndex, 'opacity', opacity);\n    });\n    data.setVisual('color', color);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/parallel/parallelVisual.js\n// module id = 438\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey.js\n// module id = 439\n// module chunks = 0 1","var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      normal: {\n        show: true,\n        position: 'right',\n        color: '#000',\n        fontSize: 12\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1,\n        borderColor: '#333'\n      }\n    },\n    lineStyle: {\n      normal: {\n        color: '#314656',\n        opacity: 0.2,\n        curveness: 0.5\n      },\n      emphasis: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey/SankeySeries.js\n// module id = 440\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle.normal');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var n2Layout = edge.node2.getLayout();\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = n1Layout.x + n1Layout.dx;\n      var y1 = n1Layout.y + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = n2Layout.x;\n      var y2 = n2Layout.y + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('lineStyle.emphasis').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect  for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      var rect = new graphic.Rect({\n        shape: {\n          x: layout.x,\n          y: layout.y,\n          width: node.getLayout().dx,\n          height: node.getLayout().dy\n        },\n        style: itemModel.getModel('itemStyle.normal').getItemStyle()\n      });\n      var hoverStyle = node.getModel('itemStyle.emphasis').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey/SankeyView.js\n// module id = 441\n// module chunks = 0 1","var layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/array/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file The layout algorithm of sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, nodeWidth, width) {\n  var remainNodes = nodes;\n  var nextNode = null;\n  var x = 0;\n  var kx = 0;\n\n  while (remainNodes.length) {\n    nextNode = [];\n\n    for (var i = 0, len = remainNodes.length; i < len; i++) {\n      var node = remainNodes[i];\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n\n      for (var j = 0, lenj = node.outEdges.length; j < lenj; j++) {\n        nextNode.push(node.outEdges[j].node2);\n      }\n    }\n\n    remainNodes = nextNode;\n    ++x;\n  }\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // if the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a === b ? 0 : NaN;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey/sankeyLayout.js\n// module id = 442\n// module chunks = 0 1","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    nodes.sort(function (a, b) {\n      return a.getLayout().value - b.getLayout().value;\n    });\n    var minValue = nodes[0].getLayout().value;\n    var maxValue = nodes[nodes.length - 1].getLayout().value;\n    zrUtil.each(nodes, function (node) {\n      var mapping = new VisualMapping({\n        type: 'color',\n        mappingMethod: 'linear',\n        dataExtent: [minValue, maxValue],\n        visual: seriesModel.get('color')\n      });\n      var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n      node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n      var itemModel = node.getModel();\n      var customColor = itemModel.get('itemStyle.normal.color');\n\n      if (customColor != null) {\n        node.setVisual('color', customColor);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/sankey/sankeyVisual.js\n// module id = 443\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot.js\n// module id = 444\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: ['min', 'Q1', 'median', 'Q3', 'max'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      normal: {\n        color: '#fff',\n        borderWidth: 1\n      },\n      emphasis: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js\n// module id = 445\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nvar WhiskerPath = Path.extend({\n  type: 'whiskerInBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    for (var i in shape) {\n      if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\n        var pts = shape[i];\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        ctx.lineTo(pts[1][0], pts[1][1]);\n      }\n    }\n  }\n});\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/WhiskerBox}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Function} styleUpdater\n * @param {boolean} isInit\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction WhiskerBox(data, idx, styleUpdater, isInit) {\n  graphic.Group.call(this);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.bodyIndex;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.whiskerIndex;\n  /**\n   * @type {Function}\n   */\n\n  this.styleUpdater = styleUpdater;\n\n  this._createContent(data, idx, isInit);\n\n  this.updateData(data, idx, isInit);\n  /**\n   * Last series model.\n   * @type {module:echarts/model/Series}\n   */\n\n  this._seriesModel;\n}\n\nvar whiskerBoxProto = WhiskerBox.prototype;\n\nwhiskerBoxProto._createContent = function (data, idx, isInit) {\n  var itemLayout = data.getItemLayout(idx);\n  var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\n  var count = 0; // Whisker element.\n\n  this.add(new graphic.Polygon({\n    shape: {\n      points: isInit ? transInit(itemLayout.bodyEnds, constDim, itemLayout) : itemLayout.bodyEnds\n    },\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.bodyIndex = count++; // Box element.\n\n  var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\n    return isInit ? transInit(ends, constDim, itemLayout) : ends;\n  });\n  this.add(new WhiskerPath({\n    shape: makeWhiskerEndsShape(whiskerEnds),\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.whiskerIndex = count++;\n};\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nfunction makeWhiskerEndsShape(whiskerEnds) {\n  // zr animation only support 2-dim array.\n  var shape = {};\n  zrUtil.each(whiskerEnds, function (ends, i) {\n    shape['ends' + i] = ends;\n  });\n  return shape;\n}\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\nwhiskerBoxProto.updateData = function (data, idx, isInit) {\n  var seriesModel = this._seriesModel = data.hostModel;\n  var itemLayout = data.getItemLayout(idx);\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps']; // this.childAt(this.bodyIndex).stopAnimation(true);\n  // this.childAt(this.whiskerIndex).stopAnimation(true);\n\n  updateMethod(this.childAt(this.bodyIndex), {\n    shape: {\n      points: itemLayout.bodyEnds\n    }\n  }, seriesModel, idx);\n  updateMethod(this.childAt(this.whiskerIndex), {\n    shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)\n  }, seriesModel, idx);\n  this.styleUpdater.call(null, this, data, idx);\n};\n\nzrUtil.inherits(WhiskerBox, graphic.Group);\n/**\n * @constructor\n * @alias module:echarts/chart/helper/WhiskerBoxDraw\n */\n\nfunction WhiskerBoxDraw(styleUpdater) {\n  this.group = new graphic.Group();\n  this.styleUpdater = styleUpdater;\n}\n\nvar whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nwhiskerBoxDrawProto.updateData = function (data) {\n  var group = this.group;\n  var oldData = this._data;\n  var styleUpdater = this.styleUpdater;\n  data.diff(oldData).add(function (newIdx) {\n    if (data.hasValue(newIdx)) {\n      var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n    if (!data.hasValue(newIdx)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\n    } else {\n      symbolEl.updateData(data, newIdx);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && group.remove(el);\n  }).execute();\n  this._data = data;\n};\n/**\n * Remove symbols.\n * @param {module:echarts/data/List} data\n */\n\n\nwhiskerBoxDrawProto.remove = function () {\n  var group = this.group;\n  var data = this._data;\n  this._data = null;\n  data && data.eachItemGraphicEl(function (el) {\n    el && group.remove(el);\n  });\n};\n\nvar _default = WhiskerBoxDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/WhiskerBoxDraw.js\n// module id = 446\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(BoxplotView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var borderColor = data.getItemVisual(idx, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.style.set(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  whiskerEl.dirty();\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.style.set(itemStyle);\n  bodyEl.style.stroke = borderColor;\n  bodyEl.dirty();\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot/BoxplotView.js\n// module id = 447\n// module chunks = 0 1","var borderColorQuery = ['itemStyle', 'normal', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot/boxplotVisual.js\n// module id = 448\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var chartLayout = seriesModel.get('layout');\n  var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n  var constDim = 1 - variableDim;\n  var coordDims = ['x', 'y'];\n  var vDims = [];\n  var cDim;\n  zrUtil.each(data.dimensions, function (dimName) {\n    var dimInfo = data.getDimensionInfo(dimName);\n    var coordDim = dimInfo.coordDim;\n\n    if (coordDim === coordDims[constDim]) {\n      vDims.push(dimName);\n    } else if (coordDim === coordDims[variableDim]) {\n      cDim = dimName;\n    }\n  });\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  data.each([cDim].concat(vDims), function () {\n    var args = arguments;\n    var axisDimVal = args[0];\n    var idx = args[vDims.length + 1];\n    var median = getPoint(args[3]);\n    var end1 = getPoint(args[1]);\n    var end5 = getPoint(args[5]);\n    var whiskerEnds = [[end1, getPoint(args[2])], [end5, getPoint(args[4])]];\n    layEndLine(end1);\n    layEndLine(end5);\n    layEndLine(median);\n    var bodyEnds = [];\n    addBodyEnd(whiskerEnds[0][1], 0);\n    addBodyEnd(whiskerEnds[1][1], 1);\n    data.setItemLayout(idx, {\n      chartLayout: chartLayout,\n      initBaseline: median[constDim],\n      median: median,\n      bodyEnds: bodyEnds,\n      whiskerEnds: whiskerEnds\n    });\n\n    function getPoint(val) {\n      var p = [];\n      p[variableDim] = axisDimVal;\n      p[constDim] = val;\n      var point;\n\n      if (isNaN(axisDimVal) || isNaN(val)) {\n        point = [NaN, NaN];\n      } else {\n        point = coordSys.dataToPoint(p);\n        point[variableDim] += offset;\n      }\n\n      return point;\n    }\n\n    function addBodyEnd(point, start) {\n      var point1 = point.slice();\n      var point2 = point.slice();\n      point1[variableDim] += halfWidth;\n      point2[variableDim] -= halfWidth;\n      start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n    }\n\n    function layEndLine(endCenter) {\n      var line = [endCenter.slice(), endCenter.slice()];\n      line[0][variableDim] -= halfWidth;\n      line[1][variableDim] += halfWidth;\n      whiskerEnds.push(line);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/boxplot/boxplotLayout.js\n// module id = 449\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick.js\n// module id = 450\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      normal: {\n        color: '#c23531',\n        // 阳线 positive\n        color0: '#314656',\n        // 阴线 negative     '#c23531', '#314656'\n        borderWidth: 1,\n        // FIXME\n        // ec2中使用的是lineStyle.color 和 lineStyle.color0\n        borderColor: '#c23531',\n        borderColor0: '#314656'\n      },\n      emphasis: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js\n// module id = 451\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(CandlestickView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var color = data.getItemVisual(idx, 'color');\n  var borderColor = data.getItemVisual(idx, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['color', 'color0', 'borderColor', 'borderColor0']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.useStyle(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.useStyle(itemStyle);\n  bodyEl.style.fill = color;\n  bodyEl.style.stroke = borderColor;\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/CandlestickView.js\n// module id = 452\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/preprocessor.js\n// module id = 453\n// module chunks = 0 1","var positiveBorderColorQuery = ['itemStyle', 'normal', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'normal', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'normal', 'color'];\nvar negativeColorQuery = ['itemStyle', 'normal', 'color0'];\n\nfunction _default(ecModel, api) {\n  ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect'\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var sign = data.getItemLayout(idx).sign;\n        data.setItemVisual(idx, {\n          color: itemModel.get(sign > 0 ? positiveColorQuery : negativeColorQuery),\n          borderColor: itemModel.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/candlestickVisual.js\n// module id = 454\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\nvar retrieve2 = zrUtil.retrieve2;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var chartLayout = seriesModel.get('layout');\n    var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n    var constDim = 1 - variableDim;\n    var coordDims = ['x', 'y'];\n    var vDims = [];\n    var cDim;\n    zrUtil.each(data.dimensions, function (dimName) {\n      var dimInfo = data.getDimensionInfo(dimName);\n      var coordDim = dimInfo.coordDim;\n\n      if (coordDim === coordDims[constDim]) {\n        vDims.push(dimName);\n      } else if (coordDim === coordDims[variableDim]) {\n        cDim = dimName;\n      }\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    var dataIndex = 0;\n    data.each([cDim].concat(vDims), function () {\n      var args = arguments;\n      var axisDimVal = args[0];\n      var idx = args[vDims.length + 1];\n      var openVal = args[1];\n      var closeVal = args[2];\n      var lowestVal = args[3];\n      var highestVal = args[4];\n      var ocLow = Math.min(openVal, closeVal);\n      var ocHigh = Math.max(openVal, closeVal);\n      var ocLowPoint = getPoint(ocLow);\n      var ocHighPoint = getPoint(ocHigh);\n      var lowestPoint = getPoint(lowestVal);\n      var highestPoint = getPoint(highestVal);\n      var whiskerEnds = [[subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint)], [subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint)]];\n      var bodyEnds = [];\n      addBodyEnd(ocHighPoint, 0);\n      addBodyEnd(ocLowPoint, 1);\n      var sign;\n\n      if (openVal > closeVal) {\n        sign = -1;\n      } else if (openVal < closeVal) {\n        sign = 1;\n      } else {\n        // If close === open, compare with close of last record\n        if (dataIndex > 0) {\n          sign = data.getItemModel(dataIndex - 1).get()[2] <= closeVal ? 1 : -1;\n        } else {\n          // No record of previous, set to be positive\n          sign = 1;\n        }\n      }\n\n      data.setItemLayout(idx, {\n        chartLayout: chartLayout,\n        sign: sign,\n        initBaseline: openVal > closeVal ? ocHighPoint[constDim] : ocLowPoint[constDim],\n        // open point.\n        bodyEnds: bodyEnds,\n        whiskerEnds: whiskerEnds,\n        brushRect: makeBrushRect()\n      });\n      ++dataIndex;\n\n      function getPoint(val) {\n        var p = [];\n        p[variableDim] = axisDimVal;\n        p[constDim] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[variableDim] = subPixelOptimize(point1[variableDim] + candleWidth / 2, 1, false);\n        point2[variableDim] = subPixelOptimize(point2[variableDim] - candleWidth / 2, 1, true);\n        start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n      }\n\n      function makeBrushRect() {\n        var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n        var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n        pmin[variableDim] -= candleWidth / 2;\n        pmax[variableDim] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: constDim ? candleWidth : pmax[0] - pmin[0],\n          height: constDim ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[variableDim] = subPixelOptimize(point[variableDim], 1);\n        return point;\n      }\n    }, true);\n  });\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/candlestick/candlestickLayout.js\n// module id = 455\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\necharts.registerVisual(zrUtil.curry(visualSymbol, 'effectScatter', 'circle', null));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'effectScatter'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/effectScatter.js\n// module id = 456\n// module chunks = 0 1","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    var list = createListFromArray(option.data, this, ecModel);\n    return list;\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     normal: {\n    //         opacity: 1\n    //     }\n    // }\n\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js\n// module id = 457\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateLayout: function () {\n    this._symbolDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js\n// module id = 458\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/EffectSymbol.js\n// module id = 459\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines.js\n// module id = 460\n// module chunks = 0 1","var SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// Convert [ [{coord: []}, {coord: []}] ]\n// to [ { coords: [[]] } ]\nfunction preprocessOption(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = zrUtil.map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return zrUtil.mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.normal.color',\n  init: function (option) {\n    // Not using preprocessor because mergeOption may not have series.type\n    preprocessOption(option);\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    preprocessOption(option);\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.normal.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      normal: {\n        show: false,\n        position: 'end' // distance: 5,\n        // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n      }\n    },\n    lineStyle: {\n      normal: {\n        opacity: 0.5\n      }\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines/LinesSeries.js\n// module id = 461\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var lineDraw = this._lineDraw;\n    var hasEffect = seriesModel.get('effect.show');\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.get('large') && data.count() >= seriesModel.get('largeThreshold');\n\n    if (hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLarge !== this._isLarge) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLarge ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLarge = isLarge;\n    }\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (hasEffect && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    this.group.add(lineDraw.group);\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n  },\n  updateLayout: function (seriesModel, ecModel, api) {\n    this._lineDraw.updateLayout(seriesModel); // Not use motion when dragging or zooming\n\n\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove(api, true); // Clear motion when lineDraw is removed\n\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines/LinesView.js\n// module id = 462\n// module chunks = 0 1","var Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/EffectPolyline.js\n// module id = 463\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var isPolyline = shape.polyline;\n\n    for (var i = 0; i < segs.length; i++) {\n      var seg = segs[i];\n\n      if (isPolyline) {\n        path.moveTo(seg[0][0], seg[0][1]);\n\n        for (var j = 1; j < seg.length; j++) {\n          path.lineTo(seg[j][0], seg[j][1]);\n        }\n      } else {\n        path.moveTo(seg[0][0], seg[0][1]);\n\n        if (seg.length > 2) {\n          path.quadraticCurveTo(seg[2][0], seg[2][1], seg[1][0], seg[1][1]);\n        } else {\n          path.lineTo(seg[1][0], seg[1][1]);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var isPolyline = shape.polyline;\n    var lineWidth = Math.max(this.style.lineWidth, 1); // Not consider transform\n\n    for (var i = 0; i < segs.length; i++) {\n      var seg = segs[i];\n\n      if (isPolyline) {\n        for (var j = 1; j < seg.length; j++) {\n          if (lineContain.containStroke(seg[j - 1][0], seg[j - 1][1], seg[j][0], seg[j][1], lineWidth, x, y)) {\n            return i;\n          }\n        }\n      } else {\n        if (seg.length > 2) {\n          if (quadraticContain.containStroke(seg[0][0], seg[0][1], seg[2][0], seg[2][1], seg[1][0], seg[1][1], lineWidth, x, y)) {\n            return i;\n          }\n        } else {\n          if (lineContain.containStroke(seg[0][0], seg[0][1], seg[1][0], seg[1][1], lineWidth, x, y)) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n  this._lineEl = new LargeLineShape();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = this._lineEl;\n  var seriesModel = data.hostModel;\n  lineEl.setShape({\n    segs: data.mapArray(data.getItemLayout),\n    polyline: seriesModel.get('polyline')\n  });\n  lineEl.useStyle(seriesModel.getModel('lineStyle.normal').getLineStyle());\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill'); // Enable tooltip\n  // PENDING May have performance issue when path is extremely large\n\n  lineEl.seriesIndex = seriesModel.seriesIndex;\n  lineEl.on('mousemove', function (e) {\n    lineEl.dataIndex = null;\n    var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n    if (dataIndex > 0) {\n      // Provide dataIndex for tooltip\n      lineEl.dataIndex = dataIndex;\n    }\n  }); // Add back\n\n  this.group.add(lineEl);\n};\n\nlargeLineProto.updateLayout = function (seriesModel) {\n  var data = seriesModel.getData();\n\n  this._lineEl.setShape({\n    segs: data.mapArray(data.getItemLayout)\n  });\n};\n\nlargeLineProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/LargeLineDraw.js\n// module id = 464\n// module chunks = 0 1","function _default(ecModel) {\n  ecModel.eachSeriesByType('lines', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var lineData = seriesModel.getData(); // FIXME Use data dimensions ?\n\n    lineData.each(function (idx) {\n      var itemModel = lineData.getItemModel(idx);\n      var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.get('coords');\n      var pts = [];\n\n      if (seriesModel.get('polyline')) {\n        for (var i = 0; i < coords.length; i++) {\n          pts.push(coordSys.dataToPoint(coords[i]));\n        }\n      } else {\n        pts[0] = coordSys.dataToPoint(coords[0]);\n        pts[1] = coordSys.dataToPoint(coords[1]);\n        var curveness = itemModel.get('lineStyle.normal.curveness');\n\n        if (+curveness) {\n          pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n        }\n      }\n\n      lineData.setItemLayout(idx, pts);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines/linesLayout.js\n// module id = 465\n// module chunks = 0 1","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('lines', function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var opacityQuery = 'lineStyle.normal.opacity'.split('.');\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n    data.each(function (idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/lines/linesVisual.js\n// module id = 466\n// module chunks = 0 1","require(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/heatmap.js\n// module id = 467\n// module chunks = 0 1","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js\n// module id = 468\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(coordSys, seriesModel, api);\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  dispose: function () {},\n  _renderOnCartesianAndCalendar: function (coordSys, seriesModel, api) {\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var width = xAxis.getBandWidth();\n      var height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle.normal';\n    var hoverItemStyleQuery = 'itemStyle.emphasis';\n    var labelQuery = 'label.normal';\n    var hoverLabelQuery = 'label.emphasis';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel('label.normal');\n    var hoverLabelModel = seriesModel.getModel('label.emphasis');\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0], seriesModel.coordDimToDataDim('value')[0]] : [seriesModel.coordDimToDataDim('time')[0], seriesModel.coordDimToDataDim('value')[0]];\n    data.each(function (idx) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          return;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          return;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    });\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform().transform;\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var points = data.mapArray(['lng', 'lat', 'value'], function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/heatmap/HeatmapView.js\n// module id = 469\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js\n// module id = 470\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar barLayoutGrid = require(\"../layout/barGrid\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'pictorialBar'));\necharts.registerVisual(zrUtil.curry(visualSymbol, 'pictorialBar', 'roundRect', null));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pictorialBar.js\n// module id = 471\n// module chunks = 0 1","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/PictorialBarSeries.js\n// module id = 472\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/bar/PictorialBarView.js\n// module id = 473\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'themeRiver'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver.js\n// module id = 474\n// module chunks = 0 1","var Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/singleCreator.js\n// module id = 475\n// module chunks = 0 1","var SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        var dim = this.dimension;\n\n        this._axis.scale.unionExtentFromData(data, seriesModel.coordDimToDataDim(dim));\n\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/Single.js\n// module id = 476\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n  /**\n   * @type {number}\n   */\n\n  this._labelInterval = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/SingleAxis.js\n// module id = 477\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"./singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar getInterval = AxisBuilder.getInterval;\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel, layout.labelInterval);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var p1 = [];\n    var p2 = [];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/SingleAxisView.js\n// module id = 478\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/AxisModel.js\n// module id = 479\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 480\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 481\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 482\n// module chunks = 0 1","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../axis/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js\n// module id = 483\n// module chunks = 0 1","var completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/array/nest\");\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var dimensions = [];\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type');\n    dimensions = [{\n      name: 'time',\n      // FIXME common?\n      type: axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float'\n    }, {\n      name: 'value',\n      type: 'float'\n    }, {\n      name: 'name',\n      type: 'ordinal'\n    }]; // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    });\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    dimensions = completeDimensions(dimensions, data);\n    var list = new List(dimensions, this);\n    list.initData(data, nameList);\n    return list;\n  },\n\n  /**\n   * Used by single coordinate\n   *\n   * @param {string} axisDim  the dimension for single coordinate\n   * @return {Array.<string> } specified dimensions on the axis.\n   */\n  coordDimToDataDim: function (axisDim) {\n    return ['time'];\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get('time', index1) - data.get('time', index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.get('name', dataIndex);\n    var htmlValue = data.get('value', dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      normal: {\n        margin: 4,\n        textAlign: 'right',\n        show: true,\n        position: 'left',\n        color: '#000',\n        fontSize: 11\n      },\n      emphasis: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js\n// module id = 484\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label.normal');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('itemStyle.emphasis');\n      var itemStyleModel = itemModel.getModel('itemStyle.normal');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js\n// module id = 485\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get('time', idx));\n      pt[1] = data.get('value', idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js\n// module id = 486\n// module chunks = 0 1","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js\n// module id = 487\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar barGrid = require(\"../layout/barGrid\");\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle', 'normal'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['itemStyle', 'emphasis'];\nvar LABEL_NORMAL = ['label', 'normal'];\nvar LABEL_EMPHASIS = ['label', 'emphasis']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    data.diff(oldData).add(function (newIdx) {\n      data.hasValue(newIdx) && createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      data.hasValue(newIdx) ? createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data) : el && group.remove(el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currLabelValueDim;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currLabelValueDim = findLabelValueDim(data);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n\n    if (currLabelValueDim != null) {\n      graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n        autoColor: currVisualColor,\n        isRectText: true\n      });\n      itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), data.get(currLabelValueDim, dataIndexInside)) : null;\n    }\n\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n\n    if (currLabelValueDim != null) {\n      graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n        isRectText: true\n      }, true);\n      itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), data.get(currLabelValueDim, dataIndexInside)) : null;\n    }\n\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return barGrid.getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/custom.js\n// module id = 488\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/prepareCustom.js\n// module id = 489\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/prepareCustom.js\n// module id = 490\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/single/prepareCustom.js\n// module id = 491\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/prepareCustom.js\n// module id = 492\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/calendar/prepareCustom.js\n// module id = 493\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/graphic.js\n// module id = 494\n// module chunks = 0 1","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/grid.js\n// module id = 495\n// module chunks = 0 1","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legendScroll.js\n// module id = 496\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 497\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 498\n// module chunks = 0 1","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 499\n// module chunks = 0 1","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = 500\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = 501\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = 502\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip.js\n// module id = 503\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 504\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipView.js\n// module id = 505\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 506\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/polar.js\n// module id = 507\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var angleAxis = polar.getAngleAxis();\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    var valueAxisStart = valueAxis.getExtent()[0];\n    var valueMax = valueAxis.model.get('max');\n    var valueMin = valueAxis.model.get('min');\n    var coordDims = [seriesModel.coordDimToDataDim('radius')[0], seriesModel.coordDimToDataDim('angle')[0]];\n    var coords = data.mapArray(coordDims, function (radius, angle) {\n      return polar.dataToPoint([radius, angle]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = polar.pointToCoord(coords[idx]);\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle;\n\n      if (valueAxis.dim === 'radius') {\n        // radial sector\n        r0 = lastCoordOrigin;\n        r = coord[0];\n        startAngle = (-coord[1] + columnOffset) * Math.PI / 180;\n        endAngle = startAngle + columnWidth * Math.PI / 180;\n\n        if (Math.abs(r) < barMinHeight) {\n          r = r0 + (r < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoordsOrigin[stackId][idx][sign] = r;\n      } else {\n        // tangential sector\n        r0 = coord[0] + columnOffset;\n        r = r0 + columnWidth; // clamp data if min or max is defined for valueAxis\n\n        if (valueMax != null) {\n          value = Math.min(value, valueMax);\n        }\n\n        if (valueMin != null) {\n          value = Math.max(value, valueMin);\n        }\n\n        var angle = angleAxis.dataToAngle(value);\n\n        if (Math.abs(angle - lastCoordOrigin) < barMinAngle) {\n          angle = lastCoordOrigin - (value < 0 ? -1 : 1) * barMinAngle;\n        }\n\n        startAngle = -lastCoordOrigin * Math.PI / 180;\n        endAngle = -angle * Math.PI / 180; // if the previous stack is at the end of the ring,\n        // add a round to differentiate it from origin\n\n        var extent = angleAxis.getExtent();\n        var stackCoord = angle;\n\n        if (stackCoord === extent[0] && value > 0) {\n          stackCoord = extent[1];\n        } else if (stackCoord === extent[1] && value < 0) {\n          stackCoord = extent[0];\n        }\n\n        lastStackCoordsOrigin[stackId][idx][sign] = stackCoord;\n      }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n    }, true);\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/layout/barPolar.js\n// module id = 508\n// module chunks = 0 1","var RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/Polar.js\n// module id = 509\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/RadiusAxis.js\n// module id = 510\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/AngleAxis.js\n// module id = 511\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/PolarModel.js\n// module id = 512\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/polar/AxisModel.js\n// module id = 513\n// module chunks = 0 1","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/angleAxis.js\n// module id = 514\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n\n    if (angleAxis.type !== 'category') {\n      // Remove the last tick which will overlap the first tick\n      ticksAngles.pop();\n    }\n\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngle) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngle)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var axis = angleAxisModel.axis;\n    var categoryData = angleAxisModel.get('data');\n    var labelModel = angleAxisModel.getModel('axisLabel');\n    var labels = angleAxisModel.getFormattedLabels();\n    var labelMargin = labelModel.get('margin');\n    var labelsAngles = axis.getLabelsCoords(); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelsAngles[i]]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (categoryData && categoryData[i] && categoryData[i].textStyle) {\n        labelModel = new Model(categoryData[i].textStyle, labelModel, labelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labels[i],\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i])\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0] * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i] * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i] * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AngleAxisView.js\n// module id = 515\n// module chunks = 0 1","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/radiusAxis.js\n// module id = 516\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i]\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i],\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i];\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/RadiusAxisView.js\n// module id = 517\n// module chunks = 0 1","var formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js\n// module id = 518\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/geo.js\n// module id = 519\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      normal: {\n        show: false,\n        color: '#000'\n      },\n      emphasis: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      }\n    },\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderWidth: 0.5,\n        borderColor: '#444',\n        color: '#eee'\n      },\n      emphasis: {\n        // 也是选中样式\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/GeoModel.js\n// module id = 520\n// module chunks = 0 1","var MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/geo/GeoView.js\n// module id = 521\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush.js\n// module id = 522\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/preprocessor.js\n// module id = 523\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/visualEncoding.js\n// module id = 524\n// module chunks = 0 1","var polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/selector.js\n// module id = 525\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/BrushModel.js\n// module id = 526\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n\n  /**\n   * @override\n   */\n  updateLayout: updateController,\n\n  /**\n   * @override\n   */\n  updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/BrushView.js\n// module id = 527\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/brush/brushAction.js\n// module id = 528\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype;\n\nproto.render = proto.updateView = proto.updateLayout = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/Brush.js\n// module id = 529\n// module chunks = 0 1","require(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/calendar.js\n// module id = 530\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle.normal').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time <= range.end.time)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/calendar/Calendar.js\n// module id = 531\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      normal: {\n        color: '#fff',\n        borderWidth: 1,\n        borderColor: '#ccc'\n      }\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/calendar/CalendarModel.js\n// module id = 532\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle.normal').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/calendar/CalendarView.js\n// module id = 533\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/title.js\n// module id = 534\n// module chunks = 0 1","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom.js\n// module id = 535\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 536\n// module chunks = 0 1","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js\n// module id = 537\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime);\n\n    if (realtime) {\n      realtime && this._dispatchZoomAction();\n    }\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false);\n\n    this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SliderZoomView.js\n// module id = 538\n// module chunks = 0 1","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js\n// module id = 539\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Notice: origin this._range should be maintained, and should not be re-fetched\n    // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n    // info will be missed because of 'throttle' of this.dispatchAction.\n\n    if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n      this._range = dataZoomModel.getPercentRange();\n    } // Reset controllers.\n\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    return this._range = range;\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    return this._range = range;\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/InsideZoomView.js\n// module id = 540\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction shouldRecordRange(payload, dataZoomId) {\n  if (payload && payload.type === 'dataZoom' && payload.batch) {\n    for (var i = 0, len = payload.batch.length; i < len; i++) {\n      if (payload.batch[i].dataZoomId === dataZoomId) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {};\n  var typePriority = {\n    'true': 2,\n    'move': 1,\n    'false': 0,\n    'undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n    typePriority[oneType] > typePriority[controlType] && (controlType = oneType); // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.shouldRecordRange = shouldRecordRange;\nexports.generateCoordId = generateCoordId;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/roams.js\n// module id = 541\n// module chunks = 0 1","require(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap.js\n// module id = 542\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMapContinuous.js\n// module id = 543\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, true, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/ContinuousModel.js\n// module id = 544\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var dim = data.getDimension(visualMapModel.getDataDimension(data));\n    var value = data.get(dim, el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/ContinuousView.js\n// module id = 545\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMapPiecewise.js\n// module id = 546\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, true, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/PiecewiseModel.js\n// module id = 547\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/visualMap/PiecewiseView.js\n// module id = 548\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/markPoint.js\n// module id = 549\n// module chunks = 0 1","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      normal: {\n        show: true,\n        position: 'inside'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 2\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkPointModel.js\n// module id = 550\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  updateLayout: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkPointView.js\n// module id = 551\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/markLine.js\n// module id = 552\n// module chunks = 0 1","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      normal: {\n        show: true,\n        position: 'end'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    lineStyle: {\n      normal: {\n        type: 'dashed'\n      },\n      emphasis: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkLineModel.js\n// module id = 553\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  updateLayout: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.normal.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkLineView.js\n// module id = 554\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/markArea.js\n// module id = 555\n// module chunks = 0 1","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      normal: {\n        show: true,\n        position: 'top'\n      },\n      emphasis: {\n        show: true,\n        position: 'top'\n      }\n    },\n    itemStyle: {\n      normal: {\n        // color and borderColor default to use color from series\n        // color: 'auto'\n        // borderColor: 'auto'\n        borderWidth: 0\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkAreaModel.js\n// module id = 556\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y], true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  updateLayout: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesName = seriesModel.name;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesName) || areaGroupMap.set(seriesName, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle.normal').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/marker/MarkAreaView.js\n// module id = 557\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline.js\n// module id = 558\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/preprocessor.js\n// module id = 559\n// module chunks = 0 1","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/typeDefaulter.js\n// module id = 560\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/timelineAction.js\n// module id = 561\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      normal: {\n        show: true,\n        interval: 'auto',\n        rotate: 0,\n        // formatter: null,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#304654'\n      },\n      emphasis: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: '#304654',\n        borderWidth: 1\n      },\n      emphasis: {\n        color: '#c23531'\n      }\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      normal: {\n        color: '#304654',\n        borderColor: '#304654',\n        borderWidth: 1\n      },\n      emphasis: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, modelUtil.dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/SliderTimelineModel.js\n// module id = 562\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {\n      normal: {},\n      emphasis: {}\n    },\n    label: {\n      normal: {\n        color: '#000'\n      },\n      emphasis: {}\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/TimelineModel.js\n// module id = 563\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.normal.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show');\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.normal.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showControl = controlModel.get('show', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.normal.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.normal.verticalAlign') || timelineModel.get('label.normal.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transfrom to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType);\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n\n    this._customizeScale(scale, data);\n\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _customizeScale: function (scale, data) {\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    scale.getTicksLabels = function () {\n      return zrUtil.map(this.getTicks(), scale.getLabel, scale);\n    };\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    each(ticks, function (value, dataIndex) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(dataIndex);\n      var itemStyleModel = itemModel.getModel('itemStyle.normal');\n      var hoverStyleModel = itemModel.getModel('itemStyle.emphasis');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, dataIndex)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = dataIndex;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = timelineModel.getModel('label.normal');\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    var labels = axisHelper.getFormattedLabels(axis, labelModel.get('formatter'));\n    var labelInterval = axis.getLabelInterval();\n    each(ticks, function (tick, dataIndex) {\n      if (axis.isLabelIgnored(dataIndex, labelInterval)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label.normal');\n      var hoverLabelModel = itemModel.getModel('label.emphasis');\n      var tickCoord = axis.dataToCoord(tick);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labels[dataIndex],\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle.normal').getItemStyle();\n    var hoverStyle = timelineModel.getModel('controlStyle.emphasis').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/SliderTimelineView.js\n// module id = 564\n// module chunks = 0 1","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/TimelineView.js\n// module id = 565\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._autoLabelInterval;\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var timelineModel = this.model;\n    var labelModel = timelineModel.getModel('label.normal');\n    var labelInterval = labelModel.get('interval');\n\n    if (labelInterval != null && labelInterval != 'auto') {\n      return labelInterval;\n    }\n\n    var labelInterval = this._autoLabelInterval;\n\n    if (!labelInterval) {\n      labelInterval = this._autoLabelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisHelper.getFormattedLabels(this, labelModel.get('formatter')), labelModel.getFont(), timelineModel.get('orient') === 'horizontal' ? 0 : 90, labelModel.get('rotate'));\n    }\n\n    return labelInterval;\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @public\n   * @param  {number} idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/timeline/TimelineAxis.js\n// module id = 566\n// module chunks = 0 1","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox.js\n// module id = 567\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxModel.js\n// module id = 568\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxView.js\n// module id = 569\n// module chunks = 0 1","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js\n// module id = 570\n// module chunks = 0 1","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/MagicType.js\n// module id = 571\n// module chunks = 0 1","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataView.js\n// module id = 572\n// module chunks = 0 1","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js\n// module id = 573\n// module chunks = 0 1","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoomSelect.js\n// module id = 574\n// module chunks = 0 1","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js\n// module id = 575\n// module chunks = 0 1","var DataZoomView = require(\"./DataZoomView\");\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js\n// module id = 576\n// module chunks = 0 1","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/Restore.js\n// module id = 577\n// module chunks = 0 1","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/vml/vml.js\n// module id = 578\n// module chunks = 0 1","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$inject.measureText(function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/vml/graphic.js\n// module id = 579\n// module chunks = 0 1","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/vml/Painter.js\n// module id = 580\n// module chunks = 0 1","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/svg.js\n// module id = 581\n// module chunks = 0 1","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n */\n\n\nvar SVGPainter = function (root, storage) {\n  this.root = root;\n  this.storage = storage;\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style['user-select'] = 'none';\n  this.gradientManager = new GradientManager(svgRoot);\n  this.clipPathManager = new ClippathManager(svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow: hidden;';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize();\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable);\n          var el = getSvgElement(displayable) || getTextSvgElement(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable, el); // Update gradient\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function () {\n    var width = this._getWidth();\n\n    var height = this._getHeight();\n\n    if (this._width !== width && this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = this._viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n  getWidth: function () {\n    return this._getWidth();\n  },\n  getHeight: function () {\n    return this._getHeight();\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToSvg: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:img/svg+xml;utf-8,' + unescape(html);\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/Painter.js\n// module id = 582\n// module chunks = 0 1","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/arrayDiff2.js\n// module id = 583\n// module chunks = 0 1","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(svgRoot) {\n  Definable.call(this, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/helper/GradientManager.js\n// module id = 584\n// module chunks = 0 1","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(svgRoot) {\n  Definable.call(this, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n * @param {SVGElement}  svgElement  SVG element of displayable\n */\n\nClippathManager.prototype.update = function (displayable, svgElement) {\n  this.updateDom(svgElement, displayable.__clipPaths, false);\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    clipPathEl.appendChild(pathEl);\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/svg/helper/ClippathManager.js\n// module id = 585\n// module chunks = 0 1","import \"./index.less\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport CommonHeader from \"../common-component/common-header/index\";\r\nimport List from \"./component/list/\";\r\nimport Detail from \"./component/detail/\";\r\n\r\nexport default class Evaluating extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"pc-price-market\">\r\n          <CommonHeader classIco=\"nav-item-active\" />\r\n          <div className=\"page-wrap\">\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route path=\"/detail\" component={Detail} />\r\n                <Route path=\"/\" component={List} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nReactDOM.render(<Evaluating />, document.getElementById(\"root\"));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pc/evaluating/index.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/less-loader/dist/cjs.js!./index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pc/evaluating/index.less\n// module id = 1160\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"/* 项目公共样式 */\\nbody,\\nimg,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nul,\\nli,\\np,\\nbutton,\\ninput,\\ntable,\\ntr,\\ntd,\\nth {\\n  margin: 0;\\n  padding: 0;\\n}\\nhtml,\\nbody {\\n  min-width: 1200px;\\n}\\nbody {\\n  font-family: \\\"Microsoft YaHei\\\", \\\"\\\\5FAE\\\\8F6F\\\\96C5\\\\9ED1\\\", Arial, sans-serif;\\n  color: #ccc;\\n  font-size: 12px;\\n  background: url(\" + require(\"../lib/app/img/common_bg.png\") + \") no-repeat center center;\\n  background-size: 100% 100%;\\n  overflow-y: auto;\\n}\\nh2 {\\n  font-size: 14px;\\n}\\nul {\\n  list-style: none;\\n}\\nimg {\\n  border: none;\\n}\\ninput,\\nbutton,\\nselect,\\noption {\\n  border: none;\\n  outline: none;\\n}\\na {\\n  text-decoration: none;\\n  color: #fff;\\n}\\nnav {\\n  /* 测试 autoprefixer */\\n  -webkit-transition: -webkit-transform 1s;\\n  transition: -webkit-transform 1s;\\n  transition: transform 1s;\\n  transition: transform 1s, -webkit-transform 1s;\\n}\\nnav.active {\\n  /* 测试 autoprefixer */\\n  -webkit-transform: translate(30px);\\n      -ms-transform: translate(30px);\\n          transform: translate(30px);\\n}\\nnav a {\\n  margin-right: 20px;\\n  color: #7265e6;\\n}\\n/* 基础样式（与项目无关） */\\n.clearfix::before,\\n.clearfix::after {\\n  content: '';\\n  display: table;\\n}\\n.clearfix::after {\\n  clear: both;\\n}\\n.pc-price-market {\\n  position: relative;\\n  width: 100%;\\n  color: #fff;\\n}\\n.pc-price-market .page-wrap {\\n  padding-top: 8px;\\n  width: 100%;\\n  text-align: center;\\n  color: #ffffff;\\n}\\n.pc-price-market .page-wrap .content {\\n  width: 812px;\\n  margin: 0 auto;\\n  padding: 50px 144px 80px;\\n  color: #000;\\n  background: #ffffff;\\n  box-shadow: 1px 0px 2px rgba(0, 0, 0, 0.41);\\n}\\n.pc-price-market .page-wrap h2 {\\n  height: 26px;\\n  line-height: 19px;\\n}\\n.pc-price-market .page-wrap p {\\n  line-height: 32px;\\n  text-align: left;\\n}\\n.pc-price-market .page-wrap .reply-detail {\\n  margin: 34px auto 54px;\\n  -webkit-box-pack: center;\\n  -webkit-justify-content: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n}\\n.container {\\n  width: 1100px;\\n  margin: 0 auto;\\n  padding: 20px 0;\\n  box-sizing: border-box;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./src/pc/evaluating/index.less\n// module id = 1161\n// module chunks = 1","import \"./index.less\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { getData } from \"../../../lib/app/js/app\";\r\nimport { PORTOCAL } from \"../../../lib/app/js/env\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: []\r\n    };\r\n  }\r\n  getListData() {\r\n    getData(`${PORTOCAL}/article/ico`)\r\n      .then(data => {\r\n        if (data.code === 4000) {\r\n          this.setState({\r\n            list: [...data.data]\r\n          });\r\n        } else {\r\n          throw new Error(data.msg);\r\n        }\r\n      })\r\n      .catch(e => {\r\n        alert(e.toString().replace(\"Error:\", \"\"));\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.getListData();\r\n  }\r\n  goWebsite(idx, e) {\r\n    e.stopPropagation();\r\n    window.open(this.state.list[idx].website);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"list-box\">\r\n        {this.state.list.length > 0 &&\r\n          this.state.list.map((item, index) => {\r\n            return (\r\n              <Link\r\n                to={{\r\n                  pathname: \"/detail\",\r\n                  search: \"?id=\" + item.id\r\n                }}\r\n                key=\"index\"\r\n                className=\"list-item\"\r\n              >\r\n                <img className=\"list-img\" src={item.img} />\r\n                <div className=\"list-info\">\r\n                  <h3 className=\"list-title\">{item.title}</h3>\r\n                  <div className=\"list-t\">目前状态：{item.assess_status}</div>\r\n                  <div className=\"list-t\">\r\n                    官网：<span\r\n                      className=\"a\"\r\n                      onClick={this.goWebsite.bind(this, index)}\r\n                    >\r\n                      {item.website}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"list-t\">时间：{item.created_at}</div>\r\n                </div>\r\n              </Link>\r\n            );\r\n          })}\r\n        {this.state.list.length == 0 && (\r\n          <div style={{ padding: \"200px 0\" }}>暂无数据</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pc/evaluating/component/list/index.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pc/evaluating/component/list/index.less\n// module id = 1163\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".list-box {\\n  box-sizing: border-box;\\n  padding: 0 140px;\\n  background: #2eafea;\\n}\\n.list-box .list-item {\\n  padding: 35px 0;\\n  border-bottom: 1px solid #fff;\\n  display: block;\\n}\\n.list-box .list-item:nth-last-child(1) {\\n  border-bottom: 0;\\n}\\n.list-box .list-img {\\n  width: 235px;\\n  height: 134px;\\n  display: inline-block;\\n  vertical-align: top;\\n  margin-right: 20px;\\n}\\n.list-box .list-info {\\n  display: inline-block;\\n  vertical-align: top;\\n  width: 565px;\\n  color: #fff;\\n  text-align: left;\\n}\\n.list-box .list-info .list-title {\\n  font-size: 18px;\\n}\\n.list-box .list-info .list-t {\\n  margin-top: 20px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./src/pc/evaluating/component/list/index.less\n// module id = 1164\n// module chunks = 1","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nimport { getData, getQuery } from \"../../../lib/app/js/app\";\r\nimport { PORTOCAL } from \"../../../lib/app/js/env\";\r\n\r\nimport ProjectIntro from \"../project-intro/index\";\r\nimport IcoPublish from \"../ico-publish/index\";\r\nimport Strcture from \"../strcture/index\";\r\nimport ProjectAnaly from \"../project-analy/index\";\r\n\r\nimport \"./index.less\";\r\nexport default class Detail extends Component {\r\n  constructor(props, content) {\r\n    super(props);\r\n    this.state = {\r\n      query: null,\r\n      viewData: null,\r\n      intro: null\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    var q = getQuery(this.props.location.search);\r\n    this.setState({\r\n      query: q\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    getData(`${PORTOCAL}/article/ico/` + this.state.query.id)\r\n      .then(data => {\r\n        if (data.code === 4000) {\r\n          this.setState({\r\n            viewData: data.data\r\n          });\r\n        } else {\r\n          throw new error(data.msg);\r\n        }\r\n      })\r\n      .catch(e => {\r\n        alert(e.toString().replace(\"Error:\", \"\"));\r\n      });\r\n  }\r\n  render() {\r\n    let cont = this.state.viewData;\r\n    let { intro } = this.state;\r\n    //console.log(cont);\r\n    return (\r\n      <div className=\"detail-box\">\r\n        {cont && (\r\n          <div className=\"detail\">\r\n            <h1 className=\"detail-title\">{cont.title}</h1>\r\n            <div className=\"detail-time\">更新于：{cont.created_at}</div>\r\n            <div className=\"detail-box1\">\r\n              <div className=\"box1-left\">\r\n                <div className=\"circle\">{cont.ico_score}</div>\r\n                <div className=\"state\">上线交易中</div>\r\n              </div>\r\n              <div className=\"box1-middle\">\r\n                <div className=\"risk-level\">\r\n                  风险等级 :{\" \"}\r\n                  <span\r\n                    className=\"risk-level-color1\"\r\n                    style={{ background: cont.risk_level_color }}\r\n                  />{\" \"}\r\n                  {cont.risk_level_name}\r\n                </div>\r\n              </div>\r\n              <div className=\"box1-right\">\r\n                <span className=\"right-item\">山鸡山鸡山鸡</span>\r\n                <br />\r\n                <span className=\"right-item\">山鸡山鸡山鸡</span>\r\n              </div>\r\n            </div>\r\n            <p className=\"remind\">郑重声明：所有 ICO 都有归 ０ 的风险，所有信息仅供参考，不构成任何投资发起</p>\r\n            <ProjectIntro\r\n              img={cont.img}\r\n              desc={cont.desc}\r\n              website={cont.website}\r\n            />\r\n            <IcoPublish\r\n              ico_assess_issue_info={cont.ico_assess_issue_info}\r\n              unit={cont.ico.unit}\r\n            />\r\n            <Strcture ico_assess_structure={cont.ico_assess_structure} />\r\n            <ProjectAnaly\r\n              ico_assess_project_analyse={cont.ico_assess_project_analyse}\r\n            />\r\n            {/* {iframeUrl && <iframe src={iframeUrl} className=\"introduce-text\" />} */}\r\n            {/* <iframe src=\"\" className=\"introduce-text\" /> */}\r\n          </div>\r\n        )}\r\n        {!cont && <div style={{ padding: \"200px 0\" }}>无法查询到数据</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pc/evaluating/component/detail/index.js","import \"./index.less\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport { getData, getQuery } from \"../../../lib/app/js/app\";\r\nimport { PORTOCAL } from \"../../../lib/app/js/env\";\r\n\r\nexport default class ProjectIntro extends Component {\r\n  render() {\r\n    let { img, desc, website } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"project-intro\">\r\n          <h2 className=\"project-intro-title\">项目概述</h2>\r\n          <img className=\"project-intro-pic\" src={img} />\r\n          <p className=\"project-intro-content\">{desc}</p>\r\n          <p className=\"project-intro-website\">官网: {website}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pc/evaluating/component/project-intro/index.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pc/evaluating/component/project-intro/index.less\n// module id = 1167\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".project-intro {\\n  margin-top: 38px;\\n  text-align: left;\\n}\\n.project-intro-title {\\n  margin-bottom: 22px;\\n}\\n.project-intro-pic {\\n  width: 658px;\\n  height: 188px;\\n}\\n.project-intro-content {\\n  margin: 22px 0;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./src/pc/evaluating/component/project-intro/index.less\n// module id = 1168\n// module chunks = 1","import \"./index.less\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport { getData, getQuery } from \"../../../lib/app/js/app\";\r\nimport { PORTOCAL } from \"../../../lib/app/js/env\";\r\n\r\nexport default class IcoPublish extends Component {\r\n  render() {\r\n    let { unit } = this.props;\r\n    let info = this.props.ico_assess_issue_info;\r\n    return (\r\n      <div>\r\n        <div className=\"ico-publish\">\r\n          <h2 className=\"ico-publish-title\">ICO发行情况</h2>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>众筹时间</th>\r\n                <th>总发行量</th>\r\n                <th>ICO量</th>\r\n                <th>接受币种</th>\r\n                <th>众筹金额</th>\r\n                <th>价格</th>\r\n                {/* <th style={{ borderRight: 0 }}>评分(10分评测)</th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {info &&\r\n                info.map(item => {\r\n                  return (\r\n                    <tr key={item.id}>\r\n                      <td>{`${item.crowdfunding_start_at.substring(\r\n                        0,\r\n                        10\r\n                      )}-${item.crowdfunding_end_at.substring(5, 10)}`}</td>\r\n                      <td>{`${item.ico_circulation / 100000000}亿${unit}`}</td>\r\n                      <td>{`${item.ico_amount / 100000000}亿${unit}`}</td>\r\n                      <td>{item.ico_accept}</td>\r\n                      <td>{`${item.ico_crowfunding_amount /\r\n                        10000}万${item.ico_crowfunding_amount_unit}等值`}</td>\r\n                      <td>{item.ico_price}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pc/evaluating/component/ico-publish/index.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pc/evaluating/component/ico-publish/index.less\n// module id = 1170\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ico-publish {\\n  margin-top: 36px;\\n}\\n.ico-publish table {\\n  margin: 0 auto;\\n  border-spacing: 0;\\n  width: 660px;\\n  color: #ffffff;\\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.67);\\n  background: rgba(255, 255, 255, 0.2);\\n}\\n.ico-publish th {\\n  font-weight: 400;\\n}\\n.ico-publish td,\\n.ico-publish th {\\n  height: 38px;\\n  border-spacing: 0;\\n}\\n.ico-publish-title {\\n  margin-bottom: 20px;\\n  text-align: left;\\n}\\n.ico-publish-table {\\n  width: 660px;\\n  height: 102px;\\n  background: rgba(255, 255, 255, 0.2);\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: center;\\n  -webkit-justify-content: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n  -webkit-align-items: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n}\\n.ico-publish-item {\\n  -webkit-box-flex: 1;\\n  -webkit-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n}\\n.ico-publish-item p {\\n  text-align: center !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./src/pc/evaluating/component/ico-publish/index.less\n// module id = 1171\n// module chunks = 1","import \"./index.less\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport { getData, getQuery } from \"../../../lib/app/js/app\";\r\nimport { PORTOCAL } from \"../../../lib/app/js/env\";\r\nimport echarts from \"echarts\";\r\n\r\nexport default class Strcture extends Component {\r\n  componentDidMount() {\r\n    let strcture = this.refs.strcture;\r\n    let myChart = echarts.init(strcture);\r\n    let strctureData = this.props.ico_assess_structure;\r\n    let value = [];\r\n    let theColor = [];\r\n    strctureData.map(item => {\r\n      value.push({ value: item.percentage });\r\n      theColor.push(item.color_value);\r\n    });\r\n\r\n    let option = {\r\n      title: {\r\n        // text: \"某站点用户访问来源\",\r\n        // subtext: \"纯属虚构\",\r\n        //x: \"left\"\r\n      },\r\n      // tooltip: {\r\n      //   trigger: \"item\",\r\n      //   formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      // },\r\n      // legend: {\r\n      //   orient: \"vertical\",\r\n      //   left: \"left\",\r\n      //   data: [\"直接访问\", \"邮件营销\", \"联盟广告\", \"视频广告\", \"搜索引擎\"]\r\n      // },\r\n      series: [\r\n        {\r\n          //name: \"访问来源\",\r\n          type: \"pie\",\r\n          radius: \"85%\",\r\n          center: [\"40%\", \"50%\"],\r\n          data: value,\r\n          color: theColor,\r\n          labelLine: {\r\n            normal: {\r\n              show: false\r\n            }\r\n          },\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n    myChart.setOption(option);\r\n  }\r\n  render() {\r\n    let { ico_assess_structure } = this.props;\r\n\r\n    return (\r\n      <div className=\"strcture\">\r\n        <h2>结构</h2>\r\n        <div className=\"strcture-chart\" ref=\"strcture\" />\r\n        <div className=\"strcture-detail\">\r\n          {ico_assess_structure &&\r\n            ico_assess_structure.map(item => {\r\n              return (\r\n                <p\r\n                  key={item.id}\r\n                >{`${item.color_name} : ${item.percentage}% , ${item.desc}`}</p>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pc/evaluating/component/strcture/index.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pc/evaluating/component/strcture/index.less\n// module id = 1173\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".strcture {\\n  width: 660px;\\n  height: 160px;\\n  margin-top: 36px;\\n  text-align: left;\\n}\\n.strcture-chart {\\n  display: inline-block;\\n  width: 260px;\\n  height: 160px;\\n  margin-right: 76px;\\n}\\n.strcture-detail {\\n  display: inline-block;\\n  height: 160px;\\n  vertical-align: bottom;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./src/pc/evaluating/component/strcture/index.less\n// module id = 1174\n// module chunks = 1","import \"./index.less\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport { getData, getQuery } from \"../../../lib/app/js/app\";\r\nimport { PORTOCAL } from \"../../../lib/app/js/env\";\r\n\r\nexport default class ProjectAnaly extends Component {\r\n  render() {\r\n    let { ico_assess_project_analyse } = this.props;\r\n    return (\r\n      <div className=\"project-analy\">\r\n        <h2 className=\"project-analy-title\">项目分数分析</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>类型</th>\r\n              <th>评测观点</th>\r\n              <th style={{ borderRight: 0 }}>评分(10分评测)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ico_assess_project_analyse &&\r\n              ico_assess_project_analyse.map(item => {\r\n                return (\r\n                  <tr key={item.id}>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.desc}</td>\r\n                    <td style={{ borderRight: 0 }}>{item.score}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n        <p className=\"analy-remind\">注：分数由项目白皮书以及整体规划评估而得出，只做投资参考。</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pc/evaluating/component/project-analy/index.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pc/evaluating/component/project-analy/index.less\n// module id = 1213\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".project-analy {\\n  margin-top: 36px;\\n}\\n.project-analy table {\\n  margin: 0 auto;\\n  border: 1px solid #e6e6e6;\\n  border-spacing: 0;\\n  width: 660px;\\n  height: 173px;\\n  color: #333333;\\n  background: #fff;\\n  box-shadow: 0px 1px 2px rgba(4, 0, 0, 0.45);\\n}\\n.project-analy td,\\n.project-analy th {\\n  height: 38px;\\n  border-bottom: 1px solid #e6e6e6;\\n  border-right: 1px solid #e6e6e6;\\n  border-spacing: 0;\\n}\\n.project-analy .analy-remind {\\n  margin-top: 14px;\\n}\\n.project-analy-title {\\n  margin-bottom: 24px;\\n  text-align: left;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./src/pc/evaluating/component/project-analy/index.less\n// module id = 1214\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pc/evaluating/component/detail/index.less\n// module id = 1215\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".detail-box {\\n  width: 820px;\\n  margin: 0 auto;\\n  box-sizing: border-box;\\n}\\n.detail-box h1,\\n.detail-box h2 {\\n  font-weight: 400;\\n}\\n.detail-box .introduce-text {\\n  width: 660px;\\n}\\n.detail {\\n  background: #1b96d1;\\n  box-sizing: border-box;\\n  padding: 30px 80px;\\n  color: #fff;\\n}\\n.detail .detail-title {\\n  font-size: 20px;\\n}\\n.detail .detail-time {\\n  font-size: 14px;\\n  margin: 20px 0;\\n}\\n.detail .detail-box1 {\\n  background: rgba(255, 255, 255, 0.2);\\n  text-align: left;\\n  box-sizing: border-box;\\n  padding: 20px 0;\\n  box-shadow: 0px 1px 2px rgba(4, 0, 0, 0.45);\\n}\\n.detail .detail-box1 .box1-left {\\n  width: 180px;\\n  display: inline-block;\\n  vertical-align: middle;\\n  height: 90px;\\n  text-align: center;\\n  padding-top: 5px;\\n  border-right: 1px solid #fff;\\n}\\n.detail .detail-box1 .circle {\\n  background: #fff;\\n  width: 60px;\\n  height: 60px;\\n  border-radius: 50%;\\n  overflow: hidden;\\n  text-align: center;\\n  line-height: 60px;\\n  color: #ff3232;\\n  font-size: 20px;\\n  display: inline-block;\\n}\\n.detail .detail-box1 .state {\\n  margin-top: 10px;\\n}\\n.detail .detail-box1 .box1-middle {\\n  width: 290px;\\n  display: inline-block;\\n  vertical-align: middle;\\n  height: 90px;\\n  line-height: 45px;\\n  box-sizing: border-box;\\n}\\n.detail .detail-box1 .box1-middle .risk-level {\\n  text-align: center;\\n}\\n.detail .detail-box1 .box1-middle .risk-level-color1,\\n.detail .detail-box1 .box1-middle .risk-level-color2 {\\n  display: inline-block;\\n  width: 20px;\\n  height: 20px;\\n}\\n.detail .detail-box1 .box1-right {\\n  width: 180px;\\n  display: inline-block;\\n  vertical-align: middle;\\n  height: 90px;\\n  text-align: center;\\n}\\n.detail .detail-box1 .box1-right .right-item {\\n  display: inline-block;\\n  padding: 5px 8px;\\n  border-radius: 15px;\\n  border: 1px solid #fff;\\n  margin: 5px 0;\\n}\\n.detail .remind {\\n  margin-top: 24px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./src/pc/evaluating/component/detail/index.less\n// module id = 1216\n// module chunks = 1"],"sourceRoot":""}